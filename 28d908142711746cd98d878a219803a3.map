{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/rot-js/lib/rot.js","assets/colors.js","assets/glyph.js","assets/dynamicGlyph.js","assets/entity/entity.js","assets/screens/gameOverScreen.js","assets/screens/winScreen.js","../node_modules/hyperapp/src/index.js","assets/screens/itemDetailDialog.js","assets/screens/itemListDialog.js","assets/screens/pickUpDialog.js","assets/screens/visibleThingsDialog.js","assets/screens/confirmation.js","assets/screens/storyScreen.js","assets/screens/helpScreen.js","assets/screens/playerStatusScreen.js","assets/repository.js","assets/item/item.js","assets/tile.js","assets/item/itemMixins.js","assets/item/items.js","assets/entity/entityMixins.js","assets/entity/entities.js","assets/dungeonMap.js","assets/level.js","assets/gameWorld.js","assets/text.js","assets/screens/playScreen.js","assets/screens/startScreen.js","assets/messageDisplay.js","assets/playerStatusDisplay.js","assets/game.js"],"names":["black","darkBlue","darkPurple","darkGreen","brown","darkGray","lightGray","white","red","orange","yellow","green","blue","indigo","pink","peach","Glyph","fg","bg","char","DynamicGlyph","name","mixins","arguments","attachedMixins","attachedMixinGroups","setupFunctions","forEach","mixin","mixinFactory","groupName","setup","push","bind","Object","assign","fun","hasOwnProperty","capitalize","prefixes","prefix","indexOf","describe","toLowerCase","Entity","x","y","level","Game","speed","description","game","alive","isAlive","hasMixin","act","getLevel","removeEntity","mod","getTimedStatusEffects","s","property","value","armor","length","Math","pow","max","newLevel","newName","newX","newY","updateEntityPosition","gameOverScreen","inputData","keyCode","VK_RETURN","window","location","reload","display","getDisplay","drawText","WinScreen","switchScreen","h","app","attributes","node","rest","children","pop","nodeName","key","state","actions","view","container","renderLock","invokeLaterStack","rootElement","oldNode","toVNode","map","globalState","clone","wiredActions","scheduleRender","wireStateToActions","element","call","childNodes","nodeType","nodeValue","render","next","patch","setTimeout","target","source","obj","i","set","path","slice","get","action","data","then","concat","getKey","setElementProp","isSVG","oldValue","setAttribute","removeAttribute","createElement","document","createTextNode","createElementNS","oncreate","appendChild","updateElement","oldProps","onupdate","removeChildren","ondestroy","removeElement","parent","cb","done","removeChild","onremove","nextSibling","insertBefore","oldElements","oldKeyed","newKeyed","oldChild","oldKey","j","newChild","newKey","recyledNode","ItemDetailDialog","item","simple","classList","add","functions","equipped","wieldable","wearable","ItemListDialog","items","masterScreen","player","title","subscreen","inc","incSelectedItem","dec","decSelectedItem","getIndex","selectedItemIndex","getItems","getState","getSelectedItem","removeItem","filter","itemToRemove","min","getInventorySize","color","marginRight","charges","weapon","isWearing","body","newValue","exitSubscreen","remove","VK_ESCAPE","exit","detailDialog","innerHTML","VK_Q","renderItemList","VK_J","VK_DOWN","VK_2","VK_K","VK_UP","VK_8","VK_W","wield","getGame","messageDisplay","wear","VK_A","use","VK_U","unequip","VK_D","addItem","getX","getY","PickUpScreen","canPickUp","setItemsAt","VisibleThingsDialog","Confirmation","text","func","cancelFunction","function","confirm","cancel","StoryScreen","p","HelpScreen","screens","screen","movement","margin","VK_PERIOD","shift","VK_COMMA","unshift","PlayerStatusScreen","getAttackValue","getDefenseValue","getSpeed","Repository","ctor","templates","randomTemplates","template","disableRandomCreation","Error","rank","probability","random","createRandom","weightMap","keys","reduce","rngWeight","RNG","getWeightedValue","create","Item","Tile","isWalkable","blocksLight","stairsUpTile","gray","stairsDownTile","floorTile","wallTile","closedDoorTile","openDoorTile","Equippable","attackValue","defenseValue","sightBoost","inventoryBoost","StatusBooster","hpUp","statusEffect","weaponRecharge","maxHpUp","_use","entity","recharge","addHp","takeDamage","addMaxHp","addTimedStatusEffect","Fireable","chargesPerShot","maxCharges","rangeDamage","blastRadius","_recharge","fire","_fire","targetObj","coords","targetArray","displayArray","shooter","constructor","explosionDisplay","currentScreen","gameWorld","currentLevel","area","getSurroundingTiles","tile","setTile","attack","defense","damage","xMod","yMod","ItemRepository","define","hpDown","label","timer","ArmorRepository","WeaponRepository","PlayerActor","_act","incrementTimedStatusEffects","refresh","getEngine","lock","Destructible","maxHp","hp","_takeDamage","_addHp","_addMaxHp","_getDefenseValue","hit","a","kill","inventory","Sight","sightRadius","canSee","_canSee","getSightRadius","_getSightRadius","getVisible","_getVisible","fov","FOV","PreciseShadowcasting","getTile","visibleTiles","compute","radius","visibility","entitiesItems","xy","split","getEntityAt","getItemsAt","otherX","otherY","found","TaskActor","tasks","huntingTarget","canDoTask","_canDoTask","wander","_wander","hunt","_hunt","flee","_flee","shoot","_shoot","task","xOffset","yOffset","abs","dX","dY","fireArray","lookInDirection","rangeDisplayArray","rangeWeaponDisplay","tryMove","offsets","Path","AStar","getMap","count","floor","InventoryHolder","inventorySize","inventoryConstructor","_addItem","_removeItem","hasItem","_hasItem","_getInventorySize","exitFunction","find","enterSubscreen","MonsterActor","Movable","_tryMove","setPosition","openDoor","Attacker","strength","_attack","_getAttackValue","dieRoll","parseInt","Equipper","_wield","unwield","_unwield","_wear","takeOff","_takeOff","_unequip","_isWearing","_setup","includes","splice","TimedStatusEffects","statusEffects","_incrementTimedStatusEffects","_getTimedStatusEffects","_addTimedStatusEffect","effect","PlayerTemplate","EnemyRepository","maybeCreateRandom","DungeonMap","width","height","tiles","Array","w","maxRoomWidth","maxRoomHeight","generator","Map","Digger","roomWidth","roomHeight","dugPercentage","rooms","getRooms","room","getDoors","e","Level","topLevel","bottomLevel","getScreenWidth","getScreenHeight","entities","exploredTiles","firstRoom","playerStartPosition","getRandomRoomPosition","stairsUp","getRandomFloorPosition","stairsDown","alien","addEntityAtRandomPosition","bugRoom","roomPosition","bug","addEntity","addItemAtRandomPosition","weaponOrArmor","firstRoomPosition","otherRoomPosition","ship","originX","originY","range","getBottom","getTop","getLeft","getRight","oldX","oldY","setLevel","setGame","getScheduler","entityToRemove","GameWorld","middleLevels","levels","index","introduction","foundShipNoKeys","foundKeys","foundKeysAndShip","playScreen","getCurrentLevel","closing","firing","foundShip","gameOver","win","clear","position","start","console","log","handleInput","move","array","unlock","closeDoor","VK_H","VK_4","VK_NUMPAD4","VK_LEFT","VK_L","VK_6","VK_NUMPAD6","VK_RIGHT","VK_NUMPAD8","VK_NUMPAD2","VK_Y","VK_NUMPAD7","VK_7","VK_NUMPAD9","VK_9","VK_B","VK_NUMPAD1","VK_1","VK_N","VK_NUMPAD3","VK_3","VK_5","VK_NUMPAD5","shiftKey","goDownLevel","goUpLevel","VK_C","VK_F","VK_G","describeA","VK_I","VK_SLASH","VK_P","VK_V","visibleThings","playerStatusDisplay","screenWidth","screenHeight","topLeftX","topLeftY","r","draw","getChar","getFg","getBg","itemKey","coord","getEntities","values","startScreen","MessageDisplay","messages","messageScreen","style","background","overflow","textContent","message","PlayerStatusDisplay","playerStatus","hpColor","scheduler","Scheduler","Speed","engine","Engine","Display","fontFamily","addEventListener","options","onload","isSupported","alert","getContainer"],"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"28d908142711746cd98d878a219803a3.map","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\n\tThis is rot.js, the ROguelike Toolkit in JavaScript.\n\tVersion 0.7~dev, generated on Tue Dec 12 13:34:23 CET 2017.\n*/\n/**\n * Add objects for Node.js environment\n */\nglobal.requestAnimationFrame = function(cb) {\n\treturn setTimeout(function() { cb(Date.now()); }, 1000/60);\n};\n\nglobal.document = {\n\tbody: {\n\t\tappendChild: function(child) {},\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t},\n\tcreateElement: function(type) {\n\t\tvar canvas;\n\t\treturn canvas = {\n\t\t\tgetBoundingClientRect: function() {\n\t\t\t\tvar rect;\n\t\t\t\treturn rect = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetContext: function(type) {\n\t\t\t\tvar context;\n\t\t\t\treturn context = {\n\t\t\t\t\t_termcolor: null,\n\t\t\t\t\tbeginPath: function() {},\n\t\t\t\t\tcanvas: canvas,\n\t\t\t\t\tclearRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdrawImage: function(a, b, c, d, e, f, g, h, i) {},\n\t\t\t\t\tfill: function() {},\n\t\t\t\t\tfillRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfillStyle: \"#000\",\n\t\t\t\t\tfillText: function(chs, x, y) {},\n\t\t\t\t\tfont: \"monospace\",\n\t\t\t\t\tlineTo: function(x, y) {},\n\t\t\t\t\tmeasureText: function(ch) {\n\t\t\t\t\t\tvar result;\n\t\t\t\t\t\treturn result = {\n\t\t\t\t\t\t\twidth: 12\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tmoveTo: function(x, y) {},\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\ttextBaseline: \"middle\"\n\t\t\t\t};\n\t\t\t},\n\t\t\theight: 0,\n\t\t\tstyle: {\n\t\t\t\tleft: \"100px\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: \"100px\",\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\twidth: 0\n\t\t};\n\t},\n\tdocumentElement: {\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t}\n};\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.ROT = factory();\n    }\n}(this, function() {\n/**\n * @namespace Top-level ROT namespace\n */\nvar ROT = {\n\t/**\n\t * @returns {bool} Is rot.js supported by this browser?\n\t */\n\tisSupported: function() {\n\t\treturn !!(document.createElement(\"canvas\").getContext && Function.prototype.bind);\n\t},\n\n\t/** Default with for display and map generators */\n\tDEFAULT_WIDTH: 80,\n\t/** Default height for display and map generators */\n\tDEFAULT_HEIGHT: 25,\n\n\t/** Directional constants. Ordering is important! */\n\tDIRS: {\n\t\t\"4\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  0]\n\t\t],\n\t\t\"8\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 1,  1],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  1],\n\t\t\t[-1,  0],\n\t\t\t[-1, -1]\n\t\t],\n\t\t\"6\": [\n\t\t\t[-1, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 2,  0],\n\t\t\t[ 1,  1],\n\t\t\t[-1,  1],\n\t\t\t[-2,  0]\n\t\t]\n\t},\n\n\t/** Cancel key. */\n\tVK_CANCEL: 3, \n\t/** Help key. */\n\tVK_HELP: 6, \n\t/** Backspace key. */\n\tVK_BACK_SPACE: 8, \n\t/** Tab key. */\n\tVK_TAB: 9, \n\t/** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n\tVK_CLEAR: 12, \n\t/** Return/enter key on the main keyboard. */\n\tVK_RETURN: 13, \n\t/** Reserved, but not used. */\n\tVK_ENTER: 14, \n\t/** Shift key. */\n\tVK_SHIFT: 16, \n\t/** Control key. */\n\tVK_CONTROL: 17, \n\t/** Alt (Option on Mac) key. */\n\tVK_ALT: 18, \n\t/** Pause key. */\n\tVK_PAUSE: 19, \n\t/** Caps lock. */\n\tVK_CAPS_LOCK: 20, \n\t/** Escape key. */\n\tVK_ESCAPE: 27, \n\t/** Space bar. */\n\tVK_SPACE: 32, \n\t/** Page Up key. */\n\tVK_PAGE_UP: 33, \n\t/** Page Down key. */\n\tVK_PAGE_DOWN: 34, \n\t/** End key. */\n\tVK_END: 35, \n\t/** Home key. */\n\tVK_HOME: 36, \n\t/** Left arrow. */\n\tVK_LEFT: 37, \n\t/** Up arrow. */\n\tVK_UP: 38, \n\t/** Right arrow. */\n\tVK_RIGHT: 39, \n\t/** Down arrow. */\n\tVK_DOWN: 40, \n\t/** Print Screen key. */\n\tVK_PRINTSCREEN: 44, \n\t/** Ins(ert) key. */\n\tVK_INSERT: 45, \n\t/** Del(ete) key. */\n\tVK_DELETE: 46, \n\t/***/\n\tVK_0: 48,\n\t/***/\n\tVK_1: 49,\n\t/***/\n\tVK_2: 50,\n\t/***/\n\tVK_3: 51,\n\t/***/\n\tVK_4: 52,\n\t/***/\n\tVK_5: 53,\n\t/***/\n\tVK_6: 54,\n\t/***/\n\tVK_7: 55,\n\t/***/\n\tVK_8: 56,\n\t/***/\n\tVK_9: 57,\n\t/** Colon (:) key. Requires Gecko 15.0 */\n\tVK_COLON: 58, \n\t/** Semicolon (;) key. */\n\tVK_SEMICOLON: 59, \n\t/** Less-than (<) key. Requires Gecko 15.0 */\n\tVK_LESS_THAN: 60, \n\t/** Equals (=) key. */\n\tVK_EQUALS: 61, \n\t/** Greater-than (>) key. Requires Gecko 15.0 */\n\tVK_GREATER_THAN: 62, \n\t/** Question mark (?) key. Requires Gecko 15.0 */\n\tVK_QUESTION_MARK: 63, \n\t/** Atmark (@) key. Requires Gecko 15.0 */\n\tVK_AT: 64, \n\t/***/\n\tVK_A: 65,\n\t/***/\n\tVK_B: 66,\n\t/***/\n\tVK_C: 67,\n\t/***/\n\tVK_D: 68,\n\t/***/\n\tVK_E: 69,\n\t/***/\n\tVK_F: 70,\n\t/***/\n\tVK_G: 71,\n\t/***/\n\tVK_H: 72,\n\t/***/\n\tVK_I: 73,\n\t/***/\n\tVK_J: 74,\n\t/***/\n\tVK_K: 75,\n\t/***/\n\tVK_L: 76,\n\t/***/\n\tVK_M: 77,\n\t/***/\n\tVK_N: 78,\n\t/***/\n\tVK_O: 79,\n\t/***/\n\tVK_P: 80,\n\t/***/\n\tVK_Q: 81,\n\t/***/\n\tVK_R: 82,\n\t/***/\n\tVK_S: 83,\n\t/***/\n\tVK_T: 84,\n\t/***/\n\tVK_U: 85,\n\t/***/\n\tVK_V: 86,\n\t/***/\n\tVK_W: 87,\n\t/***/\n\tVK_X: 88,\n\t/***/\n\tVK_Y: 89,\n\t/***/\n\tVK_Z: 90,\n\t/***/\n\tVK_CONTEXT_MENU: 93,\n\t/** 0 on the numeric keypad. */\n\tVK_NUMPAD0: 96, \n\t/** 1 on the numeric keypad. */\n\tVK_NUMPAD1: 97, \n\t/** 2 on the numeric keypad. */\n\tVK_NUMPAD2: 98, \n\t/** 3 on the numeric keypad. */\n\tVK_NUMPAD3: 99, \n\t/** 4 on the numeric keypad. */\n\tVK_NUMPAD4: 100, \n\t/** 5 on the numeric keypad. */\n\tVK_NUMPAD5: 101, \n\t/** 6 on the numeric keypad. */\n\tVK_NUMPAD6: 102, \n\t/** 7 on the numeric keypad. */\n\tVK_NUMPAD7: 103, \n\t/** 8 on the numeric keypad. */\n\tVK_NUMPAD8: 104, \n\t/** 9 on the numeric keypad. */\n\tVK_NUMPAD9: 105, \n\t/** * on the numeric keypad. */\n\tVK_MULTIPLY: 106,\n\t/** + on the numeric keypad. */\n\tVK_ADD: 107, \n\t/***/\n\tVK_SEPARATOR: 108,\n\t/** - on the numeric keypad. */\n\tVK_SUBTRACT: 109, \n\t/** Decimal point on the numeric keypad. */\n\tVK_DECIMAL: 110, \n\t/** / on the numeric keypad. */\n\tVK_DIVIDE: 111, \n\t/** F1 key. */\n\tVK_F1: 112, \n\t/** F2 key. */\n\tVK_F2: 113, \n\t/** F3 key. */\n\tVK_F3: 114, \n\t/** F4 key. */\n\tVK_F4: 115, \n\t/** F5 key. */\n\tVK_F5: 116, \n\t/** F6 key. */\n\tVK_F6: 117, \n\t/** F7 key. */\n\tVK_F7: 118, \n\t/** F8 key. */\n\tVK_F8: 119, \n\t/** F9 key. */\n\tVK_F9: 120, \n\t/** F10 key. */\n\tVK_F10: 121, \n\t/** F11 key. */\n\tVK_F11: 122, \n\t/** F12 key. */\n\tVK_F12: 123, \n\t/** F13 key. */\n\tVK_F13: 124, \n\t/** F14 key. */\n\tVK_F14: 125, \n\t/** F15 key. */\n\tVK_F15: 126, \n\t/** F16 key. */\n\tVK_F16: 127, \n\t/** F17 key. */\n\tVK_F17: 128, \n\t/** F18 key. */\n\tVK_F18: 129, \n\t/** F19 key. */\n\tVK_F19: 130, \n\t/** F20 key. */\n\tVK_F20: 131, \n\t/** F21 key. */\n\tVK_F21: 132, \n\t/** F22 key. */\n\tVK_F22: 133, \n\t/** F23 key. */\n\tVK_F23: 134, \n\t/** F24 key. */\n\tVK_F24: 135, \n\t/** Num Lock key. */\n\tVK_NUM_LOCK: 144, \n\t/** Scroll Lock key. */\n\tVK_SCROLL_LOCK: 145, \n\t/** Circumflex (^) key. Requires Gecko 15.0 */\n\tVK_CIRCUMFLEX: 160, \n\t/** Exclamation (!) key. Requires Gecko 15.0 */\n\tVK_EXCLAMATION: 161, \n\t/** Double quote () key. Requires Gecko 15.0 */\n\tVK_DOUBLE_QUOTE: 162, \n\t/** Hash (#) key. Requires Gecko 15.0 */\n\tVK_HASH: 163, \n\t/** Dollar sign ($) key. Requires Gecko 15.0 */\n\tVK_DOLLAR: 164, \n\t/** Percent (%) key. Requires Gecko 15.0 */\n\tVK_PERCENT: 165, \n\t/** Ampersand (&) key. Requires Gecko 15.0 */\n\tVK_AMPERSAND: 166, \n\t/** Underscore (_) key. Requires Gecko 15.0 */\n\tVK_UNDERSCORE: 167, \n\t/** Open parenthesis (() key. Requires Gecko 15.0 */\n\tVK_OPEN_PAREN: 168, \n\t/** Close parenthesis ()) key. Requires Gecko 15.0 */\n\tVK_CLOSE_PAREN: 169, \n\t/* Asterisk (*) key. Requires Gecko 15.0 */\n\tVK_ASTERISK: 170,\n\t/** Plus (+) key. Requires Gecko 15.0 */\n\tVK_PLUS: 171, \n\t/** Pipe (|) key. Requires Gecko 15.0 */\n\tVK_PIPE: 172, \n\t/** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n\tVK_HYPHEN_MINUS: 173, \n\t/** Open curly bracket ({) key. Requires Gecko 15.0 */\n\tVK_OPEN_CURLY_BRACKET: 174, \n\t/** Close curly bracket (}) key. Requires Gecko 15.0 */\n\tVK_CLOSE_CURLY_BRACKET: 175, \n\t/** Tilde (~) key. Requires Gecko 15.0 */\n\tVK_TILDE: 176, \n\t/** Comma (,) key. */\n\tVK_COMMA: 188, \n\t/** Period (.) key. */\n\tVK_PERIOD: 190, \n\t/** Slash (/) key. */\n\tVK_SLASH: 191, \n\t/** Back tick (`) key. */\n\tVK_BACK_QUOTE: 192, \n\t/** Open square bracket ([) key. */\n\tVK_OPEN_BRACKET: 219, \n\t/** Back slash (\\) key. */\n\tVK_BACK_SLASH: 220, \n\t/** Close square bracket (]) key. */\n\tVK_CLOSE_BRACKET: 221, \n\t/** Quote (''') key. */\n\tVK_QUOTE: 222, \n\t/** Meta key on Linux, Command key on Mac. */\n\tVK_META: 224, \n\t/** AltGr key on Linux. Requires Gecko 15.0 */\n\tVK_ALTGR: 225, \n\t/** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n\tVK_WIN: 91, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANA: 21, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANGUL: 21, \n\t/** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n\tVK_EISU: 22, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_JUNJA: 23, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_FINAL: 24, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANJA: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANJI: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_CONVERT: 28, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_NONCONVERT: 29, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_ACCEPT: 30, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_MODECHANGE: 31, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_SELECT: 41, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_PRINT: 42, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_EXECUTE: 43, \n\t/** Linux support for this keycode was added in Gecko 4.0.\t */\n\tVK_SLEEP: 95 \n};\n/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nROT.Text = {\n\tRE_COLORS: /%([bc]){([^}]*)}/g,\n\n\t/* token types */\n\tTYPE_TEXT:\t\t0,\n\tTYPE_NEWLINE:\t1,\n\tTYPE_FG:\t\t2,\n\tTYPE_BG:\t\t3,\n\n\t/**\n\t * Measure size of a resulting text block\n\t */\n\tmeasure: function(str, maxWidth) {\n\t\tvar result = {width:0, height:1};\n\t\tvar tokens = this.tokenize(str, maxWidth);\n\t\tvar lineWidth = 0;\n\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase this.TYPE_TEXT:\n\t\t\t\t\tlineWidth += token.value.length;\n\t\t\t\tbreak;\n\n\t\t\t\tcase this.TYPE_NEWLINE:\n\t\t\t\t\tresult.height++;\n\t\t\t\t\tresult.width = Math.max(result.width, lineWidth);\n\t\t\t\t\tlineWidth = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tresult.width = Math.max(result.width, lineWidth);\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Convert string to a series of a formatting commands\n\t */\n\ttokenize: function(str, maxWidth) {\n\t\tvar result = [];\n\n\t\t/* first tokenization pass - split texts and color formatting commands */\n\t\tvar offset = 0;\n\t\tstr.replace(this.RE_COLORS, function(match, type, name, index) {\n\t\t\t/* string before */\n\t\t\tvar part = str.substring(offset, index);\n\t\t\tif (part.length) {\n\t\t\t\tresult.push({\n\t\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\t\tvalue: part\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* color command */\n\t\t\tresult.push({\n\t\t\t\ttype: (type == \"c\" ? ROT.Text.TYPE_FG : ROT.Text.TYPE_BG),\n\t\t\t\tvalue: name.trim()\n\t\t\t});\n\n\t\t\toffset = index + match.length;\n\t\t\treturn \"\";\n\t\t});\n\n\t\t/* last remaining part */\n\t\tvar part = str.substring(offset);\n\t\tif (part.length) {\n\t\t\tresult.push({\n\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\tvalue: part\n\t\t\t});\n\t\t}\n\n\t\treturn this._breakLines(result, maxWidth);\n\t},\n\n\t/* insert line breaks into first-pass tokenized data */\n\t_breakLines: function(tokens, maxWidth) {\n\t\tif (!maxWidth) { maxWidth = Infinity; }\n\n\t\tvar i = 0;\n\t\tvar lineLength = 0;\n\t\tvar lastTokenWithSpace = -1;\n\n\t\twhile (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n\t\t\tvar token = tokens[i];\n\t\t\tif (token.type == ROT.Text.TYPE_NEWLINE) { /* reset */\n\t\t\t\tlineLength = 0; \n\t\t\t\tlastTokenWithSpace = -1;\n\t\t\t}\n\t\t\tif (token.type != ROT.Text.TYPE_TEXT) { /* skip non-text tokens */\n\t\t\t\ti++;\n\t\t\t\tcontinue; \n\t\t\t}\n\n\t\t\t/* remove spaces at the beginning of line */\n\t\t\twhile (lineLength == 0 && token.value.charAt(0) == \" \") { token.value = token.value.substring(1); }\n\n\t\t\t/* forced newline? insert two new tokens after this one */\n\t\t\tvar index = token.value.indexOf(\"\\n\");\n\t\t\tif (index != -1) { \n\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true); \n\n\t\t\t\t/* if there are spaces at the end, we must remove them (we do not want the line too long) */\n\t\t\t\tvar arr = token.value.split(\"\");\n\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\ttoken.value = arr.join(\"\");\n\t\t\t}\n\n\t\t\t/* token degenerated? */\n\t\t\tif (!token.value.length) {\n\t\t\t\ttokens.splice(i, 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n\n\t\t\t\t/* is it possible to break within this token? */\n\t\t\t\tvar index = -1;\n\t\t\t\twhile (1) {\n\t\t\t\t\tvar nextIndex = token.value.indexOf(\" \", index+1);\n\t\t\t\t\tif (nextIndex == -1) { break; }\n\t\t\t\t\tif (lineLength + nextIndex > maxWidth) { break; }\n\t\t\t\t\tindex = nextIndex;\n\t\t\t\t}\n\n\t\t\t\tif (index != -1) { /* break at space within this one */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true);\n\t\t\t\t} else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n\t\t\t\t\tvar token = tokens[lastTokenWithSpace];\n\t\t\t\t\tvar breakIndex = token.value.lastIndexOf(\" \");\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n\t\t\t\t\ti = lastTokenWithSpace;\n\t\t\t\t} else { /* force break in this token */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, maxWidth-lineLength, false);\n\t\t\t\t}\n\n\t\t\t} else { /* line not long, continue */\n\t\t\t\tlineLength += token.value.length;\n\t\t\t\tif (token.value.indexOf(\" \") != -1) { lastTokenWithSpace = i; }\n\t\t\t}\n\t\t\t\n\t\t\ti++; /* advance to next token */\n\t\t}\n\n\n\t\ttokens.push({type: ROT.Text.TYPE_NEWLINE}); /* insert fake newline to fix the last text line */\n\n\t\t/* remove trailing space from text tokens before newlines */\n\t\tvar lastTextToken = null;\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase ROT.Text.TYPE_TEXT: lastTextToken = token; break;\n\t\t\t\tcase ROT.Text.TYPE_NEWLINE: \n\t\t\t\t\tif (lastTextToken) { /* remove trailing space */\n\t\t\t\t\t\tvar arr = lastTextToken.value.split(\"\");\n\t\t\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\t\t\tlastTextToken.value = arr.join(\"\");\n\t\t\t\t\t}\n\t\t\t\t\tlastTextToken = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ttokens.pop(); /* remove fake token */\n\n\t\treturn tokens;\n\t},\n\n\t/**\n\t * Create new tokens and insert them into the stream\n\t * @param {object[]} tokens\n\t * @param {int} tokenIndex Token being processed\n\t * @param {int} breakIndex Index within current token's value\n\t * @param {bool} removeBreakChar Do we want to remove the breaking character?\n\t * @returns {string} remaining unbroken token value\n\t */\n\t_breakInsideToken: function(tokens, tokenIndex, breakIndex, removeBreakChar) {\n\t\tvar newBreakToken = {\n\t\t\ttype: ROT.Text.TYPE_NEWLINE\n\t\t};\n\t\tvar newTextToken = {\n\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\tvalue: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n\t\t};\n\t\ttokens.splice(tokenIndex+1, 0, newBreakToken, newTextToken);\n\t\treturn tokens[tokenIndex].value.substring(0, breakIndex);\n\t}\n};\n/**\n * @returns {any} Randomly picked item, null when length=0\n */\nArray.prototype.random = Array.prototype.random || function() {\n\tif (!this.length) { return null; }\n\treturn this[Math.floor(ROT.RNG.getUniform() * this.length)];\n};\n\n/**\n * @returns {array} New array with randomized items\n */\nArray.prototype.randomize = Array.prototype.randomize || function() {\n  var result = [];\n  var clone = this.slice();\n  while (clone.length) {\n    var index = clone.indexOf(clone.random());\n    result.push(clone.splice(index, 1)[0]);\n  }\n  return result;\n};\n/**\n * Always positive modulus\n * @param {int} n Modulus\n * @returns {int} this modulo n\n */\nNumber.prototype.mod = Number.prototype.mod || function(n) {\n\treturn ((this%n)+n)%n;\n};\n/**\n * @returns {string} First letter capitalized\n */\nString.prototype.capitalize = String.prototype.capitalize || function() {\n\treturn this.charAt(0).toUpperCase() + this.substring(1);\n};\n\n/** \n * Left pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.lpad = String.prototype.lpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn s+this;\n};\n\n/** \n * Right pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.rpad = String.prototype.rpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn this+s;\n};\n\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nString.format = String.format || function(template) {\n\tvar map = String.format.map;\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar replacer = function(match, group1, group2, index) {\n\t\tif (template.charAt(index-1) == \"%\") { return match.substring(1); }\n\t\tif (!args.length) { return match; }\n\t\tvar obj = args[0];\n\n\t\tvar group = group1 || group2;\n\t\tvar parts = group.split(\",\");\n\t\tvar name = parts.shift();\n\t\tvar method = map[name.toLowerCase()];\n\t\tif (!method) { return match; }\n\n\t\tvar obj = args.shift();\n\t\tvar replaced = obj[method].apply(obj, parts);\n\n\t\tvar first = name.charAt(0);\n\t\tif (first != first.toLowerCase()) { replaced = replaced.capitalize(); }\n\n\t\treturn replaced;\n\t};\n\treturn template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n};\n\nString.format.map = String.format.map || {\n\t\"s\": \"toString\"\n};\n\n/**\n * Convenience shortcut to String.format(this)\n */\nString.prototype.format = String.prototype.format || function() {\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.unshift(this);\n\treturn String.format.apply(String, args);\n};\n\nif (!Object.create) {  \n\t/**\n\t * ES5 Object.create\n\t */\n\tObject.create = function(o) {  \n\t\tvar tmp = function() {};\n\t\ttmp.prototype = o;\n\t\treturn new tmp();\n\t};  \n}  \n/**\n * Sets prototype of this function to an instance of parent function\n * @param {function} parent\n */\nFunction.prototype.extend = Function.prototype.extend || function(parent) {\n\tthis.prototype = Object.create(parent.prototype);\n\tthis.prototype.constructor = this;\n\treturn this;\n};\nif (typeof window != \"undefined\") {\n\twindow.requestAnimationFrame =\n\t\twindow.requestAnimationFrame\n\t\t|| window.mozRequestAnimationFrame\n\t\t|| window.webkitRequestAnimationFrame\n\t\t|| window.oRequestAnimationFrame\n\t\t|| window.msRequestAnimationFrame\n\t\t|| function(cb) { return setTimeout(function() { cb(Date.now()); }, 1000/60); };\n\n\twindow.cancelAnimationFrame =\n\t\twindow.cancelAnimationFrame\n\t\t|| window.mozCancelAnimationFrame\n\t\t|| window.webkitCancelAnimationFrame\n\t\t|| window.oCancelAnimationFrame\n\t\t|| window.msCancelAnimationFrame\n\t\t|| function(id) { return clearTimeout(id); };\n}\n/**\n * @class Visual map display\n * @param {object} [options]\n * @param {int} [options.width=ROT.DEFAULT_WIDTH]\n * @param {int} [options.height=ROT.DEFAULT_HEIGHT]\n * @param {int} [options.fontSize=15]\n * @param {string} [options.fontFamily=\"monospace\"]\n * @param {string} [options.fontStyle=\"\"] bold/italic/none/both\n * @param {string} [options.fg=\"#ccc\"]\n * @param {string} [options.bg=\"#000\"]\n * @param {float} [options.spacing=1]\n * @param {float} [options.border=0]\n * @param {string} [options.layout=\"rect\"]\n * @param {bool} [options.forceSquareRatio=false]\n * @param {int} [options.tileWidth=32]\n * @param {int} [options.tileHeight=32]\n * @param {object} [options.tileMap={}]\n * @param {image} [options.tileSet=null]\n * @param {image} [options.tileColorize=false]\n */\nROT.Display = function(options) {\n\tvar canvas = document.createElement(\"canvas\");\n\tthis._context = canvas.getContext(\"2d\");\n\tthis._data = {};\n\tthis._dirty = false; /* false = nothing, true = all, object = dirty cells */\n\tthis._options = {};\n\tthis._backend = null;\n\t\n\tvar defaultOptions = {\n\t\twidth: ROT.DEFAULT_WIDTH,\n\t\theight: ROT.DEFAULT_HEIGHT,\n\t\ttranspose: false,\n\t\tlayout: \"rect\",\n\t\tfontSize: 15,\n\t\tspacing: 1,\n\t\tborder: 0,\n\t\tforceSquareRatio: false,\n\t\tfontFamily: \"monospace\",\n\t\tfontStyle: \"\",\n\t\tfg: \"#ccc\",\n\t\tbg: \"#000\",\n\t\ttileWidth: 32,\n\t\ttileHeight: 32,\n\t\ttileMap: {},\n\t\ttileSet: null,\n\t\ttileColorize: false,\n\t\ttermColor: \"xterm\"\n\t};\n\tfor (var p in options) { defaultOptions[p] = options[p]; }\n\tthis.setOptions(defaultOptions);\n\tthis.DEBUG = this.DEBUG.bind(this);\n\n\tthis._tick = this._tick.bind(this);\n\trequestAnimationFrame(this._tick);\n};\n\n/**\n * Debug helper, ideal as a map generator callback. Always bound to this.\n * @param {int} x\n * @param {int} y\n * @param {int} what\n */\nROT.Display.prototype.DEBUG = function(x, y, what) {\n\tvar colors = [this._options.bg, this._options.fg];\n\tthis.draw(x, y, null, null, colors[what % colors.length]);\n};\n\n/**\n * Clear the whole display (cover it with background color)\n */\nROT.Display.prototype.clear = function() {\n\tthis._data = {};\n\tthis._dirty = true;\n};\n\n/**\n * @see ROT.Display\n */\nROT.Display.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n\t\tif (options.layout) { \n\t\t\tthis._backend = new ROT.Display[options.layout.capitalize()](this._context);\n\t\t}\n\n\t\tvar font = (this._options.fontStyle ? this._options.fontStyle + \" \" : \"\") + this._options.fontSize + \"px \" + this._options.fontFamily;\n\t\tthis._context.font = font;\n\t\tthis._backend.compute(this._options);\n\t\tthis._context.font = font;\n\t\tthis._context.textAlign = \"center\";\n\t\tthis._context.textBaseline = \"middle\";\n\t\tthis._dirty = true;\n\t}\n\treturn this;\n};\n\n/**\n * Returns currently set options\n * @returns {object} Current options object \n */\nROT.Display.prototype.getOptions = function() {\n\treturn this._options;\n};\n\n/**\n * Returns the DOM node of this display\n * @returns {node} DOM node\n */\nROT.Display.prototype.getContainer = function() {\n\treturn this._context.canvas;\n};\n\n/**\n * Compute the maximum width/height to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int[2]} cellWidth,cellHeight\n */\nROT.Display.prototype.computeSize = function(availWidth, availHeight) {\n\treturn this._backend.computeSize(availWidth, availHeight, this._options);\n};\n\n/**\n * Compute the maximum font size to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int} fontSize\n */\nROT.Display.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn this._backend.computeFontSize(availWidth, availHeight, this._options);\n};\n\n/**\n * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n * @param {Event} e event\n * @returns {int[2]} -1 for values outside of the canvas\n */\nROT.Display.prototype.eventToPosition = function(e) {\n\tif (e.touches) {\n\t\tvar x = e.touches[0].clientX;\n\t\tvar y = e.touches[0].clientY;\n\t} else {\n\t\tvar x = e.clientX;\n\t\tvar y = e.clientY;\n\t}\n\n\tvar rect = this._context.canvas.getBoundingClientRect();\n\tx -= rect.left;\n\ty -= rect.top;\n\t\n\tx *= this._context.canvas.width / this._context.canvas.clientWidth;\n\ty *= this._context.canvas.height / this._context.canvas.clientHeight;\n\n\tif (x < 0 || y < 0 || x >= this._context.canvas.width || y >= this._context.canvas.height) { return [-1, -1]; }\n\n\treturn this._backend.eventToPosition(x, y);\n};\n\n/**\n * @param {int} x\n * @param {int} y\n * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n * @param {string} [fg] foreground color\n * @param {string} [bg] background color\n */\nROT.Display.prototype.draw = function(x, y, ch, fg, bg) {\n\tif (!fg) { fg = this._options.fg; }\n\tif (!bg) { bg = this._options.bg; }\n\tthis._data[x+\",\"+y] = [x, y, ch, fg, bg];\n\t\n\tif (this._dirty === true) { return; } /* will already redraw everything */\n\tif (!this._dirty) { this._dirty = {}; } /* first! */\n\tthis._dirty[x+\",\"+y] = true;\n};\n\n/**\n * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n * @param {int} x\n * @param {int} y\n * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n * @param {int} [maxWidth] wrap at what width?\n * @returns {int} lines drawn\n */\nROT.Display.prototype.drawText = function(x, y, text, maxWidth) {\n\tvar fg = null;\n\tvar bg = null;\n\tvar cx = x;\n\tvar cy = y;\n\tvar lines = 1;\n\tif (!maxWidth) { maxWidth = this._options.width-x; }\n\n\tvar tokens = ROT.Text.tokenize(text, maxWidth);\n\n\twhile (tokens.length) { /* interpret tokenized opcode stream */\n\t\tvar token = tokens.shift();\n\t\tswitch (token.type) {\n\t\t\tcase ROT.Text.TYPE_TEXT:\n\t\t\t\tvar isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n\t\t\t\tfor (var i=0;i<token.value.length;i++) {\n\t\t\t\t\tvar cc = token.value.charCodeAt(i);\n\t\t\t\t\tvar c = token.value.charAt(i);\n\t\t\t\t\t// Assign to `true` when the current char is full-width.\n\t\t\t\t\tisFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n\t\t\t\t\t// Current char is space, whatever full-width or half-width both are OK.\n\t\t\t\t\tisSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n\t\t\t\t\t// The previous char is full-width and\n\t\t\t\t\t// current char is nether half-width nor a space.\n\t\t\t\t\tif (isPrevFullWidth && !isFullWidth && !isSpace) { cx++; } // add an extra position\n\t\t\t\t\t// The current char is full-width and\n\t\t\t\t\t// the previous char is not a space.\n\t\t\t\t\tif(isFullWidth && !isPrevSpace) { cx++; } // add an extra position\n\t\t\t\t\tthis.draw(cx++, cy, c, fg, bg);\n\t\t\t\t\tisPrevSpace = isSpace;\n\t\t\t\t\tisPrevFullWidth = isFullWidth;\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_FG:\n\t\t\t\tfg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_BG:\n\t\t\t\tbg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_NEWLINE:\n\t\t\t\tcx = x;\n\t\t\t\tcy++;\n\t\t\t\tlines++;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn lines;\n};\n\n/**\n * Timer tick: update dirty parts\n */\nROT.Display.prototype._tick = function() {\n\trequestAnimationFrame(this._tick);\n\n\tif (!this._dirty) { return; }\n\n\tif (this._dirty === true) { /* draw all */\n\t\tthis._context.fillStyle = this._options.bg;\n\t\tthis._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\n\n\t\tfor (var id in this._data) { /* redraw cached data */\n\t\t\tthis._draw(id, false);\n\t\t}\n\n\t} else { /* draw only dirty */\n\t\tfor (var key in this._dirty) {\n\t\t\tthis._draw(key, true);\n\t\t}\n\t}\n\n\tthis._dirty = false;\n};\n\n/**\n * @param {string} key What to draw\n * @param {bool} clearBefore Is it necessary to clean before?\n */\nROT.Display.prototype._draw = function(key, clearBefore) {\n\tvar data = this._data[key];\n\tif (data[4] != this._options.bg) { clearBefore = true; }\n\n\tthis._backend.draw(data, clearBefore);\n};\n/**\n * @class Abstract display backend module\n * @private\n */\nROT.Display.Backend = function(context) {\n\tthis._context = context;\n};\n\nROT.Display.Backend.prototype.compute = function(options) {\n};\n\nROT.Display.Backend.prototype.draw = function(data, clearBefore) {\n};\n\nROT.Display.Backend.prototype.computeSize = function(availWidth, availHeight) {\n};\n\nROT.Display.Backend.prototype.computeFontSize = function(availWidth, availHeight) {\n};\n\nROT.Display.Backend.prototype.eventToPosition = function(x, y) {\n};\n/**\n * @class Rectangular backend\n * @private\n */\nROT.Display.Rect = function(context) {\n\tROT.Display.Backend.call(this, context);\n\t\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._canvasCache = {};\n\tthis._options = {};\n};\nROT.Display.Rect.extend(ROT.Display.Backend);\n\nROT.Display.Rect.cache = false;\n\nROT.Display.Rect.prototype.compute = function(options) {\n\tthis._canvasCache = {};\n\tthis._options = options;\n\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._spacingX = Math.ceil(options.spacing * charWidth);\n\tthis._spacingY = Math.ceil(options.spacing * options.fontSize);\n\n\tif (this._options.forceSquareRatio) {\n\t\tthis._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n\t}\n\n\tthis._context.canvas.width = options.width * this._spacingX;\n\tthis._context.canvas.height = options.height * this._spacingY;\n};\n\nROT.Display.Rect.prototype.draw = function(data, clearBefore) {\n\tif (this.constructor.cache) {\n\t\tthis._drawWithCache(data, clearBefore);\n\t} else {\n\t\tthis._drawNoCache(data, clearBefore);\n\t}\n};\n\nROT.Display.Rect.prototype._drawWithCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar hash = \"\"+ch+fg+bg;\n\tif (hash in this._canvasCache) {\n\t\tvar canvas = this._canvasCache[hash];\n\t} else {\n\t\tvar b = this._options.border;\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tvar ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = this._spacingX;\n\t\tcanvas.height = this._spacingY;\n\t\tctx.fillStyle = bg;\n\t\tctx.fillRect(b, b, canvas.width-b, canvas.height-b);\n\t\t\n\t\tif (ch) {\n\t\t\tctx.fillStyle = fg;\n\t\t\tctx.font = this._context.font;\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.textBaseline = \"middle\";\n\n\t\t\tvar chars = [].concat(ch);\n\t\t\tfor (var i=0;i<chars.length;i++) {\n\t\t\t\tctx.fillText(chars[i], this._spacingX/2, Math.ceil(this._spacingY/2));\n\t\t\t}\n\t\t}\n\t\tthis._canvasCache[hash] = canvas;\n\t}\n\t\n\tthis._context.drawImage(canvas, x*this._spacingX, y*this._spacingY);\n};\n\nROT.Display.Rect.prototype._drawNoCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tif (clearBefore) { \n\t\tvar b = this._options.border;\n\t\tthis._context.fillStyle = bg;\n\t\tthis._context.fillRect(x*this._spacingX + b, y*this._spacingY + b, this._spacingX - b, this._spacingY - b);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], (x+0.5) * this._spacingX, Math.ceil((y+0.5) * this._spacingY));\n\t}\n};\n\nROT.Display.Rect.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._spacingX);\n\tvar height = Math.floor(availHeight / this._spacingY);\n\treturn [width, height];\n};\n\nROT.Display.Rect.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar boxWidth = Math.floor(availWidth / this._options.width);\n\tvar boxHeight = Math.floor(availHeight / this._options.height);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\t\t\n\tvar widthFraction = ratio * boxHeight / boxWidth;\n\tif (widthFraction > 1) { /* too wide with current aspect ratio */\n\t\tboxHeight = Math.floor(boxHeight / widthFraction);\n\t}\n\treturn Math.floor(boxHeight / this._options.spacing);\n};\n\nROT.Display.Rect.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._spacingX), Math.floor(y/this._spacingY)];\n};\n/**\n * @class Hexagonal backend\n * @private\n */\nROT.Display.Hex = function(context) {\n\tROT.Display.Backend.call(this, context);\n\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._hexSize = 0;\n\tthis._options = {};\n};\nROT.Display.Hex.extend(ROT.Display.Backend);\n\nROT.Display.Hex.prototype.compute = function(options) {\n\tthis._options = options;\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._hexSize = Math.floor(options.spacing * (options.fontSize + charWidth/Math.sqrt(3)) / 2);\n\tthis._spacingX = this._hexSize * Math.sqrt(3) / 2;\n\tthis._spacingY = this._hexSize * 1.5;\n\n\tif (options.transpose) {\n\t\tvar xprop = \"height\";\n\t\tvar yprop = \"width\";\n\t} else {\n\t\tvar xprop = \"width\";\n\t\tvar yprop = \"height\";\n\t}\n\tthis._context.canvas[xprop] = Math.ceil( (options.width + 1) * this._spacingX );\n\tthis._context.canvas[yprop] = Math.ceil( (options.height - 1) * this._spacingY + 2*this._hexSize );\n};\n\nROT.Display.Hex.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar px = [\n\t\t(x+1) * this._spacingX,\n\t\ty * this._spacingY + this._hexSize\n\t];\n\tif (this._options.transpose) { px.reverse(); }\n\n\tif (clearBefore) {\n\t\tthis._context.fillStyle = bg;\n\t\tthis._fill(px[0], px[1]);\n\t}\n\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], px[0], Math.ceil(px[1]));\n\t}\n};\n\nROT.Display.Hex.prototype.computeSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar width = Math.floor(availWidth / this._spacingX) - 1;\n\tvar height = Math.floor((availHeight - 2*this._hexSize) / this._spacingY + 1);\n\treturn [width, height];\n};\n\nROT.Display.Hex.prototype.computeFontSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar hexSizeWidth = 2*availWidth / ((this._options.width+1) * Math.sqrt(3)) - 1;\n\tvar hexSizeHeight = availHeight / (2 + 1.5*(this._options.height-1));\n\tvar hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\n\thexSize = Math.floor(hexSize)+1; /* closest larger hexSize */\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar fontSize = 2*hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n\n\t/* closest smaller fontSize */\n\treturn Math.ceil(fontSize)-1;\n};\n\nROT.Display.Hex.prototype.eventToPosition = function(x, y) {\n\tif (this._options.transpose) {\n\t\tx += y;\n\t\ty = x-y;\n\t\tx -= y;\n\t\tvar nodeSize = this._context.canvas.width;\n\t} else {\n\t\tvar nodeSize = this._context.canvas.height;\n\t}\n\tvar size = nodeSize / this._options.height;\n\ty = Math.floor(y/size);\n\n\tif (y.mod(2)) { /* odd row */\n\t\tx -= this._spacingX;\n\t\tx = 1 + 2*Math.floor(x/(2*this._spacingX));\n\t} else {\n\t\tx = 2*Math.floor(x/(2*this._spacingX));\n\t}\n\n\treturn [x, y];\n};\n\n/**\n * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n */\nROT.Display.Hex.prototype._fill = function(cx, cy) {\n\tvar a = this._hexSize;\n\tvar b = this._options.border;\n\n\tthis._context.beginPath();\n\n\tif (this._options.transpose) {\n\t\tthis._context.moveTo(cx-a+b,\tcy);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a-b,\tcy);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a+b,\tcy);\n\t} else {\n\t\tthis._context.moveTo(cx,\t\t\t\t\tcy-a+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy+a-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy-a+b);\n\t}\n\tthis._context.fill();\n};\n/**\n * @class Tile backend\n * @private\n */\nROT.Display.Tile = function(context) {\n\tROT.Display.Rect.call(this, context);\n\t\n\tthis._options = {};\n\tthis._colorCanvas = document.createElement(\"canvas\");\n};\nROT.Display.Tile.extend(ROT.Display.Rect);\n\nROT.Display.Tile.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._context.canvas.width = options.width * options.tileWidth;\n\tthis._context.canvas.height = options.height * options.tileHeight;\n\tthis._colorCanvas.width = options.tileWidth;\n\tthis._colorCanvas.height = options.tileHeight;\n};\n\nROT.Display.Tile.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar tileWidth = this._options.tileWidth;\n\tvar tileHeight = this._options.tileHeight;\n\n\tif (clearBefore) {\n\t\tif (this._options.tileColorize) {\n\t\t\tthis._context.clearRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t} else {\n\t\t\tthis._context.fillStyle = bg;\n\t\t\tthis._context.fillRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t}\n\t}\n\n\tif (!ch) { return; }\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tvar tile = this._options.tileMap[chars[i]];\n\t\tif (!tile) { throw new Error(\"Char '\" + chars[i] + \"' not found in tileMap\"); }\n\t\t\n\t\tif (this._options.tileColorize) { /* apply colorization */\n\t\t\tvar canvas = this._colorCanvas;\n\t\t\tvar context = canvas.getContext(\"2d\");\n\t\t\tcontext.clearRect(0, 0, tileWidth, tileHeight);\n\n\t\t\tcontext.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\t0, 0, tileWidth, tileHeight\n\t\t\t);\n\n\t\t\tif (fg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = fg;\n\t\t\t\tcontext.globalCompositeOperation = \"source-atop\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tif (bg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = bg;\n\t\t\t\tcontext.globalCompositeOperation = \"destination-over\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tthis._context.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\n\t\t} else { /* no colorizing, easy */\n\t\t\tthis._context.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\tx*tileWidth, y*tileHeight, tileWidth, tileHeight\n\t\t\t);\n\t\t}\n\t}\n};\n\nROT.Display.Tile.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.tileWidth);\n\tvar height = Math.floor(availHeight / this._options.tileHeight);\n\treturn [width, height];\n};\n\nROT.Display.Tile.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.width);\n\tvar height = Math.floor(availHeight / this._options.height);\n\treturn [width, height];\n};\n\nROT.Display.Tile.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._options.tileWidth), Math.floor(y/this._options.tileHeight)];\n};\n/**\n * @namespace\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nROT.RNG = {\n\t/**\n\t * @returns {number} \n\t */\n\tgetSeed: function() {\n\t\treturn this._seed;\n\t},\n\n\t/**\n\t * @param {number} seed Seed the number generator\n\t */\n\tsetSeed: function(seed) {\n\t\tseed = (seed < 1 ? 1/seed : seed);\n\n\t\tthis._seed = seed;\n\t\tthis._s0 = (seed >>> 0) * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s1 = seed * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s2 = seed * this._frac;\n\n\t\tthis._c = 1;\n\t\treturn this;\n\t},\n\n\t/**\n\t * @returns {float} Pseudorandom value [0,1), uniformly distributed\n\t */\n\tgetUniform: function() {\n\t\tvar t = 2091639 * this._s0 + this._c * this._frac;\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._c = t | 0;\n\t\tthis._s2 = t - this._c;\n\t\treturn this._s2;\n\t},\n\n\t/**\n\t * @param {int} lowerBound The lower end of the range to return a value from, inclusive\n\t * @param {int} upperBound The upper end of the range to return a value from, inclusive\n\t * @returns {int} Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n\t */\n\tgetUniformInt: function(lowerBound, upperBound) {\n\t\tvar max = Math.max(lowerBound, upperBound);\n\t\tvar min = Math.min(lowerBound, upperBound);\n\t\treturn Math.floor(this.getUniform() * (max - min + 1)) + min;\n\t},\n\n\t/**\n\t * @param {float} [mean=0] Mean value\n\t * @param {float} [stddev=1] Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n\t * @returns {float} A normally distributed pseudorandom value\n\t */\n\tgetNormal: function(mean, stddev) {\n\t\tdo {\n\t\t\tvar u = 2*this.getUniform()-1;\n\t\t\tvar v = 2*this.getUniform()-1;\n\t\t\tvar r = u*u + v*v;\n\t\t} while (r > 1 || r == 0);\n\n\t\tvar gauss = u * Math.sqrt(-2*Math.log(r)/r);\n\t\treturn (mean || 0) + gauss*(stddev || 1);\n\t},\n\n\t/**\n\t * @returns {int} Pseudorandom value [1,100] inclusive, uniformly distributed\n\t */\n\tgetPercentage: function() {\n\t\treturn 1 + Math.floor(this.getUniform()*100);\n\t},\n\t\n\t/**\n\t * @param {object} data key=whatever, value=weight (relative probability)\n\t * @returns {string} whatever\n\t */\n\tgetWeightedValue: function(data) {\n\t\tvar total = 0;\n\t\t\n\t\tfor (var id in data) {\n\t\t\ttotal += data[id];\n\t\t}\n\t\tvar random = this.getUniform()*total;\n\t\t\n\t\tvar part = 0;\n\t\tfor (var id in data) {\n\t\t\tpart += data[id];\n\t\t\tif (random < part) { return id; }\n\t\t}\n\n\t\t// If by some floating-point annoyance we have\n\t\t// random >= total, just return the last id.\n\t\treturn id;\n\t},\n\n\t/**\n\t * Get RNG state. Useful for storing the state and re-setting it via setState.\n\t * @returns {?} Internal state\n\t */\n\tgetState: function() {\n\t\treturn [this._s0, this._s1, this._s2, this._c];\n\t},\n\n\t/**\n\t * Set a previously retrieved state.\n\t * @param {?} state\n\t */\n\tsetState: function(state) {\n\t\tthis._s0 = state[0];\n\t\tthis._s1 = state[1];\n\t\tthis._s2 = state[2];\n\t\tthis._c  = state[3];\n\t\treturn this;\n\t},\n\n\t/**\n\t * Returns a cloned RNG\n\t */\n\tclone: function() {\n\t\tvar clone = Object.create(this);\n\t\tclone.setState(this.getState());\n\t\treturn clone;\n\t},\n\n\t_s0: 0,\n\t_s1: 0,\n\t_s2: 0,\n\t_c: 0,\n\t_frac: 2.3283064365386963e-10 /* 2^-32 */\n};\n\nROT.RNG.setSeed(Date.now());\n/**\n * @class (Markov process)-based string generator. \n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \n * Offers configurable order and prior.\n * @param {object} [options]\n * @param {bool} [options.words=false] Use word mode?\n * @param {int} [options.order=3]\n * @param {float} [options.prior=0.001]\n */\nROT.StringGenerator = function(options) {\n\tthis._options = {\n\t\twords: false,\n\t\torder: 3,\n\t\tprior: 0.001\n\t};\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._boundary = String.fromCharCode(0);\n\tthis._suffix = this._boundary;\n\tthis._prefix = [];\n\tfor (var i=0;i<this._options.order;i++) { this._prefix.push(this._boundary); }\n\n\tthis._priorValues = {};\n\tthis._priorValues[this._boundary] = this._options.prior;\n\n\tthis._data = {};\n};\n\n/**\n * Remove all learning data\n */\nROT.StringGenerator.prototype.clear = function() {\n\tthis._data = {};\n\tthis._priorValues = {};\n};\n\n/**\n * @returns {string} Generated string\n */\nROT.StringGenerator.prototype.generate = function() {\n\tvar result = [this._sample(this._prefix)];\n\twhile (result[result.length-1] != this._boundary) {\n\t\tresult.push(this._sample(result));\n\t}\n\treturn this._join(result.slice(0, -1));\n};\n\n/**\n * Observe (learn) a string from a training set\n */\nROT.StringGenerator.prototype.observe = function(string) {\n\tvar tokens = this._split(string);\n\n\tfor (var i=0; i<tokens.length; i++) {\n\t\tthis._priorValues[tokens[i]] = this._options.prior;\n\t}\n\n\ttokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n\n\tfor (var i=this._options.order; i<tokens.length; i++) {\n\t\tvar context = tokens.slice(i-this._options.order, i);\n\t\tvar event = tokens[i];\n\t\tfor (var j=0; j<context.length; j++) {\n\t\t\tvar subcontext = context.slice(j);\n\t\t\tthis._observeEvent(subcontext, event);\n\t\t}\n\t}\n};\n\nROT.StringGenerator.prototype.getStats = function() {\n\tvar parts = [];\n\n\tvar priorCount = 0;\n\tfor (var p in this._priorValues) { priorCount++; }\n\tpriorCount--; /* boundary */\n\tparts.push(\"distinct samples: \" + priorCount);\n\n\tvar dataCount = 0;\n\tvar eventCount = 0;\n\tfor (var p in this._data) { \n\t\tdataCount++; \n\t\tfor (var key in this._data[p]) {\n\t\t\teventCount++;\n\t\t}\n\t}\n\tparts.push(\"dictionary size (contexts): \" + dataCount);\n\tparts.push(\"dictionary size (events): \" + eventCount);\n\n\treturn parts.join(\", \");\n};\n\n/**\n * @param {string}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._split = function(str) {\n\treturn str.split(this._options.words ? /\\s+/ : \"\");\n};\n\n/**\n * @param {string[]}\n * @returns {string} \n */\nROT.StringGenerator.prototype._join = function(arr) {\n\treturn arr.join(this._options.words ? \" \" : \"\");\n};\n\n/**\n * @param {string[]} context\n * @param {string} event\n */\nROT.StringGenerator.prototype._observeEvent = function(context, event) {\n\tvar key = this._join(context);\n\tif (!(key in this._data)) { this._data[key] = {}; }\n\tvar data = this._data[key];\n\n\tif (!(event in data)) { data[event] = 0; }\n\tdata[event]++;\n};\n\n/**\n * @param {string[]}\n * @returns {string}\n */\nROT.StringGenerator.prototype._sample = function(context) {\n\tcontext = this._backoff(context);\n\tvar key = this._join(context);\n\tvar data = this._data[key];\n\n\tvar available = {};\n\n\tif (this._options.prior) {\n\t\tfor (var event in this._priorValues) { available[event] = this._priorValues[event]; }\n\t\tfor (var event in data) { available[event] += data[event]; }\n\t} else { \n\t\tavailable = data;\n\t}\n\n\treturn ROT.RNG.getWeightedValue(available);\n};\n\n/**\n * @param {string[]}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._backoff = function(context) {\n\tif (context.length > this._options.order) {\n\t\tcontext = context.slice(-this._options.order);\n\t} else if (context.length < this._options.order) {\n\t\tcontext = this._prefix.slice(0, this._options.order - context.length).concat(context);\n\t}\n\n\twhile (!(this._join(context) in this._data) && context.length > 0) { context = context.slice(1); }\n\n\treturn context;\n};\n/**\n * @class Generic event queue: stores events and retrieves them based on their time\n */\nROT.EventQueue = function() {\n\tthis._time = 0;\n\tthis._events = [];\n\tthis._eventTimes = [];\n};\n\n/**\n * @returns {number} Elapsed time\n */\nROT.EventQueue.prototype.getTime = function() {\n\treturn this._time;\n};\n\n/**\n * Clear all scheduled events\n */\nROT.EventQueue.prototype.clear = function() {\n\tthis._events = [];\n\tthis._eventTimes = [];\n\treturn this;\n};\n\n/**\n * @param {?} event\n * @param {number} time\n */\nROT.EventQueue.prototype.add = function(event, time) {\n\tvar index = this._events.length;\n\tfor (var i=0;i<this._eventTimes.length;i++) {\n\t\tif (this._eventTimes[i] > time) {\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tthis._events.splice(index, 0, event);\n\tthis._eventTimes.splice(index, 0, time);\n};\n\n/**\n * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n * @returns {? || null} The event previously added by addEvent, null if no event available\n */\nROT.EventQueue.prototype.get = function() {\n\tif (!this._events.length) { return null; }\n\n\tvar time = this._eventTimes.splice(0, 1)[0];\n\tif (time > 0) { /* advance */\n\t\tthis._time += time;\n\t\tfor (var i=0;i<this._eventTimes.length;i++) { this._eventTimes[i] -= time; }\n\t}\n\n\treturn this._events.splice(0, 1)[0];\n};\n\n/**\n * Get the time associated with the given event\n * @param {?} event\n * @returns {number} time\n */\nROT.EventQueue.prototype.getEventTime = function(event) {\n\tvar index = this._events.indexOf(event);\n\tif (index == -1) { return undefined }\n\treturn this._eventTimes[index];\n};\n\n/**\n * Remove an event from the queue\n * @param {?} event\n * @returns {bool} success?\n */\nROT.EventQueue.prototype.remove = function(event) {\n\tvar index = this._events.indexOf(event);\n\tif (index == -1) { return false }\n\tthis._remove(index);\n\treturn true;\n};\n\n/**\n * Remove an event from the queue\n * @param {int} index\n */\nROT.EventQueue.prototype._remove = function(index) {\n\tthis._events.splice(index, 1);\n\tthis._eventTimes.splice(index, 1);\n};\n/**\n * @class Abstract scheduler\n */\nROT.Scheduler = function() {\n\tthis._queue = new ROT.EventQueue();\n\tthis._repeat = [];\n\tthis._current = null;\n};\n\n/**\n * @see ROT.EventQueue#getTime\n */\nROT.Scheduler.prototype.getTime = function() {\n\treturn this._queue.getTime();\n};\n\n/**\n * @param {?} item\n * @param {bool} repeat\n */\nROT.Scheduler.prototype.add = function(item, repeat) {\n\tif (repeat) { this._repeat.push(item); }\n\treturn this;\n};\n\n/**\n * Get the time the given item is scheduled for\n * @param {?} item\n * @returns {number} time\n */\nROT.Scheduler.prototype.getTimeOf = function(item) {\n\treturn this._queue.getEventTime(item);\n};\n\n/**\n * Clear all items\n */\nROT.Scheduler.prototype.clear = function() {\n\tthis._queue.clear();\n\tthis._repeat = [];\n\tthis._current = null;\n\treturn this;\n};\n\n/**\n * Remove a previously added item\n * @param {?} item\n * @returns {bool} successful?\n */\nROT.Scheduler.prototype.remove = function(item) {\n\tvar result = this._queue.remove(item);\n\n\tvar index = this._repeat.indexOf(item);\n\tif (index != -1) { this._repeat.splice(index, 1); }\n\n\tif (this._current == item) { this._current = null; }\n\n\treturn result;\n};\n\n/**\n * Schedule next item\n * @returns {?}\n */\nROT.Scheduler.prototype.next = function() {\n\tthis._current = this._queue.get();\n\treturn this._current;\n};\n/**\n * @class Simple fair scheduler (round-robin style)\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Simple = function() {\n\tROT.Scheduler.call(this);\n};\nROT.Scheduler.Simple.extend(ROT.Scheduler);\n\n/**\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Simple.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 0);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n};\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Simple.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 0);\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n};\n/**\n * @class Speed-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Speed = function() {\n\tROT.Scheduler.call(this);\n};\nROT.Scheduler.Speed.extend(ROT.Scheduler);\n\n/**\n * @param {object} item anything with \"getSpeed\" method\n * @param {bool} repeat\n * @param {number} [time=1/item.getSpeed()]\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Speed.prototype.add = function(item, repeat, time) {\n\tthis._queue.add(item, time !== undefined ? time : 1/item.getSpeed());\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n};\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Speed.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 1/this._current.getSpeed());\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n};\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Action = function() {\n\tROT.Scheduler.call(this);\n\tthis._defaultDuration = 1; /* for newly added */\n\tthis._duration = this._defaultDuration; /* for this._current */\n};\nROT.Scheduler.Action.extend(ROT.Scheduler);\n\n/**\n * @param {object} item\n * @param {bool} repeat\n * @param {number} [time=1]\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Action.prototype.add = function(item, repeat, time) {\n\tthis._queue.add(item, time || this._defaultDuration);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n};\n\nROT.Scheduler.Action.prototype.clear = function() {\n\tthis._duration = this._defaultDuration;\n\treturn ROT.Scheduler.prototype.clear.call(this);\n};\n\nROT.Scheduler.Action.prototype.remove = function(item) {\n\tif (item == this._current) { this._duration = this._defaultDuration; }\n\treturn ROT.Scheduler.prototype.remove.call(this, item);\n};\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Action.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, this._duration || this._defaultDuration);\n\t\tthis._duration = this._defaultDuration;\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n};\n\n/**\n * Set duration for the active item\n */\nROT.Scheduler.Action.prototype.setDuration = function(time) {\n\tif (this._current) { this._duration = time; }\n\treturn this;\n};\n/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nROT.Engine = function(scheduler) {\n\tthis._scheduler = scheduler;\n\tthis._lock = 1;\n};\n\n/**\n * Start the main loop. When this call returns, the loop is locked.\n */\nROT.Engine.prototype.start = function() {\n\treturn this.unlock();\n};\n\n/**\n * Interrupt the engine by an asynchronous action\n */\nROT.Engine.prototype.lock = function() {\n\tthis._lock++;\n\treturn this;\n};\n\n/**\n * Resume execution (paused by a previous lock)\n */\nROT.Engine.prototype.unlock = function() {\n\tif (!this._lock) { throw new Error(\"Cannot unlock unlocked engine\"); }\n\tthis._lock--;\n\n\twhile (!this._lock) {\n\t\tvar actor = this._scheduler.next();\n\t\tif (!actor) { return this.lock(); } /* no actors */\n\t\tvar result = actor.act();\n\t\tif (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n\t\t\tthis.lock();\n\t\t\tresult.then(this.unlock.bind(this));\n\t\t}\n\t}\n\n\treturn this;\n};\n/**\n * @class Base map generator\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n */\nROT.Map = function(width, height) {\n\tthis._width = width || ROT.DEFAULT_WIDTH;\n\tthis._height = height || ROT.DEFAULT_HEIGHT;\n};\n\nROT.Map.prototype.create = function(callback) {};\n\nROT.Map.prototype._fillMap = function(value) {\n\tvar map = [];\n\tfor (var i=0;i<this._width;i++) {\n\t\tmap.push([]);\n\t\tfor (var j=0;j<this._height;j++) { map[i].push(value); }\n\t}\n\treturn map;\n};\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nROT.Map.Arena = function(width, height) {\n\tROT.Map.call(this, width, height);\n};\nROT.Map.Arena.extend(ROT.Map);\n\nROT.Map.Arena.prototype.create = function(callback) {\n\tvar w = this._width-1;\n\tvar h = this._height-1;\n\tfor (var i=0;i<=w;i++) {\n\t\tfor (var j=0;j<=h;j++) {\n\t\t\tvar empty = (i && j && i<w && j<h);\n\t\t\tcallback(i, j, empty ? 0 : 1);\n\t\t}\n\t}\n\treturn this;\n};\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nROT.Map.DividedMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._stack = [];\n};\nROT.Map.DividedMaze.extend(ROT.Map);\n\nROT.Map.DividedMaze.prototype.create = function(callback) {\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tthis._map = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tthis._map.push([]);\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tvar border = (i == 0 || j == 0 || i+1 == w || j+1 == h);\n\t\t\tthis._map[i].push(border ? 1 : 0);\n\t\t}\n\t}\n\t\n\tthis._stack = [\n\t\t[1, 1, w-2, h-2]\n\t];\n\tthis._process();\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tcallback(i, j, this._map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n};\n\nROT.Map.DividedMaze.prototype._process = function() {\n\twhile (this._stack.length) {\n\t\tvar room = this._stack.shift(); /* [left, top, right, bottom] */\n\t\tthis._partitionRoom(room);\n\t}\n};\n\nROT.Map.DividedMaze.prototype._partitionRoom = function(room) {\n\tvar availX = [];\n\tvar availY = [];\n\t\n\tfor (var i=room[0]+1;i<room[2];i++) {\n\t\tvar top = this._map[i][room[1]-1];\n\t\tvar bottom = this._map[i][room[3]+1];\n\t\tif (top && bottom && !(i % 2)) { availX.push(i); }\n\t}\n\t\n\tfor (var j=room[1]+1;j<room[3];j++) {\n\t\tvar left = this._map[room[0]-1][j];\n\t\tvar right = this._map[room[2]+1][j];\n\t\tif (left && right && !(j % 2)) { availY.push(j); }\n\t}\n\n\tif (!availX.length || !availY.length) { return; }\n\n\tvar x = availX.random();\n\tvar y = availY.random();\n\t\n\tthis._map[x][y] = 1;\n\t\n\tvar walls = [];\n\t\n\tvar w = []; walls.push(w); /* left part */\n\tfor (var i=room[0]; i<x; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* right part */\n\tfor (var i=x+1; i<=room[2]; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\n\tvar w = []; walls.push(w); /* top part */\n\tfor (var j=room[1]; j<y; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* bottom part */\n\tfor (var j=y+1; j<=room[3]; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\t\n\tvar solid = walls.random();\n\tfor (var i=0;i<walls.length;i++) {\n\t\tvar w = walls[i];\n\t\tif (w == solid) { continue; }\n\t\t\n\t\tvar hole = w.random();\n\t\tthis._map[hole[0]][hole[1]] = 0;\n\t}\n\n\tthis._stack.push([room[0], room[1], x-1, y-1]); /* left top */\n\tthis._stack.push([x+1, room[1], room[2], y-1]); /* right top */\n\tthis._stack.push([room[0], y+1, x-1, room[3]]); /* left bottom */\n\tthis._stack.push([x+1, y+1, room[2], room[3]]); /* right bottom */\n};\n/**\n * @class Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n * @augments ROT.Map\n */\nROT.Map.IceyMaze = function(width, height, regularity) {\n\tROT.Map.call(this, width, height);\n\tthis._regularity = regularity || 0;\n};\nROT.Map.IceyMaze.extend(ROT.Map);\n\nROT.Map.IceyMaze.prototype.create = function(callback) {\n\tvar width = this._width;\n\tvar height = this._height;\n\t\n\tvar map = this._fillMap(1);\n\t\n\twidth -= (width % 2 ? 1 : 2);\n\theight -= (height % 2 ? 1 : 2);\n\n\tvar cx = 0;\n\tvar cy = 0;\n\tvar nx = 0;\n\tvar ny = 0;\n\n\tvar done = 0;\n\tvar blocked = false;\n\tvar dirs = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0]\n\t];\n\tdo {\n\t\tcx = 1 + 2*Math.floor(ROT.RNG.getUniform()*(width-1) / 2);\n\t\tcy = 1 + 2*Math.floor(ROT.RNG.getUniform()*(height-1) / 2);\n\n\t\tif (!done) { map[cx][cy] = 0; }\n\t\t\n\t\tif (!map[cx][cy]) {\n\t\t\tthis._randomize(dirs);\n\t\t\tdo {\n\t\t\t\tif (Math.floor(ROT.RNG.getUniform()*(this._regularity+1)) == 0) { this._randomize(dirs); }\n\t\t\t\tblocked = true;\n\t\t\t\tfor (var i=0;i<4;i++) {\n\t\t\t\t\tnx = cx + dirs[i][0]*2;\n\t\t\t\t\tny = cy + dirs[i][1]*2;\n\t\t\t\t\tif (this._isFree(map, nx, ny, width, height)) {\n\t\t\t\t\t\tmap[nx][ny] = 0;\n\t\t\t\t\t\tmap[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcx = nx;\n\t\t\t\t\t\tcy = ny;\n\t\t\t\t\t\tblocked = false;\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (!blocked);\n\t\t}\n\t} while (done+1 < width*height/4);\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n};\n\nROT.Map.IceyMaze.prototype._randomize = function(dirs) {\n\tfor (var i=0;i<4;i++) {\n\t\tdirs[i][0] = 0;\n\t\tdirs[i][1] = 0;\n\t}\n\t\n\tswitch (Math.floor(ROT.RNG.getUniform()*4)) {\n\t\tcase 0:\n\t\t\tdirs[0][0] = -1; dirs[1][0] = 1;\n\t\t\tdirs[2][1] = -1; dirs[3][1] = 1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdirs[3][0] = -1; dirs[2][0] = 1;\n\t\t\tdirs[1][1] = -1; dirs[0][1] = 1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdirs[2][0] = -1; dirs[3][0] = 1;\n\t\t\tdirs[0][1] = -1; dirs[1][1] = 1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdirs[1][0] = -1; dirs[0][0] = 1;\n\t\t\tdirs[3][1] = -1; dirs[2][1] = 1;\n\t\tbreak;\n\t}\n};\n\nROT.Map.IceyMaze.prototype._isFree = function(map, x, y, width, height) {\n\tif (x < 1 || y < 1 || x >= width || y >= height) { return false; }\n\treturn map[x][y];\n};\n/**\n * @class Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n * @augments ROT.Map\n */\nROT.Map.EllerMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n};\nROT.Map.EllerMaze.extend(ROT.Map);\n\nROT.Map.EllerMaze.prototype.create = function(callback) {\n\tvar map = this._fillMap(1);\n\tvar w = Math.ceil((this._width-2)/2);\n\t\n\tvar rand = 9/24;\n\t\n\tvar L = [];\n\tvar R = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tL.push(i);\n\t\tR.push(i);\n\t}\n\tL.push(w-1); /* fake stop-block at the right side */\n\n\tfor (var j=1;j+3<this._height;j+=2) {\n\t\t/* one row */\n\t\tfor (var i=0;i<w;i++) {\n\t\t\t/* cell coords (will be always empty) */\n\t\t\tvar x = 2*i+1;\n\t\t\tvar y = j;\n\t\t\tmap[x][y] = 0;\n\t\t\t\n\t\t\t/* right connection */\n\t\t\tif (i != L[i+1] && ROT.RNG.getUniform() > rand) {\n\t\t\t\tthis._addToList(i, L, R);\n\t\t\t\tmap[x+1][y] = 0;\n\t\t\t}\n\t\t\t\n\t\t\t/* bottom connection */\n\t\t\tif (i != L[i] && ROT.RNG.getUniform() > rand) {\n\t\t\t\t/* remove connection */\n\t\t\t\tthis._removeFromList(i, L, R);\n\t\t\t} else {\n\t\t\t\t/* create connection */\n\t\t\t\tmap[x][y+1] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* last row */\n\tfor (var i=0;i<w;i++) {\n\t\t/* cell coords (will be always empty) */\n\t\tvar x = 2*i+1;\n\t\tvar y = j;\n\t\tmap[x][y] = 0;\n\t\t\n\t\t/* right connection */\n\t\tif (i != L[i+1] && (i == L[i] || ROT.RNG.getUniform() > rand)) {\n\t\t\t/* dig right also if the cell is separated, so it gets connected to the rest of maze */\n\t\t\tthis._addToList(i, L, R);\n\t\t\tmap[x+1][y] = 0;\n\t\t}\n\t\t\n\t\tthis._removeFromList(i, L, R);\n\t}\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\t\n\treturn this;\n};\n\n/**\n * Remove \"i\" from its list\n */\nROT.Map.EllerMaze.prototype._removeFromList = function(i, L, R) {\n\tR[L[i]] = R[i];\n\tL[R[i]] = L[i];\n\tR[i] = i;\n\tL[i] = i;\n};\n\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nROT.Map.EllerMaze.prototype._addToList = function(i, L, R) {\n\tR[L[i+1]] = R[i];\n\tL[R[i]] = L[i+1];\n\tR[i] = i+1;\n\tL[i+1] = i;\n};\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nROT.Map.Cellular = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\tthis._options = {\n\t\tborn: [5, 6, 7, 8],\n\t\tsurvive: [4, 5, 6, 7, 8],\n\t\ttopology: 8\n\t};\n\tthis.setOptions(options);\n\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tthis._map = this._fillMap(0);\n};\nROT.Map.Cellular.extend(ROT.Map);\n\n/**\n * Fill the map with random values\n * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n */\nROT.Map.Cellular.prototype.randomize = function(probability) {\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tthis._map[i][j] = (ROT.RNG.getUniform() < probability ? 1 : 0);\n\t\t}\n\t}\n\treturn this;\n};\n\n/**\n * Change options.\n * @see ROT.Map.Cellular\n */\nROT.Map.Cellular.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n};\n\nROT.Map.Cellular.prototype.set = function(x, y, value) {\n\tthis._map[x][y] = value;\n};\n\nROT.Map.Cellular.prototype.create = function(callback) {\n\tvar newMap = this._fillMap(0);\n\tvar born = this._options.born;\n\tvar survive = this._options.survive;\n\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) {\n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\t\t\tvar cur = this._map[i][j];\n\t\t\tvar ncount = this._getNeighbors(i, j);\n\n\t\t\tif (cur && survive.indexOf(ncount) != -1) { /* survive */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t} else if (!cur && born.indexOf(ncount) != -1) { /* born */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis._map = newMap;\n\tcallback && this._serviceCallback(callback);\n};\n\nROT.Map.Cellular.prototype._serviceCallback = function(callback) {\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) {\n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\t\t\tcallback(i, j, this._map[i][j]);\n\t\t}\n\t}\n};\n\n/**\n * Get neighbor count at [i,j] in this._map\n */\nROT.Map.Cellular.prototype._getNeighbors = function(cx, cy) {\n\tvar result = 0;\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\n\t\tif (x < 0 || x >= this._width || y < 0 || y >= this._height) { continue; }\n\t\tresult += (this._map[x][y] == 1 ? 1 : 0);\n\t}\n\n\treturn result;\n};\n\n/**\n * Make sure every non-wall space is accessible.\n * @param {function} callback to call to display map when do\n * @param {int} value to consider empty space - defaults to 0\n * @param {function} callback to call when a new connection is made\n */\nROT.Map.Cellular.prototype.connect = function(callback, value, connectionCallback) {\n\tif (!value) value = 0;\n\n\tvar allFreeSpace = [];\n\tvar notConnected = {};\n\n\t// find all free space\n\tvar widthStep = 1;\n\tvar widthStarts = [0, 0];\n\tif (this._options.topology == 6) {\n\t\twidthStep = 2;\n\t\twidthStarts = [0, 1];\n\t}\n\tfor (var y = 0; y < this._height; y++) {\n\t\tfor (var x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n\t\t\tif (this._freeSpace(x, y, value)) {\n\t\t\t\tvar p = [x, y];\n\t\t\t\tnotConnected[this._pointKey(p)] = p;\n\t\t\t\tallFreeSpace.push([x, y]);\n\t\t\t}\n\t\t}\n\t}\n\tvar start = allFreeSpace[ROT.RNG.getUniformInt(0, allFreeSpace.length - 1)];\n\n\tvar key = this._pointKey(start);\n\tvar connected = {};\n\tconnected[key] = start;\n\tdelete notConnected[key];\n\n\t// find what's connected to the starting point\n\tthis._findConnected(connected, notConnected, [start], false, value);\n\n\twhile (Object.keys(notConnected).length > 0) {\n\t\t// find two points from notConnected to connected\n\t\tvar p = this._getFromTo(connected, notConnected);\n\t\tvar from = p[0]; // notConnected\n\t\tvar to = p[1]; // connected\n\n\t\t// find everything connected to the starting point\n\t\tvar local = {};\n\t\tlocal[this._pointKey(from)] = from;\n\t\tthis._findConnected(local, notConnected, [from], true, value);\n\n\t\t// connect to a connected cell\n\t\tvar tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n\t\ttunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n\n\t\t// now all of local is connected\n\t\tfor (var k in local) {\n\t\t\tvar pp = local[k];\n\t\t\tthis._map[pp[0]][pp[1]] = value;\n\t\t\tconnected[k] = pp;\n\t\t\tdelete notConnected[k];\n\t\t}\n\t}\n\n\tcallback && this._serviceCallback(callback);\n};\n\n/**\n * Find random points to connect. Search for the closest point in the larger space.\n * This is to minimize the length of the passage while maintaining good performance.\n */\nROT.Map.Cellular.prototype._getFromTo = function(connected, notConnected) {\n\tvar from, to, d;\n\tvar connectedKeys = Object.keys(connected);\n\tvar notConnectedKeys = Object.keys(notConnected);\n\tfor (var i = 0; i < 5; i++) {\n\t\tif (connectedKeys.length < notConnectedKeys.length) {\n\t\t\tvar keys = connectedKeys;\n\t\t\tto = connected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]];\n\t\t\tfrom = this._getClosest(to, notConnected);\n\t\t} else {\n\t\t\tvar keys = notConnectedKeys;\n\t\t\tfrom = notConnected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]];\n\t\t\tto = this._getClosest(from, connected);\n\t\t}\n\t\td = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n\t\tif (d < 64) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t// console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n\treturn [from, to];\n};\n\nROT.Map.Cellular.prototype._getClosest = function(point, space) {\n\tvar minPoint = null;\n\tvar minDist = null;\n\tfor (k in space) {\n\t\tvar p = space[k];\n\t\tvar d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n\t\tif (minDist == null || d < minDist) {\n\t\t\tminDist = d;\n\t\t\tminPoint = p;\n\t\t}\n\t}\n\treturn minPoint;\n};\n\nROT.Map.Cellular.prototype._findConnected = function(connected, notConnected, stack, keepNotConnected, value) {\n\twhile(stack.length > 0) {\n\t\tvar p = stack.splice(0, 1)[0];\n\t\tvar tests;\n\n\t\tif (this._options.topology == 6) {\n\t\t\ttests = [\n\t\t\t\t[p[0] + 2, p[1]],\n\t\t\t\t[p[0] + 1, p[1] - 1],\n\t\t\t\t[p[0] - 1, p[1] - 1],\n\t\t\t\t[p[0] - 2, p[1]],\n\t\t\t\t[p[0] - 1, p[1] + 1],\n\t\t\t\t[p[0] + 1, p[1] + 1],\n\t\t\t];\n\t\t} else {\n\t\t\ttests = [\n\t\t\t\t[p[0] + 1, p[1]],\n\t\t\t\t[p[0] - 1, p[1]],\n\t\t\t\t[p[0],     p[1] + 1],\n\t\t\t\t[p[0],     p[1] - 1]\n\t\t\t];\n\t\t}\n\n\t\tfor (var i = 0; i < tests.length; i++) {\n\t\t\tvar key = this._pointKey(tests[i]);\n\t\t\tif (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n\t\t\t\tconnected[key] = tests[i];\n\t\t\t\tif (!keepNotConnected) {\n\t\t\t\t\tdelete notConnected[key];\n\t\t\t\t}\n\t\t\t\tstack.push(tests[i]);\n\t\t\t}\n\t\t}\n\t}\n};\n\nROT.Map.Cellular.prototype._tunnelToConnected = function(to, from, connected, notConnected, value, connectionCallback) {\n\tvar key = this._pointKey(from);\n\tvar a, b;\n\tif (from[0] < to[0]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var xx = a[0]; xx <= b[0]; xx++) {\n\t\tthis._map[xx][a[1]] = value;\n\t\tvar p = [xx, a[1]];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n\tif (connectionCallback && a[0] < b[0]) {\n\t\tconnectionCallback(a, [b[0], a[1]]);\n\t}\n\n\t// x is now fixed\n\tvar x = b[0];\n\n\tif (from[1] < to[1]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var yy = a[1]; yy < b[1]; yy++) {\n\t\tthis._map[x][yy] = value;\n\t\tvar p = [x, yy];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n\tif (connectionCallback && a[1] < b[1]) { connectionCallback([b[0], a[1]], [b[0], b[1]]); }\n}\n\nROT.Map.Cellular.prototype._tunnelToConnected6 = function(to, from, connected, notConnected, value, connectionCallback) {\n\tvar a, b;\n\tif (from[0] < to[0]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\n\t// tunnel diagonally until horizontally level\n\tvar xx = a[0];\n\tvar yy = a[1];\n\twhile (!(xx == b[0] && yy == b[1])) {\n\t\tvar stepWidth = 2;\n\t\tif (yy < b[1]) {\n\t\t\tyy++;\n\t\t\tstepWidth = 1;\n\t\t} else if (yy > b[1]) {\n\t\t\tyy--;\n\t\t\tstepWidth = 1;\n\t\t}\n\t\tif (xx < b[0]) {\n\t\t\txx += stepWidth\n\t\t} else if (xx > b[0]) {\n\t\t\txx -= stepWidth\n\t\t} else if (b[1] % 2) {\n\t\t\t// Won't step outside map if destination on is map's right edge\n\t\t\txx -= stepWidth;\n\t\t} else {\n\t\t\t// ditto for left edge\n\t\t\txx += stepWidth;\n\t\t}\n\t\tthis._map[xx][yy] = value;\n\t\tvar p = [xx, yy]\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n\n\tif (connectionCallback) { connectionCallback(from, to); }\n}\n\nROT.Map.Cellular.prototype._freeSpace = function(x, y, value) {\n\treturn x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n}\n\nROT.Map.Cellular.prototype._pointKey = function(p) {\n\treturn p[0] + \".\" + p[1];\n}\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nROT.Map.Dungeon = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._rooms = []; /* list of all rooms */\n\tthis._corridors = [];\n};\nROT.Map.Dungeon.extend(ROT.Map);\n\n/**\n * Get all generated rooms\n * @returns {ROT.Map.Feature.Room[]}\n */\nROT.Map.Dungeon.prototype.getRooms = function() {\n\treturn this._rooms;\n};\n\n/**\n * Get all generated corridors\n * @returns {ROT.Map.Feature.Corridor[]}\n */\nROT.Map.Dungeon.prototype.getCorridors = function() {\n\treturn this._corridors;\n};\n/**\n * @class Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Digger = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\t\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\tcorridorLength: [3, 10], /* corridor minimum and maximum length */\n\t\tdugPercentage: 0.2, /* we stop after this percentage of level area has been dug out */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t};\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\tthis._features = {\n\t\t\"Room\": 4,\n\t\t\"Corridor\": 4\n\t};\n\tthis._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n\tthis._walls = {}; /* these are available for digging */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n\tthis._priorityWallCallback = this._priorityWallCallback.bind(this);\n};\nROT.Map.Digger.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map\n * @see ROT.Map#create\n */\nROT.Map.Digger.prototype.create = function(callback) {\n\tthis._rooms = [];\n\tthis._corridors = [];\n\tthis._map = this._fillMap(1);\n\tthis._walls = {};\n\tthis._dug = 0;\n\tvar area = (this._width-2) * (this._height-2);\n\n\tthis._firstRoom();\n\t\n\tvar t1 = Date.now();\n\n\tdo {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { break; }\n\n\t\t/* find a good wall */\n\t\tvar wall = this._findWall();\n\t\tif (!wall) { break; } /* no more walls */\n\t\t\n\t\tvar parts = wall.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tvar dir = this._getDiggingDirection(x, y);\n\t\tif (!dir) { continue; } /* this wall is not suitable */\n\t\t\n//\t\tconsole.log(\"wall\", x, y);\n\n\t\t/* try adding a feature */\n\t\tvar featureAttempts = 0;\n\t\tdo {\n\t\t\tfeatureAttempts++;\n\t\t\tif (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n\t\t\t\t//if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n\t\t\t\tthis._removeSurroundingWalls(x, y);\n\t\t\t\tthis._removeSurroundingWalls(x-dir[0], y-dir[1]);\n\t\t\t\tbreak; \n\t\t\t}\n\t\t} while (featureAttempts < this._featureAttempts);\n\t\t\n\t\tvar priorityWalls = 0;\n\t\tfor (var id in this._walls) { \n\t\t\tif (this._walls[id] > 1) { priorityWalls++; }\n\t\t}\n\n\t} while (this._dug/area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n\n\tthis._addDoors();\n\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis._walls = {};\n\tthis._map = null;\n\n\treturn this;\n};\n\nROT.Map.Digger.prototype._digCallback = function(x, y, value) {\n\tif (value == 0 || value == 2) { /* empty */\n\t\tthis._map[x][y] = 0;\n\t\tthis._dug++;\n\t} else { /* wall */\n\t\tthis._walls[x+\",\"+y] = 1;\n\t}\n};\n\nROT.Map.Digger.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n};\n\nROT.Map.Digger.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n};\n\nROT.Map.Digger.prototype._priorityWallCallback = function(x, y) {\n\tthis._walls[x+\",\"+y] = 2;\n};\n\nROT.Map.Digger.prototype._firstRoom = function() {\n\tvar cx = Math.floor(this._width/2);\n\tvar cy = Math.floor(this._height/2);\n\tvar room = ROT.Map.Feature.Room.createRandomCenter(cx, cy, this._options);\n\tthis._rooms.push(room);\n\troom.create(this._digCallback);\n};\n\n/**\n * Get a suitable wall\n */\nROT.Map.Digger.prototype._findWall = function() {\n\tvar prio1 = [];\n\tvar prio2 = [];\n\tfor (var id in this._walls) {\n\t\tvar prio = this._walls[id];\n\t\tif (prio == 2) { \n\t\t\tprio2.push(id); \n\t\t} else {\n\t\t\tprio1.push(id);\n\t\t}\n\t}\n\t\n\tvar arr = (prio2.length ? prio2 : prio1);\n\tif (!arr.length) { return null; } /* no walls :/ */\n\t\n\tvar id = arr.sort().random(); // sort to make the order deterministic\n\tdelete this._walls[id];\n\n\treturn id;\n};\n\n/**\n * Tries adding a feature\n * @returns {bool} was this a successful try?\n */\nROT.Map.Digger.prototype._tryFeature = function(x, y, dx, dy) {\n\tvar feature = ROT.RNG.getWeightedValue(this._features);\n\tfeature = ROT.Map.Feature[feature].createRandomAt(x, y, dx, dy, this._options);\n\t\n\tif (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n//\t\tconsole.log(\"not valid\");\n//\t\tfeature.debug();\n\t\treturn false;\n\t}\n\t\n\tfeature.create(this._digCallback);\n//\tfeature.debug();\n\n\tif (feature instanceof ROT.Map.Feature.Room) { this._rooms.push(feature); }\n\tif (feature instanceof ROT.Map.Feature.Corridor) { \n\t\tfeature.createPriorityWalls(this._priorityWallCallback);\n\t\tthis._corridors.push(feature); \n\t}\n\t\n\treturn true;\n};\n\nROT.Map.Digger.prototype._removeSurroundingWalls = function(cx, cy) {\n\tvar deltas = ROT.DIRS[4];\n\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t\tvar x = cx + 2*delta[0];\n\t\tvar y = cy + 2*delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t}\n};\n\n/**\n * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n */\nROT.Map.Digger.prototype._getDiggingDirection = function(cx, cy) {\n\tif (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) { return null; }\n\n\tvar result = null;\n\tvar deltas = ROT.DIRS[4];\n\t\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\t\n\t\tif (!this._map[x][y]) { /* there already is another empty neighbor! */\n\t\t\tif (result) { return null; }\n\t\t\tresult = delta;\n\t\t}\n\t}\n\t\n\t/* no empty neighbor */\n\tif (!result) { return null; }\n\t\n\treturn [-result[0], -result[1]];\n};\n\n/**\n * Find empty spaces surrounding rooms, and apply doors.\n */\nROT.Map.Digger.prototype._addDoors = function() {\n\tvar data = this._map;\n\tvar isWallCallback = function(x, y) {\n\t\treturn (data[x][y] == 1);\n\t};\n\tfor (var i = 0; i < this._rooms.length; i++ ) {\n\t\tvar room = this._rooms[i];\n\t\troom.clearDoors();\n\t\troom.addDoors(isWallCallback);\n\t}\n};\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Uniform = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\troomDugPercentage: 0.1, /* we stop after this percentage of level area has been dug out by rooms */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t};\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n\tthis._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n\n\tthis._connected = []; /* list of already connected rooms */\n\tthis._unconnected = []; /* list of remaining unconnected rooms */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n};\nROT.Map.Uniform.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map. If the time limit has been hit, returns null.\n * @see ROT.Map#create\n */\nROT.Map.Uniform.prototype.create = function(callback) {\n\tvar t1 = Date.now();\n\twhile (1) {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { return null; } /* time limit! */\n\t\n\t\tthis._map = this._fillMap(1);\n\t\tthis._dug = 0;\n\t\tthis._rooms = [];\n\t\tthis._unconnected = [];\n\t\tthis._generateRooms();\n\t\tif (this._rooms.length < 2) { continue; }\n\t\tif (this._generateCorridors()) { break; }\n\t}\n\t\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n};\n\n/**\n * Generates a suitable amount of rooms\n */\nROT.Map.Uniform.prototype._generateRooms = function() {\n\tvar w = this._width-2;\n\tvar h = this._height-2;\n\n\tdo {\n\t\tvar room = this._generateRoom();\n\t\tif (this._dug/(w*h) > this._options.roomDugPercentage) { break; } /* achieved requested amount of free space */\n\t} while (room);\n\n\t/* either enough rooms, or not able to generate more of them :) */\n};\n\n/**\n * Try to generate one room\n */\nROT.Map.Uniform.prototype._generateRoom = function() {\n\tvar count = 0;\n\twhile (count < this._roomAttempts) {\n\t\tcount++;\n\t\t\n\t\tvar room = ROT.Map.Feature.Room.createRandom(this._width, this._height, this._options);\n\t\tif (!room.isValid(this._isWallCallback, this._canBeDugCallback)) { continue; }\n\t\t\n\t\troom.create(this._digCallback);\n\t\tthis._rooms.push(room);\n\t\treturn room;\n\t} \n\n\t/* no room was generated in a given number of attempts */\n\treturn null;\n};\n\n/**\n * Generates connectors beween rooms\n * @returns {bool} success Was this attempt successfull?\n */\nROT.Map.Uniform.prototype._generateCorridors = function() {\n\tvar cnt = 0;\n\twhile (cnt < this._corridorAttempts) {\n\t\tcnt++;\n\t\tthis._corridors = [];\n\n\t\t/* dig rooms into a clear map */\n\t\tthis._map = this._fillMap(1);\n\t\tfor (var i=0;i<this._rooms.length;i++) { \n\t\t\tvar room = this._rooms[i];\n\t\t\troom.clearDoors();\n\t\t\troom.create(this._digCallback); \n\t\t}\n\n\t\tthis._unconnected = this._rooms.slice().randomize();\n\t\tthis._connected = [];\n\t\tif (this._unconnected.length) { this._connected.push(this._unconnected.pop()); } /* first one is always connected */\n\t\t\n\t\twhile (1) {\n\t\t\t/* 1. pick random connected room */\n\t\t\tvar connected = this._connected.random();\n\t\t\t\n\t\t\t/* 2. find closest unconnected */\n\t\t\tvar room1 = this._closestRoom(this._unconnected, connected);\n\t\t\t\n\t\t\t/* 3. connect it to closest connected */\n\t\t\tvar room2 = this._closestRoom(this._connected, room1);\n\t\t\t\n\t\t\tvar ok = this._connectRooms(room1, room2);\n\t\t\tif (!ok) { break; } /* stop connecting, re-shuffle */\n\t\t\t\n\t\t\tif (!this._unconnected.length) { return true; } /* done; no rooms remain */\n\t\t}\n\t}\n\treturn false;\n};\n\n/**\n * For a given room, find the closest one from the list\n */\nROT.Map.Uniform.prototype._closestRoom = function(rooms, room) {\n\tvar dist = Infinity;\n\tvar center = room.getCenter();\n\tvar result = null;\n\t\n\tfor (var i=0;i<rooms.length;i++) {\n\t\tvar r = rooms[i];\n\t\tvar c = r.getCenter();\n\t\tvar dx = c[0]-center[0];\n\t\tvar dy = c[1]-center[1];\n\t\tvar d = dx*dx+dy*dy;\n\t\t\n\t\tif (d < dist) {\n\t\t\tdist = d;\n\t\t\tresult = r;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\nROT.Map.Uniform.prototype._connectRooms = function(room1, room2) {\n\t/*\n\t\troom1.debug();\n\t\troom2.debug();\n\t*/\n\n\tvar center1 = room1.getCenter();\n\tvar center2 = room2.getCenter();\n\n\tvar diffX = center2[0] - center1[0];\n\tvar diffY = center2[1] - center1[1];\n\n\tif (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n\t\tvar dirIndex1 = (diffY > 0 ? 2 : 0);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getLeft();\n\t\tvar max = room2.getRight();\n\t\tvar index = 0;\n\t} else { /* first try connecting east-west walls */\n\t\tvar dirIndex1 = (diffX > 0 ? 1 : 3);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getTop();\n\t\tvar max = room2.getBottom();\n\t\tvar index = 1;\n\t}\n\n\tvar start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n\tif (!start) { return false; }\n\n\tif (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n\t\tvar end = start.slice();\n\t\tvar value = null;\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0: value = room2.getTop()-1; break;\n\t\t\tcase 1: value = room2.getRight()+1; break;\n\t\t\tcase 2: value = room2.getBottom()+1; break;\n\t\t\tcase 3: value = room2.getLeft()-1; break;\n\t\t}\n\t\tend[(index+1)%2] = value;\n\t\tthis._digLine([start, end]);\n\t\t\n\t} else if (start[index] < min-1 || start[index] > max+1) { /* need to switch target wall (L-like) */\n\n\t\tvar diff = start[index] - center2[index];\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0:\n\t\t\tcase 1:\tvar rotation = (diff < 0 ? 3 : 1); break;\n\t\t\tcase 2:\n\t\t\tcase 3:\tvar rotation = (diff < 0 ? 1 : 3); break;\n\t\t}\n\t\tdirIndex2 = (dirIndex2 + rotation) % 4;\n\t\t\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\n\t\tvar mid = [0, 0];\n\t\tmid[index] = start[index];\n\t\tvar index2 = (index+1)%2;\n\t\tmid[index2] = end[index2];\n\t\tthis._digLine([start, mid, end]);\n\t\t\n\t} else { /* use current wall pair, but adjust the line in the middle (S-like) */\n\t\n\t\tvar index2 = (index+1)%2;\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\t\tvar mid = Math.round((end[index2] + start[index2])/2);\n\n\t\tvar mid1 = [0, 0];\n\t\tvar mid2 = [0, 0];\n\t\tmid1[index] = start[index];\n\t\tmid1[index2] = mid;\n\t\tmid2[index] = end[index];\n\t\tmid2[index2] = mid;\n\t\tthis._digLine([start, mid1, mid2, end]);\n\t}\n\n\troom1.addDoor(start[0], start[1]);\n\troom2.addDoor(end[0], end[1]);\n\t\n\tvar index = this._unconnected.indexOf(room1);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room1);\n\t}\n\n\tvar index = this._unconnected.indexOf(room2);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room2);\n\t}\n\t\n\treturn true;\n};\n\nROT.Map.Uniform.prototype._placeInWall = function(room, dirIndex) {\n\tvar start = [0, 0];\n\tvar dir = [0, 0];\n\tvar length = 0;\n\t\n\tswitch (dirIndex) {\n\t\tcase 0:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getTop()-1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getRight()+1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getBottom()+1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getLeft()-1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t}\n\t\n\tvar avail = [];\n\tvar lastBadIndex = -2;\n\n\tfor (var i=0;i<length;i++) {\n\t\tvar x = start[0] + i*dir[0];\n\t\tvar y = start[1] + i*dir[1];\n\t\tavail.push(null);\n\t\t\n\t\tvar isWall = (this._map[x][y] == 1);\n\t\tif (isWall) {\n\t\t\tif (lastBadIndex != i-1) { avail[i] = [x, y]; }\n\t\t} else {\n\t\t\tlastBadIndex = i;\n\t\t\tif (i) { avail[i-1] = null; }\n\t\t}\n\t}\n\t\n\tfor (var i=avail.length-1; i>=0; i--) {\n\t\tif (!avail[i]) { avail.splice(i, 1); }\n\t}\n\treturn (avail.length ? avail.random() : null);\n};\n\n/**\n * Dig a polyline.\n */\nROT.Map.Uniform.prototype._digLine = function(points) {\n\tfor (var i=1;i<points.length;i++) {\n\t\tvar start = points[i-1];\n\t\tvar end = points[i];\n\t\tvar corridor = new ROT.Map.Feature.Corridor(start[0], start[1], end[0], end[1]);\n\t\tcorridor.create(this._digCallback);\n\t\tthis._corridors.push(corridor);\n\t}\n};\n\nROT.Map.Uniform.prototype._digCallback = function(x, y, value) {\n\tthis._map[x][y] = value;\n\tif (value == 0) { this._dug++; }\n};\n\nROT.Map.Uniform.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n};\n\nROT.Map.Uniform.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n};\n\n/**\n * @author hyakugei\n * @class Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.cellWidth=3] Number of cells to create on the horizontal (number of rooms horizontally)\n * @param {int[]} [options.cellHeight=3] Number of cells to create on the vertical (number of rooms vertically)\n * @param {int} [options.roomWidth] Room min and max width - normally set auto-magically via the constructor.\n * @param {int} [options.roomHeight] Room min and max height - normally set auto-magically via the constructor.\n */\nROT.Map.Rogue = function (width, height, options) {\n\tROT.Map.call(this, width, height);\n\n\tthis._options = {\n\t\tcellWidth: 3,  // NOTE to self, these could probably work the same as the roomWidth/room Height values\n\t\tcellHeight: 3  //     ie. as an array with min-max values for each direction....\n\t};\n\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\t/*\n\tSet the room sizes according to the over-all width of the map,\n\tand the cell sizes.\n\t*/\n\tif (!this._options.hasOwnProperty(\"roomWidth\")) {\n\t\tthis._options[\"roomWidth\"] = this._calculateRoomSize(this._width, this._options[\"cellWidth\"]);\n\t}\n\tif (!this._options.hasOwnProperty(\"roomHeight\")) {\n\t\tthis._options[\"roomHeight\"] = this._calculateRoomSize(this._height, this._options[\"cellHeight\"]);\n\t}\n\n};\n\nROT.Map.Rogue.extend(ROT.Map);\n\n/**\n * @see ROT.Map#create\n */\nROT.Map.Rogue.prototype.create = function (callback) {\n\tthis.map = this._fillMap(1);\n\tthis.rooms = [];\n\tthis.connectedCells = [];\n\n\tthis._initRooms();\n\tthis._connectRooms();\n\tthis._connectUnconnectedRooms();\n\tthis._createRandomRoomConnections();\n\tthis._createRooms();\n\tthis._createCorridors();\n\n\tif (callback) {\n\t\tfor (var i = 0; i < this._width; i++) {\n\t\t\tfor (var j = 0; j < this._height; j++) {\n\t\t\t\tcallback(i, j, this.map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this;\n};\n\nROT.Map.Rogue.prototype._calculateRoomSize = function (size, cell) {\n\tvar max = Math.floor((size/cell) * 0.8);\n\tvar min = Math.floor((size/cell) * 0.25);\n\tif (min < 2) { min = 2; }\n\tif (max < 2) { max = 2; }\n\treturn [min, max];\n};\n\nROT.Map.Rogue.prototype._initRooms = function () {\n\t// create rooms array. This is the \"grid\" list from the algo.\n\tfor (var i = 0; i < this._options.cellWidth; i++) {\n\t\tthis.rooms.push([]);\n\t\tfor(var j = 0; j < this._options.cellHeight; j++) {\n\t\t\tthis.rooms[i].push({\"x\":0, \"y\":0, \"width\":0, \"height\":0, \"connections\":[], \"cellx\":i, \"celly\":j});\n\t\t}\n\t}\n};\n\nROT.Map.Rogue.prototype._connectRooms = function () {\n\t//pick random starting grid\n\tvar cgx = ROT.RNG.getUniformInt(0, this._options.cellWidth-1);\n\tvar cgy = ROT.RNG.getUniformInt(0, this._options.cellHeight-1);\n\n\tvar idx;\n\tvar ncgx;\n\tvar ncgy;\n\n\tvar found = false;\n\tvar room;\n\tvar otherRoom;\n\n\t// find  unconnected neighbour cells\n\tdo {\n\n\t\t//var dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n\t\tvar dirToCheck = [0, 2, 4, 6];\n\t\tdirToCheck = dirToCheck.randomize();\n\n\t\tdo {\n\t\t\tfound = false;\n\t\t\tidx = dirToCheck.pop();\n\n\t\t\tncgx = cgx + ROT.DIRS[8][idx][0];\n\t\t\tncgy = cgy + ROT.DIRS[8][idx][1];\n\n\t\t\tif (ncgx < 0 || ncgx >= this._options.cellWidth) { continue; }\n\t\t\tif (ncgy < 0 || ncgy >= this._options.cellHeight) { continue; }\n\n\t\t\troom = this.rooms[cgx][cgy];\n\n\t\t\tif (room[\"connections\"].length > 0) {\n\t\t\t\t// as long as this room doesn't already coonect to me, we are ok with it.\n\t\t\t\tif (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\totherRoom = this.rooms[ncgx][ncgy];\n\n\t\t\tif (otherRoom[\"connections\"].length == 0) {\n\t\t\t\totherRoom[\"connections\"].push([cgx, cgy]);\n\n\t\t\t\tthis.connectedCells.push([ncgx, ncgy]);\n\t\t\t\tcgx = ncgx;\n\t\t\t\tcgy = ncgy;\n\t\t\t\tfound = true;\n\t\t\t}\n\n\t\t} while (dirToCheck.length > 0 && found == false);\n\n\t} while (dirToCheck.length > 0);\n\n};\n\nROT.Map.Rogue.prototype._connectUnconnectedRooms = function () {\n\t//While there are unconnected rooms, try to connect them to a random connected neighbor\n\t//(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\n\tthis.connectedCells = this.connectedCells.randomize();\n\tvar room;\n\tvar otherRoom;\n\tvar validRoom;\n\n\tfor (var i = 0; i < this._options.cellWidth; i++) {\n\t\tfor (var j = 0; j < this._options.cellHeight; j++)  {\n\n\t\t\troom = this.rooms[i][j];\n\n\t\t\tif (room[\"connections\"].length == 0) {\n\t\t\t\tvar directions = [0, 2, 4, 6];\n\t\t\t\tdirections = directions.randomize();\n\n\t\t\t\tvalidRoom = false;\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvar dirIdx = directions.pop();\n\t\t\t\t\tvar newI = i + ROT.DIRS[8][dirIdx][0];\n\t\t\t\t\tvar newJ = j + ROT.DIRS[8][dirIdx][1];\n\n\t\t\t\t\tif (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) { continue; }\n\n\t\t\t\t\totherRoom = this.rooms[newI][newJ];\n\n\t\t\t\t\tvalidRoom = true;\n\n\t\t\t\t\tif (otherRoom[\"connections\"].length == 0) { break; }\n\n\t\t\t\t\tfor (var k = 0; k < otherRoom[\"connections\"].length; k++) {\n\t\t\t\t\t\tif (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n\t\t\t\t\t\t\tvalidRoom = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (validRoom) { break; }\n\n\t\t\t\t} while (directions.length);\n\n\t\t\t\tif (validRoom) {\n\t\t\t\t\troom[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"-- Unable to connect room.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nROT.Map.Rogue.prototype._createRandomRoomConnections = function (connections) {\n\t// Empty for now.\n};\n\n\nROT.Map.Rogue.prototype._createRooms = function () {\n\t// Create Rooms\n\n\tvar w = this._width;\n\tvar h = this._height;\n\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\n\tvar cwp = Math.floor(this._width / cw);\n\tvar chp = Math.floor(this._height / ch);\n\n\tvar roomw;\n\tvar roomh;\n\tvar roomWidth = this._options[\"roomWidth\"];\n\tvar roomHeight = this._options[\"roomHeight\"];\n\tvar sx;\n\tvar sy;\n\tvar otherRoom;\n\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\tsx = cwp * i;\n\t\t\tsy = chp * j;\n\n\t\t\tif (sx == 0) { sx = 1; }\n\t\t\tif (sy == 0) { sy = 1; }\n\n\t\t\troomw = ROT.RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n\t\t\troomh = ROT.RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n\n\t\t\tif (j > 0) {\n\t\t\t\totherRoom = this.rooms[i][j-1];\n\t\t\t\twhile (sy - (otherRoom[\"y\"] + otherRoom[\"height\"] ) < 3) {\n\t\t\t\t\tsy++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i > 0) {\n\t\t\t\totherRoom = this.rooms[i-1][j];\n\t\t\t\twhile(sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n\t\t\t\t\tsx++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar sxOffset = Math.round(ROT.RNG.getUniformInt(0, cwp-roomw)/2);\n\t\t\tvar syOffset = Math.round(ROT.RNG.getUniformInt(0, chp-roomh)/2);\n\n\t\t\twhile (sx + sxOffset + roomw >= w) {\n\t\t\t\tif(sxOffset) {\n\t\t\t\t\tsxOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomw--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (sy + syOffset + roomh >= h) {\n\t\t\t\tif(syOffset) {\n\t\t\t\t\tsyOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomh--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsx = sx + sxOffset;\n\t\t\tsy = sy + syOffset;\n\n\t\t\tthis.rooms[i][j][\"x\"] = sx;\n\t\t\tthis.rooms[i][j][\"y\"] = sy;\n\t\t\tthis.rooms[i][j][\"width\"] = roomw;\n\t\t\tthis.rooms[i][j][\"height\"] = roomh;\n\n\t\t\tfor (var ii = sx; ii < sx + roomw; ii++) {\n\t\t\t\tfor (var jj = sy; jj < sy + roomh; jj++) {\n\t\t\t\t\tthis.map[ii][jj] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nROT.Map.Rogue.prototype._getWallPosition = function (aRoom, aDirection) {\n\tvar rx;\n\tvar ry;\n\tvar door;\n\n\tif (aDirection == 1 || aDirection == 3) {\n\t\trx = ROT.RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n\t\tif (aDirection == 1) {\n\t\t\try = aRoom[\"y\"] - 2;\n\t\t\tdoor = ry + 1;\n\t\t} else {\n\t\t\try = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n\t\t\tdoor = ry -1;\n\t\t}\n\n\t\tthis.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n\n\t} else if (aDirection == 2 || aDirection == 4) {\n\t\try = ROT.RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n\t\tif(aDirection == 2) {\n\t\t\trx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n\t\t\tdoor = rx - 1;\n\t\t} else {\n\t\t\trx = aRoom[\"x\"] - 2;\n\t\t\tdoor = rx + 1;\n\t\t}\n\n\t\tthis.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n\n\t}\n\treturn [rx, ry];\n};\n\n/***\n* @param startPosition a 2 element array\n* @param endPosition a 2 element array\n*/\nROT.Map.Rogue.prototype._drawCorridor = function (startPosition, endPosition) {\n\tvar xOffset = endPosition[0] - startPosition[0];\n\tvar yOffset = endPosition[1] - startPosition[1];\n\n\tvar xpos = startPosition[0];\n\tvar ypos = startPosition[1];\n\n\tvar tempDist;\n\tvar xDir;\n\tvar yDir;\n\n\tvar move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n\tvar moves = []; // a list of 2 element arrays\n\n\tvar xAbs = Math.abs(xOffset);\n\tvar yAbs = Math.abs(yOffset);\n\n\tvar percent = ROT.RNG.getUniform(); // used to split the move at different places along the long axis\n\tvar firstHalf = percent;\n\tvar secondHalf = 1 - percent;\n\n\txDir = xOffset > 0 ? 2 : 6;\n\tyDir = yOffset > 0 ? 4 : 0;\n\n\tif (xAbs < yAbs) {\n\t\t// move firstHalf of the y offset\n\t\ttempDist = Math.ceil(yAbs * firstHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t\t// move all the x offset\n\t\tmoves.push([xDir, xAbs]);\n\t\t// move sendHalf of the  y offset\n\t\ttempDist = Math.floor(yAbs * secondHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t} else {\n\t\t//  move firstHalf of the x offset\n\t\ttempDist = Math.ceil(xAbs * firstHalf);\n\t\tmoves.push([xDir, tempDist]);\n\t\t// move all the y offset\n\t\tmoves.push([yDir, yAbs]);\n\t\t// move secondHalf of the x offset.\n\t\ttempDist = Math.floor(xAbs * secondHalf);\n\t\tmoves.push([xDir, tempDist]);\n\t}\n\n\tthis.map[xpos][ypos] = 0;\n\n\twhile (moves.length > 0) {\n\t\tmove = moves.pop();\n\t\twhile (move[1] > 0) {\n\t\t\txpos += ROT.DIRS[8][move[0]][0];\n\t\t\typos += ROT.DIRS[8][move[0]][1];\n\t\t\tthis.map[xpos][ypos] = 0;\n\t\t\tmove[1] = move[1] - 1;\n\t\t}\n\t}\n};\n\nROT.Map.Rogue.prototype._createCorridors = function () {\n\t// Draw Corridors between connected rooms\n\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\tvar room;\n\tvar connection;\n\tvar otherRoom;\n\tvar wall;\n\tvar otherWall;\n\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\troom = this.rooms[i][j];\n\n\t\t\tfor (var k = 0; k < room[\"connections\"].length; k++) {\n\n\t\t\t\tconnection = room[\"connections\"][k];\n\n\t\t\t\totherRoom = this.rooms[connection[0]][connection[1]];\n\n\t\t\t\t// figure out what wall our corridor will start one.\n\t\t\t\t// figure out what wall our corridor will end on.\n\t\t\t\tif (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n\t\t\t\t\twall = 2;\n\t\t\t\t\totherWall = 4;\n\t\t\t\t} else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n\t\t\t\t\twall = 4;\n\t\t\t\t\totherWall = 2;\n\t\t\t\t} else if(otherRoom[\"celly\"] > room[\"celly\"]) {\n\t\t\t\t\twall = 3;\n\t\t\t\t\totherWall = 1;\n\t\t\t\t} else if(otherRoom[\"celly\"] < room[\"celly\"]) {\n\t\t\t\t\twall = 1;\n\t\t\t\t\totherWall = 3;\n\t\t\t\t}\n\n\t\t\t\tthis._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n\t\t\t}\n\t\t}\n\t}\n};\n/**\n * @class Dungeon feature; has own .create() method\n */\nROT.Map.Feature = function() {};\nROT.Map.Feature.prototype.isValid = function(canBeDugCallback) {};\nROT.Map.Feature.prototype.create = function(digCallback) {};\nROT.Map.Feature.prototype.debug = function() {};\nROT.Map.Feature.createRandomAt = function(x, y, dx, dy, options) {};\n\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nROT.Map.Feature.Room = function(x1, y1, x2, y2, doorX, doorY) {\n\tthis._x1 = x1;\n\tthis._y1 = y1;\n\tthis._x2 = x2;\n\tthis._y2 = y2;\n\tthis._doors = {};\n\tif (arguments.length > 4) { this.addDoor(doorX, doorY); }\n};\nROT.Map.Feature.Room.extend(ROT.Map.Feature);\n\n/**\n * Room of random size, with a given doors and direction\n */\nROT.Map.Feature.Room.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tif (dx == 1) { /* to the right */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x+1, y2, x+width, y2+height-1, x, y);\n\t}\n\t\n\tif (dx == -1) { /* to the left */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x-width, y2, x-1, y2+height-1, x, y);\n\t}\n\n\tif (dy == 1) { /* to the bottom */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y+1, x2+width-1, y+height, x, y);\n\t}\n\n\tif (dy == -1) { /* to the top */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y-height, x2+width-1, y-1, x, y);\n\t}\n\n        throw new Error(\"dx or dy must be 1 or -1\");\n};\n\n/**\n * Room of random size, positioned around center coords\n */\nROT.Map.Feature.Room.createRandomCenter = function(cx, cy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\n\tvar x1 = cx - Math.floor(ROT.RNG.getUniform()*width);\n\tvar y1 = cy - Math.floor(ROT.RNG.getUniform()*height);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n};\n\n/**\n * Room of random size within a given dimensions\n */\nROT.Map.Feature.Room.createRandom = function(availWidth, availHeight, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar left = availWidth - width - 1;\n\tvar top = availHeight - height - 1;\n\n\tvar x1 = 1 + Math.floor(ROT.RNG.getUniform()*left);\n\tvar y1 = 1 + Math.floor(ROT.RNG.getUniform()*top);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n};\n\nROT.Map.Feature.Room.prototype.addDoor = function(x, y) {\n\tthis._doors[x+\",\"+y] = 1;\n\treturn this;\n};\n\n/**\n * @param {function}\n */\nROT.Map.Feature.Room.prototype.getDoors = function(callback) {\n\tfor (var key in this._doors) {\n\t\tvar parts = key.split(\",\");\n\t\tcallback(parseInt(parts[0]), parseInt(parts[1]));\n\t}\n\treturn this;\n};\n\nROT.Map.Feature.Room.prototype.clearDoors = function() {\n\tthis._doors = {};\n\treturn this;\n};\n\nROT.Map.Feature.Room.prototype.addDoors = function(isWallCallback) {\n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x != left && x != right && y != top && y != bottom) { continue; }\n\t\t\tif (isWallCallback(x, y)) { continue; }\n\n\t\t\tthis.addDoor(x, y);\n\t\t}\n\t}\n\n\treturn this;\n};\n\nROT.Map.Feature.Room.prototype.debug = function() {\n\tconsole.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n};\n\nROT.Map.Feature.Room.prototype.isValid = function(isWallCallback, canBeDugCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tif (!isWallCallback(x, y)) { return false; }\n\t\t\t} else {\n\t\t\t\tif (!canBeDugCallback(x, y)) { return false; }\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n */\nROT.Map.Feature.Room.prototype.create = function(digCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tvar value = 0;\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x+\",\"+y in this._doors) {\n\t\t\t\tvalue = 2;\n\t\t\t} else if (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tvalue = 1;\n\t\t\t} else {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tdigCallback(x, y, value);\n\t\t}\n\t}\n};\n\nROT.Map.Feature.Room.prototype.getCenter = function() {\n\treturn [Math.round((this._x1 + this._x2)/2), Math.round((this._y1 + this._y2)/2)];\n};\n\nROT.Map.Feature.Room.prototype.getLeft = function() {\n\treturn this._x1;\n};\n\nROT.Map.Feature.Room.prototype.getRight = function() {\n\treturn this._x2;\n};\n\nROT.Map.Feature.Room.prototype.getTop = function() {\n\treturn this._y1;\n};\n\nROT.Map.Feature.Room.prototype.getBottom = function() {\n\treturn this._y2;\n};\n\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nROT.Map.Feature.Corridor = function(startX, startY, endX, endY) {\n\tthis._startX = startX;\n\tthis._startY = startY;\n\tthis._endX = endX; \n\tthis._endY = endY;\n\tthis._endsWithAWall = true;\n};\nROT.Map.Feature.Corridor.extend(ROT.Map.Feature);\n\nROT.Map.Feature.Corridor.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.corridorLength[0];\n\tvar max = options.corridorLength[1];\n\tvar length = ROT.RNG.getUniformInt(min, max);\n\t\n\treturn new this(x, y, x + dx*length, y + dy*length);\n};\n\nROT.Map.Feature.Corridor.prototype.debug = function() {\n\tconsole.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n};\n\nROT.Map.Feature.Corridor.prototype.isValid = function(isWallCallback, canBeDugCallback){ \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tvar ok = true;\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\n\t\tif (!canBeDugCallback(     x,      y)) { ok = false; }\n\t\tif (!isWallCallback  (x + nx, y + ny)) { ok = false; }\n\t\tif (!isWallCallback  (x - nx, y - ny)) { ok = false; }\n\t\t\n\t\tif (!ok) {\n\t\t\tlength = i;\n\t\t\tthis._endX = x-dx;\n\t\t\tthis._endY = y-dy;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t/**\n\t * If the length degenerated, this corridor might be invalid\n\t */\n\t \n\t/* not supported */\n\tif (length == 0) { return false; } \n\t\n\t /* length 1 allowed only if the next space is empty */\n\tif (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) { return false; }\n\t\n\t/**\n\t * We do not want the corridor to crash into a corner of a room;\n\t * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n\t * \n\t * Situation:\n\t * #######1\n\t * .......?\n\t * #######2\n\t * \n\t * The corridor was dug from left to right.\n\t * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n\t */\n\tvar firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n\tvar secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n\tthis._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n\tif ((firstCornerBad || secondCornerBad) && this._endsWithAWall) { return false; }\n\n\treturn true;\n};\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n */\nROT.Map.Feature.Corridor.prototype.create = function(digCallback) { \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1+Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\t\tdigCallback(x, y, 0);\n\t}\n\t\n\treturn true;\n};\n\nROT.Map.Feature.Corridor.prototype.createPriorityWalls = function(priorityWallCallback) {\n\tif (!this._endsWithAWall) { return; }\n\n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\n\tpriorityWallCallback(this._endX + dx, this._endY + dy);\n\tpriorityWallCallback(this._endX + nx, this._endY + ny);\n\tpriorityWallCallback(this._endX - nx, this._endY - ny);\n};\n/**\n * @class Base noise generator\n */\nROT.Noise = function() {\n};\n\nROT.Noise.prototype.get = function(x, y) {};\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\n\n/**\n * @class 2D simplex noise generator\n * @param {int} [gradients=256] Random gradients\n */\nROT.Noise.Simplex = function(gradients) {\n\tROT.Noise.call(this);\n\n\tthis._F2 = 0.5 * (Math.sqrt(3) - 1);\n\tthis._G2 = (3 - Math.sqrt(3)) / 6;\n\n\tthis._gradients = [\n\t\t[ 0, -1],\n\t\t[ 1, -1],\n\t\t[ 1,  0],\n\t\t[ 1,  1],\n\t\t[ 0,  1],\n\t\t[-1,  1],\n\t\t[-1,  0],\n\t\t[-1, -1]\n\t];\n\n\tvar permutations = [];\n\tvar count = gradients || 256;\n\tfor (var i=0;i<count;i++) { permutations.push(i); }\n\tpermutations = permutations.randomize();\n\n\tthis._perms = [];\n\tthis._indexes = [];\n\n\tfor (var i=0;i<2*count;i++) {\n\t\tthis._perms.push(permutations[i % count]);\n\t\tthis._indexes.push(this._perms[i] % this._gradients.length);\n\t}\n\n};\nROT.Noise.Simplex.extend(ROT.Noise);\n\nROT.Noise.Simplex.prototype.get = function(xin, yin) {\n\tvar perms = this._perms;\n\tvar indexes = this._indexes;\n\tvar count = perms.length/2;\n\tvar G2 = this._G2;\n\n\tvar n0 =0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n\n\t// Skew the input space to determine which simplex cell we're in\n\tvar s = (xin + yin) * this._F2; // Hairy factor for 2D\n\tvar i = Math.floor(xin + s);\n\tvar j = Math.floor(yin + s);\n\tvar t = (i + j) * G2;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y) space\n\tvar Y0 = j - t;\n\tvar x0 = xin - X0; // The x,y distances from the cell origin\n\tvar y0 = yin - Y0;\n\n\t// For the 2D case, the simplex shape is an equilateral triangle.\n\t// Determine which simplex we are in.\n\tvar i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\tif (x0 > y0) {\n\t\ti1 = 1;\n\t\tj1 = 0;\n\t} else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n\t\ti1 = 0;\n\t\tj1 = 1;\n\t} // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n\n\t// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n\t// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n\t// c = (3-sqrt(3))/6\n\tvar x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\tvar y1 = y0 - j1 + G2;\n\tvar x2 = x0 - 1 + 2*G2; // Offsets for last corner in (x,y) unskewed coords\n\tvar y2 = y0 - 1 + 2*G2;\n\n\t// Work out the hashed gradient indices of the three simplex corners\n\tvar ii = i.mod(count);\n\tvar jj = j.mod(count);\n\n\t// Calculate the contribution from the three corners\n\tvar t0 = 0.5 - x0*x0 - y0*y0;\n\tif (t0 >= 0) {\n\t\tt0 *= t0;\n\t\tgi = indexes[ii+perms[jj]];\n\t\tvar grad = this._gradients[gi];\n\t\tn0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n\t}\n\t\n\tvar t1 = 0.5 - x1*x1 - y1*y1;\n\tif (t1 >= 0) {\n\t\tt1 *= t1;\n\t\tgi = indexes[ii+i1+perms[jj+j1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n\t}\n\t\n\tvar t2 = 0.5 - x2*x2 - y2*y2;\n\tif (t2 >= 0) {\n\t\tt2 *= t2;\n\t\tgi = indexes[ii+1+perms[jj+1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n\t}\n\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to return values in the interval [-1,1].\n\treturn 70 * (n0 + n1 + n2);\n}\n/**\n * @class Abstract FOV algorithm\n * @param {function} lightPassesCallback Does the light pass through x,y?\n * @param {object} [options]\n * @param {int} [options.topology=8] 4/6/8\n */\nROT.FOV = function(lightPassesCallback, options) {\n\tthis._lightPasses = lightPassesCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t};\n\tfor (var p in options) { this._options[p] = options[p]; }\n};\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.prototype.compute = function(x, y, R, callback) {};\n\n/**\n * Return all neighbors in a concentric ring\n * @param {int} cx center-x\n * @param {int} cy center-y\n * @param {int} r range\n */\nROT.FOV.prototype._getCircle = function(cx, cy, r) {\n\tvar result = [];\n\tvar dirs, countFactor, startOffset;\n\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [0, 1];\n\t\t\tdirs = [\n\t\t\t\tROT.DIRS[8][7],\n\t\t\t\tROT.DIRS[8][1],\n\t\t\t\tROT.DIRS[8][3],\n\t\t\t\tROT.DIRS[8][5]\n\t\t\t];\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tdirs = ROT.DIRS[6];\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\n\t\tcase 8:\n\t\t\tdirs = ROT.DIRS[4];\n\t\t\tcountFactor = 2;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\t}\n\n\t/* starting neighbor */\n\tvar x = cx + startOffset[0]*r;\n\tvar y = cy + startOffset[1]*r;\n\n\t/* circle */\n\tfor (var i=0;i<dirs.length;i++) {\n\t\tfor (var j=0;j<r*countFactor;j++) {\n\t\t\tresult.push([x, y]);\n\t\t\tx += dirs[i][0];\n\t\t\ty += dirs[i][1];\n\n\t\t}\n\t}\n\n\treturn result;\n};\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nROT.FOV.DiscreteShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n};\nROT.FOV.DiscreteShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.DiscreteShadowcasting.prototype.compute = function(x, y, R, callback) {\n\tvar center = this._coords;\n\tvar map = this._map;\n\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* start and end angles */\n\tvar DATA = [];\n\t\n\tvar A, B, cx, cy, blocks;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar angle = 360 / neighbors.length;\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\tA = angle * (i - 0.5);\n\t\t\tB = A + angle;\n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tif (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) { callback(cx, cy, r, 1); }\n\t\t\t\n\t\t\tif (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n};\n\n/**\n * @param {int} A start angle\n * @param {int} B end angle\n * @param {bool} blocks Does current cell block visibility?\n * @param {int[][]} DATA shadowed angle pairs\n */\nROT.FOV.DiscreteShadowcasting.prototype._visibleCoords = function(A, B, blocks, DATA) {\n\tif (A < 0) { \n\t\tvar v1 = this._visibleCoords(0, B, blocks, DATA);\n\t\tvar v2 = this._visibleCoords(360+A, 360, blocks, DATA);\n\t\treturn v1 || v2;\n\t}\n\t\n\tvar index = 0;\n\twhile (index < DATA.length && DATA[index] < A) { index++; }\n\t\n\tif (index == DATA.length) { /* completely new shadow */\n\t\tif (blocks) { DATA.push(A, B); } \n\t\treturn true;\n\t}\n\t\n\tvar count = 0;\n\t\n\tif (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (count == 0) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, B);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\n\t} else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\t/* visible when outside an existing shadow, or when overlapping */\n\t\tif (A == DATA[index-count] && count == 1) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, A);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count, A, B);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}\n};\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nROT.FOV.PreciseShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n};\nROT.FOV.PreciseShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.PreciseShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* list of all shadows */\n\tvar SHADOWS = [];\n\t\n\tvar cx, cy, blocks, A1, A2, visibility;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar neighborCount = neighbors.length;\n\n\t\tfor (var i=0;i<neighborCount;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\t/* shift half-an-angle backwards to maintain consistency of 0-th cells */\n\t\t\tA1 = [i ? 2*i-1 : 2*neighborCount-1, 2*neighborCount];\n\t\t\tA2 = [2*i+1, 2*neighborCount]; \n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tvisibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n\t\t\tif (visibility) { callback(cx, cy, r, visibility); }\n\n\t\t\tif (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n};\n\n/**\n * @param {int[2]} A1 arc start\n * @param {int[2]} A2 arc end\n * @param {bool} blocks Does current arc block visibility?\n * @param {int[][]} SHADOWS list of active shadows\n */\nROT.FOV.PreciseShadowcasting.prototype._checkVisibility = function(A1, A2, blocks, SHADOWS) {\n\tif (A1[0] > A2[0]) { /* split into two sub-arcs */\n\t\tvar v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n\t\tvar v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n\t\treturn (v1+v2)/2;\n\t}\n\n\t/* index1: first shadow >= A1 */\n\tvar index1 = 0, edge1 = false;\n\twhile (index1 < SHADOWS.length) {\n\t\tvar old = SHADOWS[index1];\n\t\tvar diff = old[0]*A1[1] - A1[0]*old[1];\n\t\tif (diff >= 0) { /* old >= A1 */\n\t\t\tif (diff == 0 && !(index1 % 2)) { edge1 = true; }\n\t\t\tbreak;\n\t\t}\n\t\tindex1++;\n\t}\n\n\t/* index2: last shadow <= A2 */\n\tvar index2 = SHADOWS.length, edge2 = false;\n\twhile (index2--) {\n\t\tvar old = SHADOWS[index2];\n\t\tvar diff = A2[0]*old[1] - old[0]*A2[1];\n\t\tif (diff >= 0) { /* old <= A2 */\n\t\t\tif (diff == 0 && (index2 % 2)) { edge2 = true; }\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar visible = true;\n\tif (index1 == index2 && (edge1 || edge2)) {  /* subset of existing shadow, one of the edges match */\n\t\tvisible = false; \n\t} else if (edge1 && edge2 && index1+1==index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n\t\tvisible = false;\n\t} else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n\t\tvisible = false;\n\t}\n\t\n\tif (!visible) { return 0; } /* fast case: not visible */\n\t\n\tvar visibleLength, P;\n\n\t/* compute the length of visible arc, adjust list of shadows (if blocking) */\n\tvar remove = index2-index1+1;\n\tif (remove % 2) {\n\t\tif (index1 % 2) { /* first edge within existing shadow, second outside */\n\t\t\tvar P = SHADOWS[index1];\n\t\t\tvisibleLength = (A2[0]*P[1] - P[0]*A2[1]) / (P[1] * A2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A2); }\n\t\t} else { /* second edge within existing shadow, first outside */\n\t\t\tvar P = SHADOWS[index2];\n\t\t\tvisibleLength = (P[0]*A1[1] - A1[0]*P[1]) / (A1[1] * P[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1); }\n\t\t}\n\t} else {\n\t\tif (index1 % 2) { /* both edges within existing shadows */\n\t\t\tvar P1 = SHADOWS[index1];\n\t\t\tvar P2 = SHADOWS[index2];\n\t\t\tvisibleLength = (P2[0]*P1[1] - P1[0]*P2[1]) / (P1[1] * P2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove); }\n\t\t} else { /* both edges outside existing shadows */\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1, A2); }\n\t\t\treturn 1; /* whole arc visible! */\n\t\t}\n\t}\n\n\tvar arcLength = (A2[0]*A1[1] - A1[0]*A2[1]) / (A1[1] * A2[1]);\n\n\treturn visibleLength/arcLength;\n};\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nROT.FOV.RecursiveShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n};\nROT.FOV.RecursiveShadowcasting.extend(ROT.FOV);\n\n/** Octants used for translating recursive shadowcasting offsets */\nROT.FOV.RecursiveShadowcasting.OCTANTS = [\n\t[-1,  0,  0,  1],\n\t[ 0, -1,  1,  0],\n\t[ 0, -1, -1,  0],\n\t[-1,  0,  0, -1],\n\t[ 1,  0,  0, -1],\n\t[ 0,  1, -1,  0],\n\t[ 0,  1,  1,  0],\n\t[ 1,  0,  0,  1]\n];\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tfor(var i = 0; i < ROT.FOV.RecursiveShadowcasting.OCTANTS.length; i++) {\n\t\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[i], R, callback);\n\t}\n};\n\n/**\n * Compute visibility for a 180-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute180 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n\tvar nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n\tvar nextOctant = (dir+ 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextPreviousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextOctant], R, callback);\n};\n\n/**\n * Compute visibility for a 90-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute90 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n};\n\n/**\n * Render one octant (45-degree arc) of the viewshed\n * @param {int} x\n * @param {int} y\n * @param {int} octant Octant to be rendered\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype._renderOctant = function(x, y, octant, R, callback) {\n\t//Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n\tthis._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n};\n\n/**\n * Actually calculates the visibility\n * @param {int} startX The starting X coordinate\n * @param {int} startY The starting Y coordinate\n * @param {int} row The row to render\n * @param {float} visSlopeStart The slope to start at\n * @param {float} visSlopeEnd The slope to end at\n * @param {int} radius The radius to reach out to\n * @param {int} xx \n * @param {int} xy \n * @param {int} yx \n * @param {int} yy \n * @param {function} callback The callback to use when we hit a block that is visible\n */\nROT.FOV.RecursiveShadowcasting.prototype._castVisibility = function(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n\tif(visSlopeStart < visSlopeEnd) { return; }\n\tfor(var i = row; i <= radius; i++) {\n\t\tvar dx = -i - 1;\n\t\tvar dy = -i;\n\t\tvar blocked = false;\n\t\tvar newStart = 0;\n\n\t\t//'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n\t\twhile(dx <= 0) {\n\t\t\tdx += 1;\n\n\t\t\t//Translate from relative coordinates to map coordinates\n\t\t\tvar mapX = startX + dx * xx + dy * xy;\n\t\t\tvar mapY = startY + dx * yx + dy * yy;\n\n\t\t\t//Range of the row\n\t\t\tvar slopeStart = (dx - 0.5) / (dy + 0.5);\n\t\t\tvar slopeEnd = (dx + 0.5) / (dy - 0.5);\n\t\t\n\t\t\t//Ignore if not yet at left edge of Octant\n\t\t\tif(slopeEnd > visSlopeStart) { continue; }\n\t\t\t\n\t\t\t//Done if past right edge\n\t\t\tif(slopeStart < visSlopeEnd) { break; }\n\t\t\t\t\n\t\t\t//If it's in range, it's visible\n\t\t\tif((dx * dx + dy * dy) < (radius * radius)) {\n\t\t\t\tcallback(mapX, mapY, i, 1);\n\t\t\t}\n\t\n\t\t\tif(!blocked) {\n\t\t\t\t//If tile is a blocking tile, cast around it\n\t\t\t\tif(!this._lightPasses(mapX, mapY) && i < radius) {\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tthis._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Keep narrowing if scanning across a block\n\t\t\t\tif(!this._lightPasses(mapX, mapY)) {\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\n\t\t\t\t//Block has ended\n\t\t\t\tblocked = false;\n\t\t\t\tvisSlopeStart = newStart;\n\t\t\t}\n\t\t}\n\t\tif(blocked) { break; }\n\t}\n};\n/**\n * @namespace Color operations\n */\nROT.Color = {\n\tfromString: function(str) {\n\t\tvar cached, r;\n\t\tif (str in this._cache) {\n\t\t\tcached = this._cache[str];\n\t\t} else {\n\t\t\tif (str.charAt(0) == \"#\") { /* hex rgb */\n\n\t\t\t\tvar values = str.match(/[0-9a-f]/gi).map(function(x) { return parseInt(x, 16); });\n\t\t\t\tif (values.length == 3) {\n\t\t\t\t\tcached = values.map(function(x) { return x*17; });\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i=0;i<3;i++) {\n\t\t\t\t\t\tvalues[i+1] += 16*values[i];\n\t\t\t\t\t\tvalues.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t\tcached = values;\n\t\t\t\t}\n\n\t\t\t} else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { /* decimal rgb */\n\t\t\t\tcached = r[1].split(/\\s*,\\s*/).map(function(x) { return parseInt(x); });\n\t\t\t} else { /* html name */\n\t\t\t\tcached = [0, 0, 0];\n\t\t\t}\n\n\t\t\tthis._cache[str] = cached;\n\t\t}\n\n\t\treturn cached.slice();\n\t},\n\n\t/**\n\t * Add two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Add two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tresult[i] = Math.round(result[i]);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tcolor1[i] = Math.round(color1[i]);\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolate: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] = Math.round(result[i] + factor*(color2[i]-color1[i]));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor in HSL mode\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolateHSL: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar hsl1 = this.rgb2hsl(color1);\n\t\tvar hsl2 = this.rgb2hsl(color2);\n\t\tfor (var i=0;i<3;i++) {\n\t\t\thsl1[i] += factor*(hsl2[i]-hsl1[i]);\n\t\t}\n\t\treturn this.hsl2rgb(hsl1);\n\t},\n\n\t/**\n\t * Create a new random color based on this one\n\t * @param {number[]} color\n\t * @param {number[]} diff Set of standard deviations\n\t * @returns {number[]}\n\t */\n\trandomize: function(color, diff) {\n\t\tif (!(diff instanceof Array)) { diff = Math.round(ROT.RNG.getNormal(0, diff)); }\n\t\tvar result = color.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] += (diff instanceof Array ? Math.round(ROT.RNG.getNormal(0, diff[i])) : diff);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\trgb2hsl: function(color) {\n\t\tvar r = color[0]/255;\n\t\tvar g = color[1]/255;\n\t\tvar b = color[2]/255;\n\n\t\tvar max = Math.max(r, g, b), min = Math.min(r, g, b);\n\t\tvar h, s, l = (max + min) / 2;\n\n\t\tif (max == min) {\n\t\t\th = s = 0; // achromatic\n\t\t} else {\n\t\t\tvar d = max - min;\n\t\t\ts = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n\t\t\tswitch(max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t\t}\n\t\t\th /= 6;\n\t\t}\n\n\t\treturn [h, s, l];\n\t},\n\n\t/**\n\t * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\thsl2rgb: function(color) {\n\t\tvar l = color[2];\n\n\t\tif (color[1] == 0) {\n\t\t\tl = Math.round(l*255);\n\t\t\treturn [l, l, l];\n\t\t} else {\n\t\t\tvar hue2rgb = function(p, q, t) {\n\t\t\t\tif (t < 0) t += 1;\n\t\t\t\tif (t > 1) t -= 1;\n\t\t\t\tif (t < 1/6) return p + (q - p) * 6 * t;\n\t\t\t\tif (t < 1/2) return q;\n\t\t\t\tif (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\t\treturn p;\n\t\t\t}\n\n\t\t\tvar s = color[1];\n\t\t\tvar q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n\t\t\tvar p = 2 * l - q;\n\t\t\tvar r = hue2rgb(p, q, color[0] + 1/3);\n\t\t\tvar g = hue2rgb(p, q, color[0]);\n\t\t\tvar b = hue2rgb(p, q, color[0] - 1/3);\n\t\t\treturn [Math.round(r*255), Math.round(g*255), Math.round(b*255)];\n\t\t}\n\t},\n\n\ttoRGB: function(color) {\n\t\treturn \"rgb(\" + this._clamp(color[0]) + \",\" + this._clamp(color[1]) + \",\" + this._clamp(color[2]) + \")\";\n\t},\n\n\ttoHex: function(color) {\n\t\tvar parts = [];\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tparts.push(this._clamp(color[i]).toString(16).lpad(\"0\", 2));\n\t\t}\n\t\treturn \"#\" + parts.join(\"\");\n\t},\n\n\t_clamp: function(num) {\n\t\tif (num < 0) {\n\t\t\treturn 0;\n\t\t} else if (num > 255) {\n\t\t\treturn 255;\n\t\t} else {\n\t\t\treturn num;\n\t\t}\n\t},\n\n\t_cache: {\n\t\t\"black\": [0,0,0],\n\t\t\"navy\": [0,0,128],\n\t\t\"darkblue\": [0,0,139],\n\t\t\"mediumblue\": [0,0,205],\n\t\t\"blue\": [0,0,255],\n\t\t\"darkgreen\": [0,100,0],\n\t\t\"green\": [0,128,0],\n\t\t\"teal\": [0,128,128],\n\t\t\"darkcyan\": [0,139,139],\n\t\t\"deepskyblue\": [0,191,255],\n\t\t\"darkturquoise\": [0,206,209],\n\t\t\"mediumspringgreen\": [0,250,154],\n\t\t\"lime\": [0,255,0],\n\t\t\"springgreen\": [0,255,127],\n\t\t\"aqua\": [0,255,255],\n\t\t\"cyan\": [0,255,255],\n\t\t\"midnightblue\": [25,25,112],\n\t\t\"dodgerblue\": [30,144,255],\n\t\t\"forestgreen\": [34,139,34],\n\t\t\"seagreen\": [46,139,87],\n\t\t\"darkslategray\": [47,79,79],\n\t\t\"darkslategrey\": [47,79,79],\n\t\t\"limegreen\": [50,205,50],\n\t\t\"mediumseagreen\": [60,179,113],\n\t\t\"turquoise\": [64,224,208],\n\t\t\"royalblue\": [65,105,225],\n\t\t\"steelblue\": [70,130,180],\n\t\t\"darkslateblue\": [72,61,139],\n\t\t\"mediumturquoise\": [72,209,204],\n\t\t\"indigo\": [75,0,130],\n\t\t\"darkolivegreen\": [85,107,47],\n\t\t\"cadetblue\": [95,158,160],\n\t\t\"cornflowerblue\": [100,149,237],\n\t\t\"mediumaquamarine\": [102,205,170],\n\t\t\"dimgray\": [105,105,105],\n\t\t\"dimgrey\": [105,105,105],\n\t\t\"slateblue\": [106,90,205],\n\t\t\"olivedrab\": [107,142,35],\n\t\t\"slategray\": [112,128,144],\n\t\t\"slategrey\": [112,128,144],\n\t\t\"lightslategray\": [119,136,153],\n\t\t\"lightslategrey\": [119,136,153],\n\t\t\"mediumslateblue\": [123,104,238],\n\t\t\"lawngreen\": [124,252,0],\n\t\t\"chartreuse\": [127,255,0],\n\t\t\"aquamarine\": [127,255,212],\n\t\t\"maroon\": [128,0,0],\n\t\t\"purple\": [128,0,128],\n\t\t\"olive\": [128,128,0],\n\t\t\"gray\": [128,128,128],\n\t\t\"grey\": [128,128,128],\n\t\t\"skyblue\": [135,206,235],\n\t\t\"lightskyblue\": [135,206,250],\n\t\t\"blueviolet\": [138,43,226],\n\t\t\"darkred\": [139,0,0],\n\t\t\"darkmagenta\": [139,0,139],\n\t\t\"saddlebrown\": [139,69,19],\n\t\t\"darkseagreen\": [143,188,143],\n\t\t\"lightgreen\": [144,238,144],\n\t\t\"mediumpurple\": [147,112,216],\n\t\t\"darkviolet\": [148,0,211],\n\t\t\"palegreen\": [152,251,152],\n\t\t\"darkorchid\": [153,50,204],\n\t\t\"yellowgreen\": [154,205,50],\n\t\t\"sienna\": [160,82,45],\n\t\t\"brown\": [165,42,42],\n\t\t\"darkgray\": [169,169,169],\n\t\t\"darkgrey\": [169,169,169],\n\t\t\"lightblue\": [173,216,230],\n\t\t\"greenyellow\": [173,255,47],\n\t\t\"paleturquoise\": [175,238,238],\n\t\t\"lightsteelblue\": [176,196,222],\n\t\t\"powderblue\": [176,224,230],\n\t\t\"firebrick\": [178,34,34],\n\t\t\"darkgoldenrod\": [184,134,11],\n\t\t\"mediumorchid\": [186,85,211],\n\t\t\"rosybrown\": [188,143,143],\n\t\t\"darkkhaki\": [189,183,107],\n\t\t\"silver\": [192,192,192],\n\t\t\"mediumvioletred\": [199,21,133],\n\t\t\"indianred\": [205,92,92],\n\t\t\"peru\": [205,133,63],\n\t\t\"chocolate\": [210,105,30],\n\t\t\"tan\": [210,180,140],\n\t\t\"lightgray\": [211,211,211],\n\t\t\"lightgrey\": [211,211,211],\n\t\t\"palevioletred\": [216,112,147],\n\t\t\"thistle\": [216,191,216],\n\t\t\"orchid\": [218,112,214],\n\t\t\"goldenrod\": [218,165,32],\n\t\t\"crimson\": [220,20,60],\n\t\t\"gainsboro\": [220,220,220],\n\t\t\"plum\": [221,160,221],\n\t\t\"burlywood\": [222,184,135],\n\t\t\"lightcyan\": [224,255,255],\n\t\t\"lavender\": [230,230,250],\n\t\t\"darksalmon\": [233,150,122],\n\t\t\"violet\": [238,130,238],\n\t\t\"palegoldenrod\": [238,232,170],\n\t\t\"lightcoral\": [240,128,128],\n\t\t\"khaki\": [240,230,140],\n\t\t\"aliceblue\": [240,248,255],\n\t\t\"honeydew\": [240,255,240],\n\t\t\"azure\": [240,255,255],\n\t\t\"sandybrown\": [244,164,96],\n\t\t\"wheat\": [245,222,179],\n\t\t\"beige\": [245,245,220],\n\t\t\"whitesmoke\": [245,245,245],\n\t\t\"mintcream\": [245,255,250],\n\t\t\"ghostwhite\": [248,248,255],\n\t\t\"salmon\": [250,128,114],\n\t\t\"antiquewhite\": [250,235,215],\n\t\t\"linen\": [250,240,230],\n\t\t\"lightgoldenrodyellow\": [250,250,210],\n\t\t\"oldlace\": [253,245,230],\n\t\t\"red\": [255,0,0],\n\t\t\"fuchsia\": [255,0,255],\n\t\t\"magenta\": [255,0,255],\n\t\t\"deeppink\": [255,20,147],\n\t\t\"orangered\": [255,69,0],\n\t\t\"tomato\": [255,99,71],\n\t\t\"hotpink\": [255,105,180],\n\t\t\"coral\": [255,127,80],\n\t\t\"darkorange\": [255,140,0],\n\t\t\"lightsalmon\": [255,160,122],\n\t\t\"orange\": [255,165,0],\n\t\t\"lightpink\": [255,182,193],\n\t\t\"pink\": [255,192,203],\n\t\t\"gold\": [255,215,0],\n\t\t\"peachpuff\": [255,218,185],\n\t\t\"navajowhite\": [255,222,173],\n\t\t\"moccasin\": [255,228,181],\n\t\t\"bisque\": [255,228,196],\n\t\t\"mistyrose\": [255,228,225],\n\t\t\"blanchedalmond\": [255,235,205],\n\t\t\"papayawhip\": [255,239,213],\n\t\t\"lavenderblush\": [255,240,245],\n\t\t\"seashell\": [255,245,238],\n\t\t\"cornsilk\": [255,248,220],\n\t\t\"lemonchiffon\": [255,250,205],\n\t\t\"floralwhite\": [255,250,240],\n\t\t\"snow\": [255,250,250],\n\t\t\"yellow\": [255,255,0],\n\t\t\"lightyellow\": [255,255,224],\n\t\t\"ivory\": [255,255,240],\n\t\t\"white\": [255,255,255]\n\t}\n};\n/**\n * @class Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n * @param {function} reflectivityCallback Callback to retrieve cell reflectivity (0..1)\n * @param {object} [options]\n * @param {int} [options.passes=1] Number of passes. 1 equals to simple FOV of all light sources, >1 means a *highly simplified* radiosity-like algorithm.\n * @param {int} [options.emissionThreshold=100] Cells with emissivity > threshold will be treated as light source in the next pass.\n * @param {int} [options.range=10] Max light range\n */\nROT.Lighting = function(reflectivityCallback, options) {\n\tthis._reflectivityCallback = reflectivityCallback;\n\tthis._options = {\n\t\tpasses: 1,\n\t\temissionThreshold: 100,\n\t\trange: 10\n\t};\n\tthis._fov = null;\n\n\tthis._lights = {};\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\tthis.setOptions(options);\n};\n\n/**\n * Adjust options at runtime\n * @see ROT.Lighting\n * @param {object} [options]\n */\nROT.Lighting.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options && options.range) { this.reset(); }\n\treturn this;\n};\n\n/**\n * Set the used Field-Of-View algo\n * @param {ROT.FOV} fov\n */\nROT.Lighting.prototype.setFOV = function(fov) {\n\tthis._fov = fov;\n\tthis._fovCache = {};\n\treturn this;\n};\n\n/**\n * Set (or remove) a light source\n * @param {int} x\n * @param {int} y\n * @param {null || string || number[3]} color\n */\nROT.Lighting.prototype.setLight = function(x, y, color) {\n  var key = x + \",\" + y;\n\n  if (color) {\n    this._lights[key] = (typeof(color) == \"string\" ? ROT.Color.fromString(color) : color);\n  } else {\n    delete this._lights[key];\n  }\n  return this;\n};\n\n/**\n * Remove all light sources\n */\nROT.Lighting.prototype.clearLights = function() {\n    this._lights = {};\n};\n\n/**\n * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n */\nROT.Lighting.prototype.reset = function() {\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\treturn this;\n};\n\n/**\n * Compute the lighting\n * @param {function} lightingCallback Will be called with (x, y, color) for every lit cell\n */\nROT.Lighting.prototype.compute = function(lightingCallback) {\n\tvar doneCells = {};\n\tvar emittingCells = {};\n\tvar litCells = {};\n\n\tfor (var key in this._lights) { /* prepare emitters for first pass */\n\t\tvar light = this._lights[key];\n\t\temittingCells[key] = [0, 0, 0];\n\t\tROT.Color.add_(emittingCells[key], light);\n\t}\n\n\tfor (var i=0;i<this._options.passes;i++) { /* main loop */\n\t\tthis._emitLight(emittingCells, litCells, doneCells);\n\t\tif (i+1 == this._options.passes) { continue; } /* not for the last pass */\n\t\temittingCells = this._computeEmitters(litCells, doneCells);\n\t}\n\n\tfor (var litKey in litCells) { /* let the user know what and how is lit */\n\t\tvar parts = litKey.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tlightingCallback(x, y, litCells[litKey]);\n\t}\n\n\treturn this;\n};\n\n/**\n * Compute one iteration from all emitting cells\n * @param {object} emittingCells These emit light\n * @param {object} litCells Add projected light to these\n * @param {object} doneCells These already emitted, forbid them from further calculations\n */\nROT.Lighting.prototype._emitLight = function(emittingCells, litCells, doneCells) {\n\tfor (var key in emittingCells) {\n\t\tvar parts = key.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tthis._emitLightFromCell(x, y, emittingCells[key], litCells);\n\t\tdoneCells[key] = 1;\n\t}\n\treturn this;\n};\n\n/**\n * Prepare a list of emitters for next pass\n * @param {object} litCells\n * @param {object} doneCells\n * @returns {object}\n */\nROT.Lighting.prototype._computeEmitters = function(litCells, doneCells) {\n\tvar result = {};\n\n\tfor (var key in litCells) {\n\t\tif (key in doneCells) { continue; } /* already emitted */\n\n\t\tvar color = litCells[key];\n\n\t\tif (key in this._reflectivityCache) {\n\t\t\tvar reflectivity = this._reflectivityCache[key];\n\t\t} else {\n\t\t\tvar parts = key.split(\",\");\n\t\t\tvar x = parseInt(parts[0]);\n\t\t\tvar y = parseInt(parts[1]);\n\t\t\tvar reflectivity = this._reflectivityCallback(x, y);\n\t\t\tthis._reflectivityCache[key] = reflectivity;\n\t\t}\n\n\t\tif (reflectivity == 0) { continue; } /* will not reflect at all */\n\n\t\t/* compute emission color */\n\t\tvar emission = [];\n\t\tvar intensity = 0;\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tvar part = Math.round(color[i]*reflectivity);\n\t\t\temission[i] = part;\n\t\t\tintensity += part;\n\t\t}\n\t\tif (intensity > this._options.emissionThreshold) { result[key] = emission; }\n\t}\n\n\treturn result;\n};\n\n/**\n * Compute one iteration from one cell\n * @param {int} x\n * @param {int} y\n * @param {number[]} color\n * @param {object} litCells Cell data to by updated\n */\nROT.Lighting.prototype._emitLightFromCell = function(x, y, color, litCells) {\n\tvar key = x+\",\"+y;\n\tif (key in this._fovCache) {\n\t\tvar fov = this._fovCache[key];\n\t} else {\n\t\tvar fov = this._updateFOV(x, y);\n\t}\n\n\tfor (var fovKey in fov) {\n\t\tvar formFactor = fov[fovKey];\n\n\t\tif (fovKey in litCells) { /* already lit */\n\t\t\tvar result = litCells[fovKey];\n\t\t} else { /* newly lit */\n\t\t\tvar result = [0, 0, 0];\n\t\t\tlitCells[fovKey] = result;\n\t\t}\n\n\t\tfor (var i=0;i<3;i++) { result[i] += Math.round(color[i]*formFactor); } /* add light color */\n\t}\n\n\treturn this;\n};\n\n/**\n * Compute FOV (\"form factor\") for a potential light source at [x,y]\n * @param {int} x\n * @param {int} y\n * @returns {object}\n */\nROT.Lighting.prototype._updateFOV = function(x, y) {\n\tvar key1 = x+\",\"+y;\n\tvar cache = {};\n\tthis._fovCache[key1] = cache;\n\tvar range = this._options.range;\n\tvar cb = function(x, y, r, vis) {\n\t\tvar key2 = x+\",\"+y;\n\t\tvar formFactor = vis * (1-r/range);\n\t\tif (formFactor == 0) { return; }\n\t\tcache[key2] = formFactor;\n\t};\n\tthis._fov.compute(x, y, range, cb.bind(this));\n\n\treturn cache;\n};\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nROT.Path = function(toX, toY, passableCallback, options) {\n\tthis._toX = toX;\n\tthis._toY = toY;\n\tthis._fromX = null;\n\tthis._fromY = null;\n\tthis._passableCallback = passableCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t};\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tif (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n\t\tthis._dirs = [\n\t\t\tthis._dirs[0],\n\t\t\tthis._dirs[2],\n\t\t\tthis._dirs[4],\n\t\t\tthis._dirs[6],\n\t\t\tthis._dirs[1],\n\t\t\tthis._dirs[3],\n\t\t\tthis._dirs[5],\n\t\t\tthis._dirs[7]\n\t\t]\n\t}\n};\n\n/**\n * Compute a path from a given point\n * @param {int} fromX\n * @param {int} fromY\n * @param {function} callback Will be called for every path item with arguments \"x\" and \"y\"\n */\nROT.Path.prototype.compute = function(fromX, fromY, callback) {\n};\n\nROT.Path.prototype._getNeighbors = function(cx, cy) {\n\tvar result = [];\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (!this._passableCallback(x, y)) { continue; }\n\t\tresult.push([x, y]);\n\t}\n\t\n\treturn result;\n};\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.Dijkstra = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._computed = {};\n\tthis._todo = [];\n\tthis._add(toX, toY, null);\n};\nROT.Path.Dijkstra.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.Dijkstra.prototype.compute = function(fromX, fromY, callback) {\n\tvar key = fromX+\",\"+fromY;\n\tif (!(key in this._computed)) { this._compute(fromX, fromY); }\n\tif (!(key in this._computed)) { return; }\n\t\n\tvar item = this._computed[key];\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n};\n\n/**\n * Compute a non-cached value\n */\nROT.Path.Dijkstra.prototype._compute = function(fromX, fromY) {\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { return; }\n\t\t\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\t\t\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._computed) { continue; } /* already done */\t\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n};\n\nROT.Path.Dijkstra.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev\n\t};\n\tthis._computed[x+\",\"+y] = obj;\n\tthis._todo.push(obj);\n};\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.AStar = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = null;\n\tthis._fromY = null;\n};\nROT.Path.AStar.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.AStar.prototype.compute = function(fromX, fromY, callback) {\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = fromX;\n\tthis._fromY = fromY;\n\tthis._add(this._toX, this._toY, null);\n\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tvar id = item.x+\",\"+item.y;\n\t\tif (id in this._done) { continue; }\n\t\tthis._done[id] = item;\n\t\tif (item.x == fromX && item.y == fromY) { break; }\n\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._done) { continue; }\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n\t\n\tvar item = this._done[fromX+\",\"+fromY];\n\tif (!item) { return; }\n\t\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n};\n\nROT.Path.AStar.prototype._add = function(x, y, prev) {\n\tvar h = this._distance(x, y);\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev,\n\t\tg: (prev ? prev.g+1 : 0),\n\t\th: h\n\t};\n\t\n\t/* insert into priority queue */\n\t\n\tvar f = obj.g + obj.h;\n\tfor (var i=0;i<this._todo.length;i++) {\n\t\tvar item = this._todo[i];\n\t\tvar itemF = item.g + item.h;\n\t\tif (f < itemF || (f == itemF && h < item.h)) {\n\t\t\tthis._todo.splice(i, 0, obj);\n\t\t\treturn;\n\t\t}\n\t}\n\t\n\tthis._todo.push(obj);\n};\n\nROT.Path.AStar.prototype._distance = function(x, y) {\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\treturn (Math.abs(x-this._fromX) + Math.abs(y-this._fromY));\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tvar dx = Math.abs(x - this._fromX);\n\t\t\tvar dy = Math.abs(y - this._fromY);\n\t\t\treturn dy + Math.max(0, (dx-dy)/2);\n\t\tbreak;\n\n\t\tcase 8: \n\t\t\treturn Math.max(Math.abs(x-this._fromX), Math.abs(y-this._fromY));\n\t\tbreak;\n\t}\n\n        throw new Error(\"Illegal topology\");\n};\n/**\n * @class Terminal backend\n * @private\n */\nROT.Display.Term = function(context) {\n\tROT.Display.Backend.call(this, context);\n\tthis._cx = -1;\n\tthis._cy = -1;\n\tthis._lastColor = \"\";\n\tthis._options = {};\n\tthis._ox = 0;\n\tthis._oy = 0;\n\tthis._termcolor = {};\n}\nROT.Display.Term.extend(ROT.Display.Backend);\n\nROT.Display.Term.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._ox = Math.floor((process.stdout.columns - options.width) / 2);\n\tthis._oy = Math.floor((process.stdout.rows - options.height) / 2);\n\tthis._termcolor = new ROT.Display.Term[options.termColor.capitalize()](this._context);\n\tthis._context._termcolor = this._termcolor;\n}\n\nROT.Display.Term.prototype.draw = function(data, clearBefore) {\n\t// determine where to draw what with what colors\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\t// determine if we need to move the terminal cursor\n\tvar dx = this._ox + x;\n\tvar dy = this._oy + y;\n\tif (dx < 0 || dx >= process.stdout.columns) { return; }\n\tif (dy < 0 || dy >= process.stdout.rows) { return; }\n\tif (dx !== this._cx || dy !== this._cy) {\n\t\tprocess.stdout.write(this._termcolor.positionToAnsi(dx,dy));\n\t\tthis._cx = dx;\n\t\tthis._cy = dy;\n\t}\n\n\t// terminals automatically clear, but if we're clearing when we're\n\t// not otherwise provided with a character, just use a space instead\n\tif (clearBefore) {\n\t\tif (!ch) {\n\t\t\tch = \" \";\n\t\t}\n\t}\n\t\t\n\t// if we're not clearing and not provided with a character, do nothing\n\tif (!ch) { return; }\n\n\t// determine if we need to change colors\n\tvar newColor = this._termcolor.colorToAnsi(fg,bg);\n\tif (newColor !== this._lastColor) {\n\t\tprocess.stdout.write(newColor);\n\t\tthis._lastColor = newColor;\n\t}\n\n\t// write the provided symbol to the display\n\tvar chars = [].concat(ch);\n\tprocess.stdout.write(chars[0]);\n\n\t// update our position, given that we wrote a character\n\tthis._cx++;\n\tif (this._cx >= process.stdout.columns) {\n\t\tthis._cx = 0;\n\t\tthis._cy++;\n\t}\n}\n\nROT.Display.Term.prototype.computeSize = function(availWidth, availHeight) {\n\treturn [process.stdout.columns, process.stdout.rows];\n}\n\nROT.Display.Term.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn 12;\n}\n\nROT.Display.Term.prototype.eventToPosition = function(x, y) {\n\treturn [x,y]\n}\n/**\n * @class Abstract terminal code module\n * @private\n */\nROT.Display.Term.Color = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Term.Color.prototype.clearToAnsi = function(bg) {\n}\n\nROT.Display.Term.Color.prototype.colorToAnsi = function(fg, bg) {\n}\n\nROT.Display.Term.Color.prototype.positionToAnsi = function(x, y) {\n}\n/**\n * @class xterm terminal code module\n * @private\n */\nROT.Display.Term.Xterm = function(context) {\n\tROT.Display.Term.Color.call(this, context);\n}\nROT.Display.Term.Xterm.extend(ROT.Display.Term.Color);\n\nROT.Display.Term.Xterm.prototype.clearToAnsi = function(bg) {\n\treturn \"\\x1b[0;48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\\x1b[2J\";\n}\n\nROT.Display.Term.Xterm.prototype.colorToAnsi = function(fg, bg) {\n\treturn \"\\x1b[0;38;5;\"\n\t\t+ this._termcolor(fg)\n\t\t+ \";48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\";\n}\n\nROT.Display.Term.Xterm.prototype.positionToAnsi = function(x, y) {\n\treturn \"\\x1b[\" + (y+1) + \";\" + (x+1) + \"H\";\n}\n\nROT.Display.Term.Xterm.prototype._termcolor = function(color) {\n\tvar SRC_COLORS = 256.0;\n\tvar DST_COLORS = 6.0;\n\tvar COLOR_RATIO = DST_COLORS / SRC_COLORS;\n\tvar rgb = ROT.Color.fromString(color);\n\tvar r = Math.floor(rgb[0] * COLOR_RATIO);\n\tvar g = Math.floor(rgb[1] * COLOR_RATIO);\n\tvar b = Math.floor(rgb[2] * COLOR_RATIO);\n\treturn r*36 + g*6 + b*1 + 16;\n}\n/**\n * Export to Node.js module\n */\nfor (var p in ROT) {\n\texports[p] = ROT[p];\n}\n  return ROT;\n}));\n","export default {\n  black: \"#000010\",\n  darkBlue: \"#283a6d\",\n  darkPurple: \"#7e2553\",\n  darkGreen: \"#008751\",\n  brown: \"#ab5236\",\n  darkGray: \"#5f574f\",\n  lightGray: \"#c2c3c7\",\n  white: \"#fff1f8\",\n  red: \"#ff0040\",\n  orange: \"#ffa300\",\n  yellow: \"#ffec27\",\n  green: \"#00e436\",\n  blue: \"#29adff\",\n  indigo: \"#83769c\",\n  pink: \"#ff77a8\",\n  peach: \"#ffccaa\"\n};\n","import Colors from \"./colors\";\n\nclass Glyph {\n  constructor({ fg = Colors.white, bg = Colors.black, char = \" \" }) {\n    this.fg = fg;\n    this.bg = bg;\n    this.char = char;\n  }\n  getFg() {\n    return this.fg;\n  }\n  getBg() {\n    return this.bg;\n  }\n  getChar() {\n    return this.char;\n  }\n}\n\nexport default Glyph;\n","import Glyph from \"./glyph\";\n\nclass DynamicGlyph extends Glyph {\n  constructor({ name = \"\", mixins = [] }) {\n    super(...arguments);\n    this.name = name;\n    this.attachedMixins = {};\n    this.attachedMixinGroups = {};\n    this.setupFunctions = [];\n\n    mixins.forEach(mixinFactory => {\n      const mixin = new mixinFactory(...arguments);\n\n      this.attachedMixins[mixin.name] = true;\n      delete mixin.name;\n      if (mixin.groupName) {\n        this.attachedMixinGroups[mixin.groupName] = true;\n        delete mixin.groupName;\n      }\n      if (mixin.setup) {\n        this.setupFunctions.push(mixin.setup.bind(this));\n      }\n      Object.assign(this, mixin);\n    });\n    this.setupFunctions.forEach(fun => fun());\n  }\n\n  hasMixin(mixin) {\n    return (\n      this.attachedMixins.hasOwnProperty(mixin) ||\n      this.attachedMixinGroups.hasOwnProperty(mixin)\n    );\n  }\n\n  describe() {\n    return this.name;\n  }\n\n  describeA(capitalize) {\n    const prefixes = capitalize ? [`A`, `An`] : [`a`, `an`];\n    const prefix =\n      \"aeiou\".indexOf(this.describe()[0].toLowerCase()) >= 0 ? 1 : 0;\n    return prefixes[prefix] + \" \" + this.describe();\n  }\n\n  describeThe(capitalize) {\n    const prefix = capitalize ? `The` : `the`;\n    return prefix + \" \" + this.describe();\n  }\n}\n\nexport default DynamicGlyph;\n","import DynamicGlyph from \"../dynamicGlyph\";\n\nclass Entity extends DynamicGlyph {\n  constructor({\n    x = 0,\n    y = 0,\n    name = \" \",\n    level = null,\n    Game = null,\n    speed = 1000,\n    description = \"\"\n  }) {\n    super(...arguments);\n    this.x = x;\n    this.y = y;\n    this.description = description;\n    this.name = name;\n    this.level = level;\n    this.game = Game;\n    this.speed = speed;\n    this.alive = true;\n  }\n  isAlive() {\n    return this.alive;\n  }\n  kill() {\n    if (!this.isAlive()) return;\n    this.alive = false;\n    if (this.hasMixin(\"PlayerActor\")) {\n      this.act();\n    } else {\n      this.getLevel().removeEntity(this);\n    }\n  }\n  getSpeed() {\n    let mod = 0;\n    if (this.hasMixin(\"TimedStatusEffects\")) {\n      this.getTimedStatusEffects().forEach(s => {\n        if (s.property == \"speed\") {\n          mod += s.value;\n        }\n      });\n    }\n    if (this.armor && this.armor.length > 1) {\n      mod -= Math.pow(5, this.armor.length);\n    }\n    return Math.max(this.speed + mod, 100);\n  }\n\n  setGame(game) {\n    this.game = game;\n  }\n  getGame() {\n    return this.game;\n  }\n  getLevel() {\n    return this.level;\n  }\n  setLevel(newLevel) {\n    this.level = newLevel;\n  }\n  getName() {\n    return this.name;\n  }\n  setName(newName) {\n    this.name = newName;\n  }\n  getX() {\n    return this.x;\n  }\n  getY() {\n    return this.y;\n  }\n  setX(newX) {\n    this.x = newX;\n  }\n  setY(newY) {\n    this.y = newY;\n  }\n  setPosition(newX, newY) {\n    if (this.level) {\n      this.level.updateEntityPosition(this.x, this.y, newX, newY);\n    }\n    this.x = newX;\n    this.y = newY;\n  }\n}\n\nexport default Entity;\n","import ROT from \"rot-js\";\nimport startScreen from \"./startScreen\";\n\nclass gameOverScreen {\n  constructor(Game) {\n    this.game = Game;\n  }\n  exit() {}\n  handleInput(inputData) {\n    if (inputData.keyCode == ROT.VK_RETURN) {\n      window.location.reload();\n    }\n  }\n  render(Game) {\n    const display = Game.getDisplay();\n    display.drawText(0, 0, \"game over!\");\n  }\n}\nexport default gameOverScreen;\n","import ROT from \"rot-js\";\nimport startScreen from \"./startScreen\";\n\nclass WinScreen {\n  constructor(Game) {\n    this.game = Game;\n  }\n  exit() {}\n  handleInput(inputData) {\n    if (inputData.keyCode == ROT.VK_RETURN) {\n      this.game.switchScreen(startScreen);\n    }\n  }\n  render(Game) {\n    const display = Game.getDisplay();\n    display.drawText(0, 0, \"YOU WIN.  CONGRATZ\");\n  }\n}\nexport default WinScreen;\n","export function h(name, attributes /*, ...rest*/) {\n  var node\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    if ((node = rest.pop()) && node.pop /* Array? */) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var renderLock\n  var invokeLaterStack = []\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && toVNode(rootElement, [].map)\n  var globalState = clone(state)\n  var wiredActions = clone(actions)\n\n  scheduleRender(wireStateToActions([], globalState, wiredActions))\n\n  return wiredActions\n\n  function toVNode(element, map) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : toVNode(element, map)\n      })\n    }\n  }\n\n  function render() {\n    renderLock = !renderLock\n\n    var next = view(globalState, wiredActions)\n    if (container && !renderLock) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = next))\n    }\n\n    while ((next = invokeLaterStack.pop())) next()\n  }\n\n  function scheduleRender() {\n    if (!renderLock) {\n      renderLock = !renderLock\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var obj = {}\n\n    for (var i in target) obj[i] = target[i]\n    for (var i in source) obj[i] = source[i]\n\n    return obj\n  }\n\n  function set(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1 ? set(path.slice(1), value, source[path[0]]) : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function get(path, source) {\n    for (var i = 0; i < path.length; i++) {\n      source = source[path[i]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              if (typeof (data = action(data)) === \"function\") {\n                data = data(get(path, globalState), actions)\n              }\n\n              if (\n                data &&\n                data !== (state = get(path, globalState)) &&\n                !data.then // Promise\n              ) {\n                scheduleRender(\n                  (globalState = set(path, clone(state, data), globalState))\n                )\n              }\n\n              return data\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = state[key] || {}),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function setElementProp(element, name, value, isSVG, oldValue) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var i in clone(oldValue, value)) {\n        element[name][i] = value == null || value[i] == null ? \"\" : value[i]\n      }\n    } else {\n      if (typeof value === \"function\" || (name in element && !isSVG)) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSVG) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSVG = isSVG || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    if (node.attributes) {\n      if (node.attributes.oncreate) {\n        invokeLaterStack.push(function() {\n          node.attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(createElement(node.children[i], isSVG))\n      }\n\n      for (var name in node.attributes) {\n        setElementProp(element, name, node.attributes[name], isSVG)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldProps, attributes, isSVG) {\n    for (var name in clone(oldProps, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldProps[name])\n      ) {\n        setElementProp(element, name, attributes[name], isSVG, oldProps[name])\n      }\n    }\n\n    if (attributes.onupdate) {\n      invokeLaterStack.push(function() {\n        attributes.onupdate(element, oldProps)\n      })\n    }\n  }\n\n  function removeChildren(element, node, attributes) {\n    if ((attributes = node.attributes)) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node, cb) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    if (node.attributes && (cb = node.attributes.onremove)) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSVG, nextSibling) {\n    if (node === oldNode) {\n    } else if (oldNode == null) {\n      element = parent.insertBefore(createElement(node, isSVG), element)\n    } else if (node.nodeName && node.nodeName === oldNode.nodeName) {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSVG = isSVG || node.nodeName === \"svg\")\n      )\n\n      var oldElements = []\n      var oldKeyed = {}\n      var newKeyed = {}\n\n      for (var i = 0; i < oldNode.children.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldChild = oldNode.children[i]\n        var oldKey = getKey(oldChild)\n\n        if (null != oldKey) {\n          oldKeyed[oldKey] = [oldElements[i], oldChild]\n        }\n      }\n\n      var i = 0\n      var j = 0\n\n      while (j < node.children.length) {\n        var oldChild = oldNode.children[i]\n        var newChild = node.children[j]\n\n        var oldKey = getKey(oldChild)\n        var newKey = getKey(newChild)\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey == null) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChild, newChild, isSVG)\n            j++\n          }\n          i++\n        } else {\n          var recyledNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, recyledNode[0], recyledNode[1], newChild, isSVG)\n            i++\n          } else if (recyledNode[0]) {\n            patch(\n              element,\n              element.insertBefore(recyledNode[0], oldElements[i]),\n              recyledNode[1],\n              newChild,\n              isSVG\n            )\n          } else {\n            patch(element, oldElements[i], null, newChild, isSVG)\n          }\n\n          j++\n          newKeyed[newKey] = newChild\n        }\n      }\n\n      while (i < oldNode.children.length) {\n        var oldChild = oldNode.children[i]\n        if (getKey(oldChild) == null) {\n          removeElement(element, oldElements[i], oldChild)\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[oldKeyed[i][1].key]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    } else if (node.nodeName === oldNode.nodeName) {\n      element.nodeValue = node\n    } else {\n      element = parent.insertBefore(\n        createElement(node, isSVG),\n        (nextSibling = element)\n      )\n      removeElement(parent, nextSibling, oldNode)\n    }\n    return element\n  }\n}\n","import ROT from \"rot-js\";\nimport { h, app } from \"hyperapp\";\nimport Colors from \"../colors\";\n\nclass ItemDetailDialog {\n  constructor(item, simple = false) {\n    this.item = item;\n    this.display = document.createElement(\"div\");\n    this.display.classList.add(\"item-detail-dialog\");\n    this.actions = {};\n    this.simple = simple;\n    this.state = { item: this.item, simple: this.simple };\n    this.functions = app(this.state, this.actions, this.view, this.display);\n  }\n\n  view({ item, simple }, actions) {\n    return (\n      <div>\n        <h1>{item.name}</h1>\n        <p>{item.description}</p>\n        {simple ? (\n          \"\"\n        ) : (\n          <div>\n            <div>Actions:</div>\n            <div>(d)rop</div>\n            <div>\n              {item.equipped\n                ? \"(u)nequip\"\n                : item.wieldable\n                  ? \"(w)ield\"\n                  : item.wearable\n                    ? \"(w)ear\"\n                    : item.hasMixin(\"Usable\") ? \"(a)pply\" : \"\"}\n            </div>\n            <p>Press key to use, press 'q' to go back</p>\n            <p>\n              hint: you can use the letter shortcuts above from the main\n              inventory screen\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ItemDetailDialog;\n","import ROT from \"rot-js\";\nimport { h, app } from \"hyperapp\";\nimport Colors from \"../colors\";\nimport ItemDetailDialog from \"./itemDetailDialog\";\n\nclass ItemListDialog {\n  constructor(items, masterScreen, player, title = \"INVENTORY\") {\n    this.items = items;\n    this.masterScreen = masterScreen;\n    this.player = player;\n    this.subscreen = null;\n    this.display = document.createElement(\"div\");\n    this.display.classList.add(\"subscreen\");\n    this.display.classList.add(\"item-list-dialog\");\n    this.title = title;\n    this.actions = {\n      inc: this.incSelectedItem.bind(this),\n      dec: this.decSelectedItem.bind(this),\n      getIndex: value => state => state.selectedItemIndex,\n      getItems: valie => state => state.items,\n      getState: value => state => state,\n      getSelectedItem: value => state => state.items[state.selectedItemIndex],\n      removeItem: itemToRemove => state => {\n        const items = state.items.filter(item => item !== itemToRemove);\n        let selectedItemIndex = Math.min(\n          state.selectedItemIndex,\n          items.length - 1\n        );\n        return { items, selectedItemIndex };\n      }\n    };\n    this.state = {\n      player: this.player,\n      title: this.title,\n      items: this.items,\n      selectedItemIndex: 0\n    };\n    this.functions = app(this.state, this.actions, this.view, this.display);\n  }\n\n  view({ player, items, selectedItemIndex, title }, actions) {\n    return (\n      <div>\n        <h1>\n          {title}\n          {title == \"INVENTORY\"\n            ? `- ${items.length}/${player.getInventorySize()}`\n            : \"\"}\n        </h1>\n        {items.map((item, i) => {\n          return (\n            <div>\n              <span style={{ color: item.fg, marginRight: \"4px\" }}>\n                {item.char}\n              </span>\n              <span class={i == selectedItemIndex ? \"selected\" : \"\"}>\n                {item.name}\n                {item.charges ? `(${item.charges})` : \"\"}\n                {item == player.weapon ? \" (wielding)\" : \"\"}\n                {player.isWearing(item) ? \" (wearing)\" : \"\"}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    document.body.appendChild(this.display);\n  }\n\n  incSelectedItem() {\n    return ({ selectedItemIndex, items }) => ({\n      selectedItemIndex: (selectedItemIndex + 1) % items.length\n    });\n  }\n  decSelectedItem() {\n    return ({ selectedItemIndex, items }) => {\n      let newValue = selectedItemIndex - 1;\n      if (newValue < 0) {\n        newValue = items.length - 1;\n      }\n\n      return {\n        selectedItemIndex: newValue\n      };\n    };\n  }\n  exit() {\n    this.masterScreen.exitSubscreen();\n    this.display.remove();\n  }\n\n  renderItemList() {\n    this.functions = app(\n      this.functions.getState(),\n      this.functions,\n      this.view,\n      this.display\n    );\n  }\n\n  handleInput(inputData) {\n    const item = this.functions.getSelectedItem();\n\n    if (inputData.keyCode === ROT.VK_ESCAPE) {\n      this.exit();\n    }\n\n    if (!item) {\n      return;\n    }\n\n    if (inputData.keyCode === ROT.VK_RETURN) {\n      // view selected item\n      const equipped = item == this.player.armor || item == this.player.weapon;\n      const detailDialog = new ItemDetailDialog(\n        Object.assign(item, { equipped })\n      );\n      this.display.innerHTML = \"\";\n      this.display.appendChild(detailDialog.display);\n    } else if (inputData.keyCode == ROT.VK_Q) {\n      this.display.innerHTML = \"\";\n      this.renderItemList();\n    } else if (\n      inputData.keyCode === ROT.VK_J ||\n      inputData.keyCode === ROT.VK_DOWN ||\n      inputData.keyCode === ROT.VK_2\n    ) {\n      this.functions.inc();\n    } else if (\n      inputData.keyCode === ROT.VK_K ||\n      inputData.keyCode === ROT.VK_UP ||\n      inputData.keyCode === ROT.VK_8\n    ) {\n      this.functions.dec();\n    } else if (inputData.keyCode === ROT.VK_W) {\n      if (item.wieldable) {\n        this.player.wield(item);\n        this.player.getGame().messageDisplay.add(`You wield the ${item.name}`);\n        this.exit();\n      }\n      if (item.wearable) {\n        this.player.wear(item);\n        this.player.getGame().messageDisplay.add(`You put on the ${item.name}`);\n        this.exit();\n      }\n    } else if (inputData.keyCode === ROT.VK_A) {\n      if (item.hasMixin(\"Usable\")) {\n        item.use(this.player);\n        this.player.removeItem(item);\n        this.functions.removeItem(item);\n        this.player.getGame().messageDisplay.add(`You apply the ${item.name}`);\n        this.exit();\n      }\n    } else if (inputData.keyCode === ROT.VK_U) {\n      this.player.unequip(item);\n      this.renderItemList();\n    } else if (inputData.keyCode === ROT.VK_D) {\n      this.player.removeItem(item);\n      this.functions.removeItem(item);\n      this.masterScreen.level.addItem(\n        item,\n        this.player.getX(),\n        this.player.getY()\n      );\n      this.renderItemList();\n    }\n  }\n}\n\nexport default ItemListDialog;\n","import ItemListDialog from \"./itemListDialog\";\nimport ROT from \"rot-js\";\n\nclass PickUpScreen extends ItemListDialog {\n  constructor() {\n    super(...arguments, \"Pick Up What?\");\n    this.title = \"Pick up what?\";\n  }\n\n  handleInput(inputData) {\n    if (inputData.keyCode == ROT.VK_D || inputData.keyCode == ROT.VK_W) {\n      return;\n    }\n    if (inputData.keyCode == ROT.VK_RETURN) {\n      const item = this.functions.getSelectedItem();\n      if (item.canPickUp) {\n        this.player.addItem(item);\n        this.functions.removeItem(item);\n      } else {\n        this.masterScreen.level.game.messageDisplay.add(\"Can't pick that up!\");\n      }\n      const items = this.functions.getItems();\n      this.masterScreen.level.setItemsAt(\n        this.player.getX(),\n        this.player.getY(),\n        items\n      );\n      if (items.length == 0) {\n        this.exit();\n      }\n      return;\n    }\n    super.handleInput(inputData);\n  }\n}\n\nexport default PickUpScreen;\n","import ItemListDialog from \"./itemListDialog\";\nimport ItemDetailDialog from \"./itemDetailDialog\";\nimport ROT from \"rot-js\";\n\nclass VisibleThingsDialog extends ItemListDialog {\n  constructor() {\n    super(...arguments, \"Visible Creatures and Items\");\n    this.title = \"Visible Creatures and Items\";\n  }\n\n  handleInput(inputData) {\n    if (\n      inputData.keyCode == ROT.VK_D ||\n      inputData.keyCode == ROT.VK_W ||\n      inputData.keyCode == ROT.VK_A\n    ) {\n      return;\n    }\n    if (inputData.keyCode == ROT.VK_RETURN) {\n      const item = this.functions.getSelectedItem();\n      const detailDialog = new ItemDetailDialog(item, true);\n      this.display.innerHTML = \"\";\n      this.display.appendChild(detailDialog.display);\n      return;\n    }\n    super.handleInput(inputData);\n  }\n}\n\nexport default VisibleThingsDialog;\n","import { h, app } from \"hyperapp\";\nimport ROT from \"rot-js\";\n\nclass Confirmation {\n  constructor(text, func, cancelFunction, masterScreen) {\n    this.text = text;\n    this.masterScreen = masterScreen;\n    this.function = func;\n    this.cancelFunction = cancelFunction;\n    this.display = document.createElement(\"div\");\n    this.display.classList.add(\"subscreen\");\n    this.display.classList.add(\"confirmation\");\n    app(\n      {\n        text: this.text,\n        confirm: this.confirm.bind(this),\n        cancel: this.cancel.bind(this)\n      },\n      {},\n      this.view,\n      this.display\n    );\n  }\n\n  view({ text, confirm, cancel }) {\n    return (\n      <div>\n        {text}\n        <div>\n          <button onclick={confirm}>YES (ENTER)</button>\n          <button onclick={cancel}>NO (ESCAPE)</button>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    document.body.appendChild(this.display);\n  }\n\n  confirm() {\n    this.masterScreen.exitSubscreen();\n    this.display.remove();\n    this.function();\n  }\n\n  cancel() {\n    this.masterScreen.exitSubscreen();\n    this.display.remove();\n    this.cancelFunction();\n  }\n\n  handleInput(inputData) {\n    if (inputData.keyCode === ROT.VK_ESCAPE) {\n      this.cancel();\n    }\n    if (inputData.keyCode === ROT.VK_RETURN) {\n      this.confirm();\n    }\n  }\n}\n\nexport default Confirmation;\n","import { h, app } from \"hyperapp\";\nimport ROT from \"rot-js\";\n\nclass StoryScreen {\n  constructor(masterScreen, text, func) {\n    this.func = func;\n    this.masterScreen = masterScreen;\n    this.text = text;\n    this.display = document.createElement(\"div\");\n    this.display.classList.add(\"subscreen\");\n    this.display.classList.add(\"story-screen\");\n    this.actions = {};\n    this.app = app(\n      { text: this.text },\n      this.actions,\n      this.view.bind(this),\n      this.display\n    );\n  }\n\n  view({ text }) {\n    return (\n      <div>\n        {text.map(p => <p>{p}</p>)}\n        <p>Press [Enter] to continue</p>\n      </div>\n    );\n  }\n\n  render() {\n    this.display.remove();\n    document.body.appendChild(this.display);\n  }\n\n  handleInput(inputData) {\n    if (\n      inputData.keyCode === ROT.VK_ESCAPE ||\n      inputData.keyCode === ROT.VK_RETURN\n    ) {\n      this.masterScreen.exitSubscreen();\n      this.display.remove();\n      if (this.func) {\n        this.func();\n      }\n    }\n  }\n}\n\nexport default StoryScreen;\n","import { h, app } from \"hyperapp\";\nimport ROT from \"rot-js\";\n\nclass HelpScreen {\n  constructor(masterScreen) {\n    this.masterScreen = masterScreen;\n    this.display = document.createElement(\"div\");\n    this.display.classList.add(\"subscreen\");\n    this.screens = [\n      \"otherKeys\",\n      \"movement\",\n      \"inventory\",\n      \"weaponsAndArmor\",\n      \"blasters\"\n    ];\n    this.actions = {\n      switchScreen: value => state => ({\n        screen: value\n      })\n    };\n    this.app = app(\n      { screen: this.screens[0] },\n      this.actions,\n      this.view.bind(this),\n      this.display\n    );\n  }\n\n  view({ screen }) {\n    switch (screen) {\n      case \"movement\":\n        return <this.movementScreen />;\n      case \"otherKeys\":\n        return <this.otherKeys />;\n      case \"inventory\":\n        return <this.inventory />;\n      case \"weaponsAndArmor\":\n        return <this.weaponsAndArmor />;\n      case \"blasters\":\n        return <this.blasters />;\n      default:\n        return <div>error</div>;\n    }\n  }\n\n  weaponsAndArmor() {\n    return (\n      <div>\n        <h1>HELP - WEAPONS AND ARMOR</h1>\n        <p>\n          You can wield or wear certain items from the inventory screen. Weapons\n          and Armor items can give you stat boosts or special abilities. Check\n          your player status (press 'p') to see how various weapons and armor\n          affect your attack and defense values.\n        </p>\n        <p>\n          You may only wield one weapon at a time, but wielding weapons does not\n          use up a turn, so feel free to switch often during combat.\n        </p>\n        <p>\n          Multiple pieces of Armor may be worn, but wearing more than one piece\n          will negatively affect your speed... so use with care!\n        </p>\n        <p class=\"gray\">(press &lt; or &gt; to view more help topics)</p>\n      </div>\n    );\n  }\n\n  blasters() {\n    return (\n      <div>\n        <h1>HELP - BLASTERS</h1>\n        <p>\n          Blasters can be fired by pressing 'f' and then one of the direction\n          keys while wielding the weapon. Blasters can only be fired in one of\n          the 8 movement directions and may or may not have a limited range.\n          Blasters have a limited amount of charges and once they have run out\n          will no longer fire. It is possible to find \"blaster chargers\"\n          throughout the game that can recharge the wielded weapon.\n        </p>\n        <p class=\"gray\">(press &lt; or &gt; to view more help topics)</p>\n      </div>\n    );\n  }\n\n  inventory() {\n    return (\n      <div>\n        <h1>HELP - INVENTORY</h1>\n        <p>\n          Press 'i' to interact with you inventory. On the inventory screen, the\n          various items can be selected using \"up\" or \"down\" from any set of\n          movement keys (see HELP-MOVEMENT).\n        </p>\n        <p>\n          Be aware that you can only carry a few items at a time, and this\n          includes items that you might be wearing or wielding. It <em>may</em>{\" \"}\n          be possible to find items that increase your inventory size... but\n          whether or not that happens lies in the hands of the Gods of RNG.\n        </p>\n        <p>\n          Items can be examined by pressing enter, and can be used by pressing\n          any of the keys shown on the details view. You do not need to go to\n          the details view to use an item. Simply pressing the correct key from\n          the main inventory screen will perform the action specified. For\n          example, pressing 'd' from the main inventory screen will drop the\n          selected item.\n        </p>\n        <p class=\"gray\">(press &lt; or &gt; to view more help topics)</p>\n      </div>\n    );\n  }\n\n  otherKeys() {\n    return (\n      <div>\n        <h1>HELP - KEYS</h1>\n        <div>i - inventory</div>\n        <div>g - pick up item</div>\n        <div>v - inspect visible creatures and items</div>\n        <div>p - view player status</div>\n        <div>c - close door</div>\n        <div>f - fire weapon</div>\n        <p class=\"gray\">(press &lt; or &gt; to view more help topics)</p>\n      </div>\n    );\n  }\n\n  movementScreen() {\n    const movement = `\n  y k u    7 8 9\n   \\\\|/      \\\\|/\n  h- -l    4- -6\n   /|\\\\      /|\\\\\n  b j m    1 2 3\n `;\n    return (\n      <div>\n        <h1>HELP - MOVEMENT</h1>\n        <div>\n          You can move your character with the arrow-keys, numpad or \"vi-keys\"\n          as seen below\n        </div>\n        <pre style={{ margin: 0 }}>{movement}</pre>\n        <div>press 5 or . to wait for one turn</div>\n        <p class=\"gray\">(press &lt; or &gt; to view more help topics)</p>\n      </div>\n    );\n  }\n\n  render() {\n    this.display.remove();\n    document.body.appendChild(this.display);\n  }\n\n  handleInput(inputData) {\n    if (inputData.keyCode === ROT.VK_ESCAPE) {\n      this.masterScreen.exitSubscreen();\n      this.display.remove();\n    }\n    if (inputData.keyCode === ROT.VK_PERIOD) {\n      this.screens.push(this.screens.shift());\n      this.app.switchScreen(this.screens[0]);\n    }\n    if (inputData.keyCode === ROT.VK_COMMA) {\n      this.screens.unshift(this.screens.pop());\n      this.app.switchScreen(this.screens[0]);\n    }\n  }\n}\n\nexport default HelpScreen;\n","import { h, app } from \"hyperapp\";\nimport ROT from \"rot-js\";\n\nclass PlayerStatusScreen {\n  constructor(masterScreen) {\n    this.masterScreen = masterScreen;\n    this.display = document.createElement(\"div\");\n    this.display.classList.add(\"subscreen\");\n    this.actions = {};\n    this.app = app(\n      { player: this.masterScreen.player },\n      this.actions,\n      this.view.bind(this),\n      this.display\n    );\n  }\n\n  view({ player }) {\n    return (\n      <div>\n        <h1>player status</h1>\n        <p>name: {player.name}</p>\n        <p>attack: {player.getAttackValue()}</p>\n        <p>defense: {player.getDefenseValue()}</p>\n        <p>speed: {player.getSpeed() / 10}%</p>\n      </div>\n    );\n  }\n\n  render() {\n    this.display.remove();\n    document.body.appendChild(this.display);\n  }\n\n  handleInput(inputData) {\n    if (inputData.keyCode === ROT.VK_ESCAPE) {\n      this.masterScreen.exitSubscreen();\n      this.display.remove();\n    }\n  }\n}\n\nexport default PlayerStatusScreen;\n","import ROT from \"rot-js\";\n\nclass Repository {\n  constructor({ name = \"repository\", ctor = null }) {\n    this.templates = {};\n    this.randomTemplates = {};\n    this.ctor = ctor;\n  }\n\n  define(template) {\n    this.templates[template.name] = template;\n    if (!template.disableRandomCreation) {\n      this.randomTemplates[template.name] = template;\n    }\n  }\n\n  create(name) {\n    const template = this.templates[name];\n    if (!template) {\n      throw new Error(`no template named ${name}`);\n    }\n    if (template) {\n      return new this.ctor(template);\n    }\n  }\n\n  maybeCreateRandom(rank, probability) {\n    if (Math.random() < probability) {\n      return this.createRandom(rank);\n    }\n  }\n\n  createRandom(rank) {\n    const weightMap = Object.keys(\n      this.randomTemplates\n    ).reduce((obj, template) => {\n      const item = this.randomTemplates[template];\n      if ((rank && item.rank <= rank) || !rank) {\n        obj[template] = item.rngWeight || 1;\n      }\n      return obj;\n    }, {});\n    const item = ROT.RNG.getWeightedValue(weightMap);\n    if (item) {\n      return this.create(item);\n    }\n  }\n}\n\nexport default Repository;\n","import DynamicGlyph from \"../dynamicGlyph\";\n\nclass Item extends DynamicGlyph {\n  constructor({ name = \"item\", canPickUp = true, description = \"\", rank = 1 }) {\n    super(...arguments);\n    this.rank = rank;\n    this.name = name;\n    this.canPickUp = canPickUp;\n    this.description = description;\n  }\n}\n\nexport default Item;\n","import Glyph from \"./glyph\";\nimport Colors from \"./colors\";\n\nclass Tile extends Glyph {\n  constructor({ isWalkable = false, blocksLight = false }) {\n    super(...arguments);\n    this.isWalkable = isWalkable;\n    this.blocksLight = blocksLight;\n  }\n}\n\nexport const stairsUpTile = new Tile({\n  char: \"<\",\n  fg: Colors.gray,\n  isWalkable: true\n});\n\nexport const stairsDownTile = new Tile({\n  char: \">\",\n  fg: Colors.gray,\n  isWalkable: true\n});\n\nexport const floorTile = new Tile({\n  char: \".\",\n  fg: Colors.darkGray,\n  isWalkable: true\n});\n\nexport const wallTile = new Tile({\n  char: \"#\",\n  fg: Colors.brown,\n  blocksLight: true\n});\n\nexport const closedDoorTile = new Tile({\n  char: \"+\",\n  fg: Colors.peach,\n  blocksLight: true,\n  isWalkable: false\n});\n\nexport const openDoorTile = new Tile({\n  char: \"-\",\n  fg: Colors.peach,\n  blocksLight: false,\n  isWalkable: true\n});\n","import game from \"../game\";\nimport { wallTile, floorTile, closedDoorTile, openDoorTile } from \"../tile\";\nimport Colors from \"../colors\";\n\nexport class Equippable {\n  constructor({\n    attackValue = 0,\n    defenseValue = 0,\n    sightBoost = 0,\n    inventoryBoost = 0,\n    wieldable = false,\n    wearable = false\n  }) {\n    this.attackValue = attackValue;\n    this.defenseValue = defenseValue;\n    this.wieldable = wieldable;\n    this.wearable = wearable;\n    this.sightBoost = sightBoost;\n    this.inventoryBoost = inventoryBoost;\n    this.name = \"Equippable\";\n  }\n}\n\nexport class StatusBooster {\n  constructor({\n    hpUp = 0,\n    statusEffect = null,\n    weaponRecharge = 0,\n    maxHpUp = 0\n  }) {\n    this.name = \"StatusBooster\";\n    this.groupName = \"Usable\";\n    this.hpUp = hpUp;\n    this.maxHpUp = maxHpUp;\n    this.weaponRecharge = weaponRecharge;\n    this.use = this._use;\n    this.statusEffect = statusEffect;\n  }\n\n  _use(entity) {\n    if (entity.weapon && entity.weapon.charges) {\n      entity.weapon.recharge(this.weaponRecharge);\n    }\n    if (this.hpUp >= 0) {\n      entity.addHp(this.hpUp);\n    } else {\n      game.messageDisplay.add({ color: \"red\", text: \"ouch\" });\n      entity.takeDamage(-this.hpUp, Colors.darkPurple);\n    }\n    entity.addMaxHp(this.maxHpUp);\n    if (this.statusEffect) {\n      entity.addTimedStatusEffect(Object.assign({}, this.statusEffect));\n    }\n  }\n}\n\nexport class Fireable {\n  constructor({\n    chargesPerShot = 1,\n    charges,\n    maxCharges = 20,\n    rangeDamage = 10,\n    blastRadius = 0\n  }) {\n    this.name = \"Fireable\";\n    this.maxCharges = maxCharges;\n    this.charges = charges || this.maxCharges;\n    this.rangeDamage = rangeDamage;\n    this.recharge = this._recharge;\n    this.fire = this._fire;\n    this.blastRadius = blastRadius;\n    this.chargesPerShot = chargesPerShot;\n  }\n\n  _recharge(charges) {\n    this.charges = Math.min(this.charges + charges, this.maxCharges);\n  }\n\n  _fire(targetObj) {\n    if (this.charges - this.chargesPerShot <= 0) {\n      if (targetObj.coords[0].name == \"ME\") {\n        game.messageDisplay.add({\n          color: \"blue\",\n          text: \"Your weapon does not have enough charges to fire\"\n        });\n      }\n      return false;\n    }\n    this.charges -= this.chargesPerShot;\n    const targetArray = targetObj.coords;\n    const displayArray = [];\n    for (let i = 1; i < targetArray.length; i++) {\n      const target = targetArray[i];\n      const shooter = targetArray[0];\n      if (\n        targetArray[i] &&\n        (targetArray[i].blocksLight ||\n          targetArray[i].constructor.name == \"Entity\")\n      ) {\n        if (this.blastRadius > 0) {\n          // cause explosion\n          const explosionDisplay = [];\n          const level = game.currentScreen.gameWorld.currentLevel;\n          const area = level.getSurroundingTiles(\n            target.x,\n            target.y,\n            this.blastRadius\n          );\n          area.forEach(tile => {\n            if (tile.tile) {\n              explosionDisplay.push(tile.x + \",\" + tile.y);\n              if (tile.tile.blocksLight || tile.tile == openDoorTile) {\n                level.map.setTile(tile.x, tile.y, floorTile);\n              }\n            } else if (tile.hasMixin && tile.hasMixin(\"Destructible\")) {\n              const attack = this.rangeDamage;\n              const defense = tile.getDefenseValue();\n              const damage = Math.max(attack - defense, 0);\n              if (shooter.name == \"ME\" && tile.name !== \"ME\") {\n                game.messageDisplay.add({\n                  color: \"white\",\n                  text: `The ${tile.name} is caught in the explosion for ${damage} damage.`\n                });\n                tile.takeDamage(damage, Colors.orange);\n              } else if (tile.name == \"ME\") {\n                game.messageDisplay.add({\n                  color: \"red\",\n                  text: `You are caught in the explosion!  Ouch!`\n                });\n                tile.takeDamage(damage, Colors.orange);\n              }\n            }\n          });\n          game.explosionDisplay = explosionDisplay;\n          break;\n        }\n        if (target.hasMixin && target.hasMixin(\"Destructible\")) {\n          const attack = this.rangeDamage;\n          const defense = target.getDefenseValue();\n          const damage = Math.max(attack - defense, 0);\n          if (shooter.name == \"ME\") {\n            game.messageDisplay.add({\n              color: \"white\",\n              text: `You hit the ${target.name} for ${damage} damage.`\n            });\n            target.takeDamage(damage, this.fg);\n            break;\n          } else if (target.name == \"ME\") {\n            game.messageDisplay.add({\n              color: \"red\",\n              text: `The ${shooter.name} shoots you for ${damage} damage!`\n            });\n            target.takeDamage(damage, this.fg);\n            break;\n          } else {\n            target.takeDamage(damage, this.fg);\n          }\n        }\n        break;\n      } else if (!target.blocksLight) {\n        displayArray.push(target.x + \",\" + target.y);\n      } else {\n        break;\n      }\n    }\n    return { coords: displayArray, xMod: targetObj.xMod, yMod: targetObj.yMod };\n  }\n}\n","import Repository from \"../repository\";\nimport Colors from \"../colors\";\nimport Item from \"./item\";\nimport { Fireable, Equippable, StatusBooster } from \"./itemMixins\";\n\nexport const ItemRepository = new Repository({ name: \"Items\", ctor: Item });\n\nItemRepository.define({\n  name: \"med pack\",\n  description: \"Will restore a small amount of health.  Single use.\",\n  char: \"†\",\n  fg: Colors.pink,\n  hpUp: 10,\n  rngWeight: 10,\n  rank: 1,\n  mixins: [StatusBooster]\n});\n\nItemRepository.define({\n  name: \"health generator\",\n  description:\n    \"Using this item will increase you maxHP by 15 points, but installing it hurts and will decrease your health points by 15.. you might want to have a medpack handy.\",\n  fg: Colors.orange,\n  char: \"‡\",\n  hpUp: -15,\n  maxHpUp: 10,\n  rngWeight: 3,\n  rank: 3,\n  mixins: [StatusBooster]\n});\n\nItemRepository.define({\n  name: \"big med pack\",\n  description: \"Will restore a moderate amount of health.  Single use.\",\n  char: \"†\",\n  fg: Colors.red,\n  hpUp: 25,\n  rngWeight: 5,\n  rank: 2,\n  mixins: [StatusBooster]\n});\n\nItemRepository.define({\n  name: \"blaster charges\",\n  description: \"Will add 50 charges the wielded weapon.  Single use.\",\n  weaponRecharge: 50,\n  char: \"*\",\n  fg: Colors.blue,\n  rngWeight: 5,\n  rank: 1,\n  mixins: [StatusBooster]\n});\n\nItemRepository.define({\n  name: \"strength stim syringe\",\n  description:\n    \"A syringe filled with a thick, dark liquid.  Will temporarily increase your strength. May reduce HP.\",\n  char: \"!\",\n  fg: Colors.darkPurple,\n  hpDown: 3,\n  rngWeight: 5,\n  rank: 1,\n  statusEffect: {\n    property: \"strength\",\n    value: 10,\n    label: \"Strength boost\",\n    timer: 25\n  },\n  mixins: [StatusBooster]\n});\n\nItemRepository.define({\n  name: \"speed-boost syringe\",\n  description:\n    \"A syringe filled with a dark liquid that smells of coffee.  Will temporarily increase your speed.\",\n  char: \"!\",\n  fg: Colors.darkGreen,\n  rank: 1,\n  rngWeight: 5,\n  statusEffect: {\n    property: \"speed\",\n    value: 1000,\n    label: \"Speed boost\",\n    timer: 25\n  },\n  mixins: [StatusBooster]\n});\n\nItemRepository.define({\n  name: \"armor-boost syringe\",\n  description:\n    \"No clue how this tech is supposed to work.. but shooting this baby up will temporarily increase your defense value.  It's a game, get over it.\",\n  char: \"!\",\n  fg: Colors.darkGreen,\n  rngWeight: 5,\n  rank: 1,\n  statusEffect: {\n    property: \"defense\",\n    value: 10,\n    label: \"Armor boost\",\n    timer: 25\n  },\n  mixins: [StatusBooster]\n});\n\nItemRepository.define({\n  name: \"Space Ship\",\n  char: \"§\",\n  description:\n    \"Your personal mining rig, large enough for one person and a handful of tools. Equipped with heavy blasters meant for breaking rock.\",\n  fg: Colors.blue,\n  canPickUp: false,\n  disableRandomCreation: true\n});\n\nItemRepository.define({\n  name: \"keys\",\n  char: '\"',\n  description: \"Your keys!  You can't get off this rock without them!\",\n  fg: Colors.blue,\n  disableRandomCreation: true\n});\n\nexport const ArmorRepository = new Repository({ name: \"Items\", ctor: Item });\n\nArmorRepository.define({\n  name: \"backpack\",\n  description:\n    \"Increases your inventory size and provides a teeny-tiny amount of defense, might slow you down a bit though.\",\n  char: \"[\",\n  fg: Colors.blue,\n  wearable: true,\n  defenseValue: 2,\n  inventoryBoost: 5,\n  rngWeight: 3,\n  mixins: [Equippable]\n});\n\nArmorRepository.define({\n  name: \"night-vision goggles\",\n  char: \"[\",\n  fg: Colors.green,\n  description:\n    \"Increases your sight-radius while worn, and offers a small amount of protection. Could be useful in these caverns.\",\n  wearable: true,\n  sightBoost: 8,\n  defenseValue: 3,\n  rngWeight: 5,\n  mixins: [Equippable]\n});\n\nArmorRepository.define({\n  name: \"techno chain mail shirt\",\n  char: \"[\",\n  fg: Colors.indigo,\n  description:\n    \"Huh... why do these aliens have bits of armor just randomly strewn about their weirdo cave system?  No matter, I guess I'll take the defense boost.\",\n  wearable: true,\n  defenseValue: 8,\n  rngWeight: 1,\n  mixins: [Equippable]\n});\n\nexport const WeaponRepository = new Repository({ name: \"Weapons\", ctor: Item });\n\nWeaponRepository.define({\n  name: \"crowbar\",\n  char: \"(\",\n  description: \"Not the best weapon, but it'll get the job done.\",\n  fg: Colors.blue,\n  wieldable: true,\n  attackValue: 5,\n  mixins: [Equippable]\n});\n\nWeaponRepository.define({\n  name: \"hammer\",\n  char: \"(\",\n  description: \"Not the best weapon, but it'll get the job done.\",\n  fg: Colors.gray,\n  wieldable: true,\n  attackValue: 3,\n  rank: 1,\n  mixins: [Equippable]\n});\n\nWeaponRepository.define({\n  name: \"monkey wrench\",\n  char: \"(\",\n  description:\n    \"Heavy, rusty, not particularly useful as a tool anymore--but if you need to bash someone's brains in....\",\n  fg: Colors.gray,\n  wieldable: true,\n  attackValue: 3,\n  rank: 1,\n  mixins: [Equippable]\n});\n\nWeaponRepository.define({\n  name: \"lazer sword\",\n  char: \"(\",\n  description: \"Now we're talking, this thing will really mess up some aliens.\",\n  fg: Colors.pink,\n  wieldable: true,\n  attackValue: 15,\n  rank: 2,\n  mixins: [Equippable]\n});\n\nWeaponRepository.define({\n  name: \"pocket knife\",\n  description:\n    \"Old trusty pocket knife.. it's not worth much, but it's better than bare hands.\",\n  char: \")\",\n  fg: Colors.brown,\n  wieldable: true,\n  attackValue: 3,\n  rank: 1,\n  mixins: [Equippable]\n});\n\nWeaponRepository.define({\n  name: \"small blaster\",\n  char: \"┌\",\n  description:\n    \"doesn't pack much punch, but only costs 1 charge to shoot... not bad!\",\n  fg: Colors.green,\n  wieldable: true,\n  maxCharges: 30,\n  chargesPerShot: 1,\n  attackValue: 0,\n  rangeDamage: 4,\n  rank: 1,\n  mixins: [Equippable, Fireable]\n});\n\nWeaponRepository.define({\n  name: \"turret blaster\",\n  char: \"┌\",\n  description: \"a blaster ripped off of a turret\",\n  fg: Colors.darkPurple,\n  wieldable: true,\n  maxCharges: 30,\n  chargesPerShot: 5,\n  attackValue: 0,\n  rangeDamage: 6,\n  rank: 1,\n  mixins: [Equippable, Fireable]\n});\n\nWeaponRepository.define({\n  name: \"mean blaster\",\n  char: \"┌\",\n  description: \"Holds 30 charges, takes 5 to shoot... but packs a mean punch\",\n  fg: Colors.blue,\n  wieldable: true,\n  maxCharges: 30,\n  chargesPerShot: 3,\n  attackValue: 0,\n  rangeDamage: 15,\n  rank: 2,\n  mixins: [Equippable, Fireable]\n});\n\nWeaponRepository.define({\n  name: \"light plasma cannon\",\n  char: \"┌\",\n  description: \"Uses up 15 charges per shot. This one really leaves a mark.\",\n  fg: Colors.red,\n  wieldable: true,\n  maxCharges: 50,\n  chargesPerShot: 10,\n  attackValue: 0,\n  blastRadius: 1,\n  rangeDamage: 25,\n  rank: 2,\n  mixins: [Equippable, Fireable]\n});\n\nWeaponRepository.define({\n  name: \"heavy plasma cannon\",\n  char: \"┌\",\n  description: \"stand back\",\n  fg: Colors.white,\n  wieldable: true,\n  maxCharges: 150,\n  chargesPerShot: 25,\n  attackValue: 0,\n  blastRadius: 2,\n  rangeDamage: 20,\n  rank: 2,\n  mixins: [Equippable, Fireable]\n});\n","import ROT from \"rot-js\";\nimport Colors from \"../colors\";\nimport Confirmation from \"../screens/confirmation\";\nimport { closedDoorTile } from \"../tile\";\n\nexport class PlayerActor {\n  constructor() {\n    this.name = \"PlayerActor\";\n    this.groupName = \"Actor\";\n    this.act = this._act;\n  }\n  _act() {\n    const Game = this.getGame();\n    this.incrementTimedStatusEffects();\n    Game.refresh();\n    Game.getEngine().lock();\n  }\n}\n\nexport class Destructible {\n  constructor({ maxHp = 10, hp, defenseValue = 0 }) {\n    this.name = \"Destructible\";\n    this.maxHp = maxHp;\n    this.hp = hp || this.maxHp;\n    this.defenseValue = defenseValue;\n    this.takeDamage = this._takeDamage;\n    this.addHp = this._addHp;\n    this.addMaxHp = this._addMaxHp;\n    this.getDefenseValue = this._getDefenseValue;\n    this.hit = false;\n  }\n\n  _getDefenseValue() {\n    let mod = 0;\n    if (this.hasMixin(\"TimedStatusEffects\")) {\n      this.getTimedStatusEffects().forEach(s => {\n        if (s.property == \"defense\") {\n          mod += s.value;\n        }\n      });\n    }\n    if (this.armor) {\n      this.armor.forEach(a => {\n        mod += a.defenseValue;\n      });\n    }\n    return this.defenseValue + mod;\n  }\n\n  _addHp(value) {\n    this.hp = Math.min(this.hp + value, this.maxHp);\n  }\n  _addMaxHp(value) {\n    this.maxHp += value;\n  }\n\n  _takeDamage(damage, color = Colors.red) {\n    this.hp -= damage;\n    this.hit = color;\n    if (this.hp <= 0) {\n      if (this.hasMixin(\"PlayerActor\")) {\n        this.game.messageDisplay.add({ text: `You DIE`, color: \"red\" });\n      } else {\n        this.game.messageDisplay.add({\n          color: \"white\",\n          text: `You kill the ${this.name}.`\n        });\n      }\n      this.kill();\n      if (this.hasMixin(\"InventoryHolder\")) {\n        // drop items\n        if (this.inventory.filter(i => i).length) {\n          this.level.setItemsAt(this.getX(), this.getY(), this.inventory);\n        }\n      }\n    }\n  }\n}\n\nexport class Sight {\n  constructor({ sightRadius = 15 }) {\n    this.name = \"Sight\";\n    this.sightRadius = sightRadius;\n    this.canSee = this._canSee;\n    this.getSightRadius = this._getSightRadius;\n    this.getVisible = this._getVisible;\n  }\n\n  _getSightRadius() {\n    let mod = 0;\n    if (this.hasMixin(\"TimedStatusEffects\")) {\n      this.getTimedStatusEffects().forEach(s => {\n        if (s.property == \"sight\") {\n          mod += s.value;\n        }\n      });\n    }\n\n    if (this.armor) {\n      this.armor.forEach(a => {\n        mod += a.sightBoost;\n      });\n    }\n\n    return this.sightRadius + mod;\n  }\n\n  _getVisible() {\n    const fov = new ROT.FOV.PreciseShadowcasting((x, y) => {\n      if (this.game.currentScreen.level.map.getTile(x, y)) {\n        return !this.game.currentScreen.map.getTile(x, y).blocksLight;\n      }\n      return false;\n    });\n    const visibleTiles = {};\n\n    fov.compute(this.getX(), this.getY(), this.sightRadius, function(\n      x,\n      y,\n      radius,\n      visibility\n    ) {\n      visibleTiles[x + \",\" + y] = true;\n    });\n    const entitiesItems = [];\n    Object.keys(visibleTiles).forEach(tile => {\n      const xy = tile.split(\",\");\n      const entity = this.game.currentScreen.level.getEntityAt(xy[0], xy[1]);\n      const items = this.game.currentScreen.level.getItemsAt(xy[0], xy[1]);\n      if (entity) {\n        entitiesItems.push(entity);\n      }\n      if (items && items.length) {\n        entitiesItems.push(...items);\n      }\n    });\n    return entitiesItems.filter(x => x.name !== \"ME\");\n  }\n\n  _canSee(entity) {\n    const otherX = entity.getX();\n    const otherY = entity.getY();\n    if (\n      (otherX - this.getX()) * (otherX - this.getX()) +\n        (otherY - this.getY()) * (otherY - this.getY()) >\n      this.sightRadius * this.sightRadius\n    ) {\n      return false;\n    }\n    let found = false;\n    const fov = new ROT.FOV.PreciseShadowcasting((x, y) => {\n      if (this.level.map.getTile(x, y)) {\n        return !this.level.map.getTile(x, y).blocksLight;\n      }\n      return false;\n    });\n\n    fov.compute(this.getX(), this.getY(), this.sightRadius, function(\n      x,\n      y,\n      radius,\n      visibility\n    ) {\n      if (x === otherX && y === otherY) {\n        found = true;\n      }\n    });\n    return found;\n    return true;\n  }\n}\n\nexport class TaskActor {\n  constructor({ tasks = [\"hunt\", \"wander\"] }) {\n    this.huntingTarget = null;\n    this.tasks = tasks;\n    this.name = \"TaskActor\";\n    this.groupName = \"Actor\";\n    this.act = this._act;\n    this.canDoTask = this._canDoTask;\n    this.wander = this._wander;\n    this.hunt = this._hunt;\n    this.flee = this._flee;\n    this.shoot = this._shoot;\n  }\n  _act() {\n    if (this.level.gameWorld.currentLevel !== this.level) {\n      return false;\n    }\n    for (let i = 0; i < this.tasks.length; i++) {\n      const task = this.tasks[i];\n      if (this.canDoTask(task)) {\n        this[task]();\n        break;\n      }\n    }\n  }\n\n  _canDoTask(task) {\n    if (task === \"hunt\") {\n      return (\n        this.hasMixin(\"Sight\") &&\n        (this.canSee(this.getLevel().player) || this.huntingTarget)\n      );\n    } else if (task === \"shoot\") {\n      const player = this.getLevel().player;\n      const xOffset = this.getX() - player.getX();\n      const yOffset = this.getY() - player.getY();\n      if (this.canSee(player)) {\n        if (\n          Math.abs(xOffset) == Math.abs(yOffset) ||\n          xOffset == 0 ||\n          yOffset == 0\n        ) {\n          return true;\n        }\n      }\n      return false;\n    } else if (task === \"flee\") {\n      const player = this.getLevel().player;\n      const otherX = player.getX();\n      const otherY = player.getY();\n      if (\n        (otherX - this.getX()) * (otherX - this.getX()) +\n          (otherY - this.getY()) * (otherY - this.getY()) <\n        9\n      ) {\n        return true;\n      }\n      return false;\n    } else if (task === \"wander\") {\n      return true;\n    } else {\n      throw new Error(\"tried to perform undefined task\");\n    }\n  }\n\n  _shoot() {\n    const player = this.getLevel().player;\n    const xOffset = this.getX() - player.getX();\n    const yOffset = this.getY() - player.getY();\n    const dX = xOffset == 0 ? 0 : xOffset > 0 ? -1 : 1;\n    const dY = yOffset == 0 ? 0 : yOffset > 0 ? -1 : 1;\n    const fireArray = this.getLevel().lookInDirection(dX, dY, this);\n    const rangeDisplayArray = this.weapon.fire(fireArray);\n    if (rangeDisplayArray) {\n      this.game.rangeWeaponDisplay = Object.assign(rangeDisplayArray, {\n        color: this.weapon.fg\n      });\n    }\n  }\n\n  _flee() {\n    const player = this.getLevel().player;\n    const xOffset = this.getX() - player.getX();\n    const yOffset = this.getY() - player.getY();\n    const dX = xOffset == 0 ? 0 : xOffset > 0 ? 1 : -1;\n    const dY = yOffset == 0 ? 0 : yOffset > 0 ? 1 : -1;\n    this.tryMove(this.getX() + dX, this.getY() + dY, this.getLevel());\n  }\n\n  _hunt() {\n    const player = this.getLevel().player;\n    const offsets =\n      Math.abs(player.getX() - this.getX()) +\n      Math.abs(player.getY() - this.getY());\n    if (offsets === 1 && this.hasMixin(\"Attacker\")) {\n      this.attack(player);\n      return;\n    }\n\n    if (this.canSee(player)) {\n      this.huntingTarget = { x: player.getX(), y: player.getY() };\n    }\n\n    const source = this;\n    const path = new ROT.Path.AStar(\n      this.huntingTarget.x,\n      this.huntingTarget.y,\n      function(x, y) {\n        var entity = source.getLevel().getEntityAt(x, y);\n        if (entity && entity !== player && entity !== source) {\n          return false;\n        }\n        return source\n          .getLevel()\n          .getMap()\n          .getTile(x, y).isWalkable;\n      }\n    );\n    let count = 0;\n    path.compute(source.getX(), source.getY(), function(x, y) {\n      if (count == 1) {\n        source.tryMove(x, y, source.getLevel());\n      }\n      count++;\n    });\n  }\n\n  _wander() {\n    const dX = Math.floor(Math.random() * 3) - 1;\n    const dY = Math.floor(Math.random() * 3) - 1;\n    if (this.level.player) {\n      this.tryMove(this.getX() + dX, this.getY() + dY, this.getLevel());\n    }\n  }\n}\n\nexport class InventoryHolder {\n  constructor({\n    inventorySize = 8,\n    inventory = [],\n    inventoryConstructor = null\n  }) {\n    this.name = \"InventoryHolder\";\n    this.inventorySize = inventorySize;\n    this.inventory = inventory;\n    this.addItem = this._addItem;\n    this.removeItem = this._removeItem;\n    this.hasItem = this._hasItem;\n    this.getInventorySize = this._getInventorySize;\n    if (inventoryConstructor) {\n      this.inventory.push(inventoryConstructor());\n    }\n  }\n\n  _getInventorySize() {\n    let mod = 0;\n    if (this.armor) {\n      this.armor.forEach(a => {\n        mod += a.inventoryBoost;\n      });\n    }\n    return this.inventorySize + mod;\n  }\n  _hasItem(item) {\n    return this.inventory.filter(i => i.name == item).length > 0;\n  }\n  _addItem(item) {\n    if (this.inventory.length < this.getInventorySize()) {\n      if (item.hasMixin(\"Fireable\") && this.hasItem(item.name)) {\n        const exitFunction = () => {\n          this.inventory.find(i => i.name == item.name).recharge(item.charges);\n        };\n        this.game.currentScreen.enterSubscreen(\n          new Confirmation(\n            \"You already have one of those. Would you like to recharge your existing one(YES) or add it to your inventory(NO)?\",\n            exitFunction,\n            () => this.inventory.push(item),\n            this.game.currentScreen\n          )\n        );\n        return true;\n      }\n      this.inventory.push(item);\n      return true;\n    }\n    this.game.messageDisplay.add({\n      color: \"blue\",\n      text: \"Your inventory seems to be full!\"\n    });\n    return false;\n  }\n  _removeItem(itemToRemove) {\n    this.unequip(itemToRemove);\n    this.inventory = this.inventory.filter(item => item !== itemToRemove);\n  }\n}\n\nexport class MonsterActor {\n  constructor() {\n    this.name = \"MonsterActor\";\n    this.groupName = \"Actor\";\n    this.act = this._act;\n  }\n  _act() {\n    const dX = Math.floor(Math.random() * 3) - 1;\n    const dY = Math.floor(Math.random() * 3) - 1;\n    if (this.level.player && this.canSee(this.level.player)) {\n      this.tryMove(this.getX() + dX, this.getY() + dY, this.getLevel());\n    }\n  }\n}\n\nexport class Movable {\n  constructor() {\n    this.name = \"Movable\";\n    this.tryMove = this._tryMove;\n  }\n  _tryMove(x, y, level) {\n    const tile = level.getMap().getTile(x, y);\n\n    const target = level.getEntityAt(x, y);\n    if (target) {\n      if (this.hasMixin(\"Attacker\")) {\n        this.attack(target);\n      }\n      return false;\n    }\n\n    if (tile.isWalkable) {\n      this.setPosition(x, y);\n      return true;\n    }\n\n    if (tile == closedDoorTile) {\n      level.getMap().openDoor(x, y);\n    }\n    return false;\n  }\n}\n\nexport class Attacker {\n  constructor({ strength = 1 }) {\n    this.name = \"Attacker\";\n    this.strength = strength;\n    this.attack = this._attack;\n    this.getAttackValue = this._getAttackValue;\n  }\n  _getAttackValue() {\n    let mod = 0;\n    if (this.hasMixin(\"Equipper\")) {\n      if (this.weapon) {\n        mod += this.weapon.attackValue;\n      }\n    }\n    if (this.hasMixin(\"TimedStatusEffects\")) {\n      this.getTimedStatusEffects().forEach(s => {\n        if (s.property == \"strength\") {\n          mod += s.value;\n        }\n      });\n    }\n    return this.strength + mod;\n  }\n  _attack(target) {\n    const game = this.getGame();\n    if (target.hasMixin(\"PlayerActor\")) {\n      const dieRoll = parseInt(Math.random() * 3) - 1;\n      const attack = this.getAttackValue() + dieRoll;\n      const defense = target.getDefenseValue();\n      const damage = Math.max(attack - defense, 1);\n      if (game) {\n        game.messageDisplay.add({\n          color: \"red\",\n          text: `The ${this.name} hits you for ${damage} damage.`\n        });\n      }\n      target.takeDamage(damage);\n    }\n    if (this.hasMixin(\"PlayerActor\") && target.hasMixin(\"Destructible\")) {\n      const attack = this.getAttackValue();\n      const defense = target.getDefenseValue();\n      const damage = Math.max(attack - defense, 0);\n      if (game && this.hasMixin(\"PlayerActor\")) {\n        game.messageDisplay.add({\n          color: \"white\",\n          text: `You hit the ${target.name} for ${damage} damage.`\n        });\n      }\n      target.takeDamage(damage);\n    }\n  }\n}\n\nexport class Equipper {\n  constructor({ weapon = null, armor = [] }) {\n    this.name = \"Equipper\";\n    this.weapon = weapon;\n    this.armor = armor;\n    this.wield = this._wield;\n    this.unwield = this._unwield;\n    this.wear = this._wear;\n    this.takeOff = this._takeOff;\n    this.unequip = this._unequip;\n    this.isWearing = this._isWearing;\n    this.setup = this._setup;\n  }\n\n  _setup() {\n    if (this.weapon === \"inventory\" && this.hasMixin(\"InventoryHolder\")) {\n      this.wield(this.inventory[0]);\n    }\n  }\n\n  _isWearing(item) {\n    return this.armor.includes(item);\n  }\n\n  _wield(weapon) {\n    this.weapon = weapon;\n  }\n  _unwield() {\n    this.weapon = null;\n  }\n  _wear(armor) {\n    this.armor.push(armor);\n  }\n  _takeOff(item) {\n    this.armor.splice(this.armor.indexOf(item), 1);\n  }\n  _unequip(item) {\n    if (this.armor.includes(item)) {\n      this.takeOff(item);\n    }\n    if (item === this.weapon) {\n      this.unwield();\n    }\n  }\n}\n\nexport class TimedStatusEffects {\n  constructor() {\n    this.name = \"TimedStatusEffects\";\n    //array of objects\n    // {property, label, value, timer}\n    this.statusEffects = [\n      // { property: \"speed\", label: \"Speed up\", value: 1000, timer: 135 }\n    ];\n    this.incrementTimedStatusEffects = this._incrementTimedStatusEffects;\n    this.getTimedStatusEffects = this._getTimedStatusEffects;\n    this.addTimedStatusEffect = this._addTimedStatusEffect;\n  }\n\n  _addTimedStatusEffect(effect) {\n    this.statusEffects.push(effect);\n  }\n\n  _getTimedStatusEffects() {\n    return this.statusEffects;\n  }\n\n  _incrementTimedStatusEffects() {\n    this.statusEffects.forEach(s => {\n      s.timer -= 1;\n      if (s.timer <= 0) {\n        const i = this.statusEffects.indexOf(s);\n        this.statusEffects.splice(i, 1);\n      }\n    });\n  }\n}\n","import Colors from \"../colors\";\nimport Repository from \"../repository\";\nimport Entity from \"./entity\";\nimport { ItemRepository, WeaponRepository } from \"../item/items\";\nimport {\n  InventoryHolder,\n  PlayerActor,\n  Movable,\n  Destructible,\n  Sight,\n  TaskActor,\n  Attacker,\n  Equipper,\n  TimedStatusEffects\n} from \"./entityMixins\";\n\nexport const PlayerTemplate = {\n  name: \"ME\",\n  char: \"@\",\n  fg: Colors.white,\n  sightRadius: 6,\n  strength: 6,\n  maxHp: 50,\n  mixins: [\n    PlayerActor,\n    Destructible,\n    Movable,\n    InventoryHolder,\n    Attacker,\n    Equipper,\n    Sight,\n    TimedStatusEffects\n  ]\n};\n\nexport const EnemyRepository = new Repository({\n  name: \"Enemies\",\n  ctor: Entity\n});\n\nEnemyRepository.define({\n  name: \"Small Alien\",\n  description: \"A small, slimy creature.  Has claws.  Looks mean.\",\n  char: \"a\",\n  fg: Colors.indigo,\n  rank: 1,\n  speed: 800,\n  strength: 3,\n  maxHp: 10,\n  rngWeight: 10,\n  inventoryConstructor: () => ItemRepository.maybeCreateRandom(1, 0.5),\n  mixins: [Movable, InventoryHolder, TaskActor, Destructible, Sight, Attacker]\n});\n\n// EnemyRepository.define({\n//   name: \"Thieving Alien\",\n//   char: \"a\",\n//   fg: Colors.indigo,\n//   speed: 800,\n//   strength: 3,\n//   maxHp: 10,\n//   rngWeight: 10,\n//   tasks: [\"steal\", \"flee\", \"wander\"],\n//   mixins: [Movable, InventoryHolder, TaskActor, Destructible, Sight, Attacker]\n// });\n\nEnemyRepository.define({\n  name: \"Flying Insect\",\n  description:\n    \"BIG BUG.  Looks like a type of beetle, buzzes around near the top of the Cavern, swooping in to attack.  Moves faster than you.\",\n  char: \"b\",\n  fg: Colors.darkGreen,\n  rank: 1,\n  speed: 1500,\n  strength: 2,\n  maxHp: 8,\n  sightRadius: 15,\n  rngWeight: 7,\n  mixins: [Movable, TaskActor, Destructible, Sight, Attacker]\n});\n\nEnemyRepository.define({\n  name: \"Big Alien\",\n  description:\n    \"A large, slimy thing with long claws and teeth.  It moves slow, but looks like it hits hard.\",\n  char: \"A\",\n  fg: Colors.pink,\n  rank: 2,\n  speed: 600,\n  maxHp: 32,\n  sightRadius: 10,\n  strength: 7,\n  rngWeight: 4,\n  inventoryConstructor: () => ItemRepository.maybeCreateRandom(3, 0.5),\n  mixins: [Movable, TaskActor, Destructible, Sight, Attacker]\n});\n\nEnemyRepository.define({\n  name: \"Tough Alien\",\n  description:\n    \"Slightly shorter than you, but rippling with muscles.  Maybe run?\",\n  char: \"A\",\n  fg: Colors.red,\n  speed: 900,\n  maxHp: 52,\n  sightRadius: 10,\n  strength: 16,\n  rngWeight: 3,\n  rank: 3,\n  inventoryConstructor: () => WeaponRepository.createRandom(),\n  mixins: [Movable, TaskActor, Destructible, Sight, Attacker]\n});\n\nEnemyRepository.define({\n  name: \"Shooter\",\n  char: \"s\",\n  description:\n    \"IT HAS A GUN.  Seems to flee when you get close, but takes a shot when it gets a chance... taking that gun might be handy though.\",\n  fg: Colors.orange,\n  speed: 1000,\n  maxHp: 15,\n  sightRadius: 10,\n  strength: 3,\n  rngWeight: 4,\n  rank: 2,\n  tasks: [\"shoot\", \"flee\", \"wander\"],\n  inventoryConstructor: () => WeaponRepository.create(\"small blaster\"),\n  weapon: \"inventory\",\n  mixins: [\n    Movable,\n    TaskActor,\n    Equipper,\n    InventoryHolder,\n    Destructible,\n    Sight,\n    Attacker\n  ]\n});\n\nEnemyRepository.define({\n  name: \"Turret\",\n  char: \"t\",\n  description:\n    \"Stationary, but strangely organic looking.  It's blaster is weak but persistent.\",\n  fg: Colors.darkPurple,\n  speed: 1400,\n  maxHp: 15,\n  sightRadius: 10,\n  strength: 3,\n  rngWeight: 4,\n  rank: 1,\n  tasks: [\"shoot\"],\n  inventoryConstructor: () => WeaponRepository.create(\"turret blaster\"),\n  weapon: \"inventory\",\n  mixins: [\n    Movable,\n    TaskActor,\n    Equipper,\n    InventoryHolder,\n    Destructible,\n    Sight,\n    Attacker\n  ]\n});\n\nEnemyRepository.define({\n  name: \"Bomber\",\n  char: \"S\",\n  description: \"small buggy looking critter with some sort of plasma cannon.\",\n  fg: Colors.red,\n  speed: 800,\n  maxHp: 25,\n  sightRadius: 10,\n  strength: 3,\n  rngWeight: 2,\n  rank: 3,\n  tasks: [\"shoot\", \"flee\", \"wander\"],\n  inventoryConstructor: () => WeaponRepository.create(\"light plasma cannon\"),\n  weapon: \"inventory\",\n  mixins: [\n    Movable,\n    TaskActor,\n    Equipper,\n    InventoryHolder,\n    Destructible,\n    Sight,\n    Attacker\n  ]\n});\n\nEnemyRepository.define({\n  name: \"Alien with huge gun\",\n  description:\n    \"seems weak.. like you could just kick it over.  Or maybe it's the huge cannon it's manuvering that makes it look small.\",\n  char: \"s\",\n  fg: Colors.pink,\n  speed: 500,\n  maxHp: 25,\n  sightRadius: 10,\n  strength: 3,\n  rngWeight: 1,\n  rank: 4,\n  tasks: [\"shoot\", \"flee\", \"wander\"],\n  inventoryConstructor: () => WeaponRepository.create(\"heavy plasma cannon\"),\n  weapon: \"inventory\",\n  mixins: [\n    Movable,\n    TaskActor,\n    Equipper,\n    InventoryHolder,\n    Destructible,\n    Sight,\n    Attacker\n  ]\n});\n","import ROT from \"rot-js\";\nimport { floorTile, wallTile, openDoorTile, closedDoorTile } from \"./tile\";\n\nclass DungeonMap {\n  constructor({ width = 40, height = 20, Game }) {\n    this.game = Game;\n    this.width = width;\n    this.height = height;\n    this.tiles = new Array(width);\n\n    for (let w = 0; w < width; w++) {\n      this.tiles[w] = new Array(height);\n    }\n\n    const maxRoomWidth = Math.random() > 0.3 ? 10 : 22;\n    const maxRoomHeight = maxRoomWidth !== 32 && Math.random() > 0.8 ? 22 : 12;\n\n    const generator = new ROT.Map.Digger(width, height, {\n      roomWidth: [6, maxRoomWidth],\n      roomHeight: [6, maxRoomHeight],\n      dugPercentage: 0.3\n    });\n\n    generator.create(\n      function(x, y, value) {\n        this.tiles[x][y] = value == 1 ? wallTile : floorTile;\n      }.bind(this)\n    );\n    this.rooms = generator.getRooms();\n    this.rooms.forEach((room, i) => {\n      room.getDoors((x, y) => {\n        this.tiles[x][y] =\n          i == 0\n            ? closedDoorTile\n            : Math.random() > 0.8\n              ? openDoorTile\n              : Math.random() > 0.8 ? closedDoorTile : floorTile;\n      });\n    });\n  }\n\n  openDoor(x, y) {\n    if (this.tiles[x][y] === closedDoorTile) {\n      this.tiles[x][y] = openDoorTile;\n    }\n  }\n  closeDoor(x, y) {\n    if (this.tiles[x][y] === openDoorTile) {\n      this.tiles[x][y] = closedDoorTile;\n      this.game.messageDisplay.add(\"You close the door\");\n    }\n  }\n\n  getRooms() {\n    return this.rooms;\n  }\n\n  getTiles() {\n    return this.tiles;\n  }\n\n  setTile(x, y, tile) {\n    try {\n      this.tiles[x][y] = tile;\n      return tile;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  getTile(x, y) {\n    try {\n      return this.tiles[x][y];\n    } catch (e) {}\n  }\n}\n\nexport default DungeonMap;\n","import DungeonMap from \"./dungeonMap\";\nimport Entity from \"./entity/entity\";\nimport {\n  WeaponRepository,\n  ItemRepository,\n  ArmorRepository\n} from \"./item/items\";\nimport { Bug, EnemyRepository, PlayerTemplate } from \"./entity/entities\";\nimport { floorTile, wallTile, stairsUpTile, stairsDownTile } from \"./tile\";\n\nclass Level {\n  constructor({ Game, gameWorld, topLevel = false, bottomLevel = false }) {\n    this.game = Game;\n    this.gameWorld = gameWorld;\n    this.width = this.game.getScreenWidth();\n    this.height = this.game.getScreenHeight() * 1.5;\n    this.entities = {};\n    this.map = new DungeonMap({\n      width: this.width,\n      height: this.height,\n      Game: this.game\n    });\n    this.exploredTiles = {};\n    this.items = {};\n    this.player = null;\n\n    this.firstRoom = this.map.getRooms()[0];\n\n    if (topLevel) {\n      this.playerStartPosition = this.getRandomRoomPosition(this.firstRoom);\n    }\n\n    if (!topLevel) {\n      this.stairsUp = this.getRandomFloorPosition();\n      this.map.setTile(this.stairsUp.x, this.stairsUp.y, stairsUpTile);\n    }\n    if (!bottomLevel) {\n      this.stairsDown = this.getRandomFloorPosition();\n      this.map.setTile(this.stairsDown.x, this.stairsDown.y, stairsDownTile);\n    }\n\n    for (let i = 0; i < 8; i++) {\n      const alien = EnemyRepository.createRandom(1);\n      this.addEntityAtRandomPosition(alien);\n    }\n    if (!topLevel) {\n      for (let i = 0; i < 10; i++) {\n        const alien = EnemyRepository.createRandom(2);\n        this.addEntityAtRandomPosition(alien);\n      }\n      for (let i = 0; i < 6; i++) {\n        const alien = EnemyRepository.createRandom();\n        this.addEntityAtRandomPosition(alien);\n      }\n    }\n\n    if (Math.random() < 0.8) {\n      const bugRoom = this.map.getRooms()[4];\n      for (let i = 0; i < 10; i++) {\n        const roomPosition = this.getRandomRoomPosition(bugRoom);\n        const bug = EnemyRepository.create(\"Flying Insect\");\n        bug.setPosition(roomPosition.x, roomPosition.y);\n        this.addEntity(bug);\n      }\n    }\n\n    if (!topLevel && Math.random() < 0.5) {\n      const bugRoom = this.map.getRooms()[3];\n      for (let i = 0; i < 10; i++) {\n        const roomPosition = this.getRandomRoomPosition(bugRoom);\n        const bug = EnemyRepository.create(\"Turret\");\n        bug.setPosition(roomPosition.x, roomPosition.y);\n        this.addEntity(bug);\n      }\n    }\n\n    if (bottomLevel) {\n      for (let i = 0; i < 6; i++) {\n        const alien = EnemyRepository.createRandom(4);\n        this.addEntityAtRandomPosition(alien);\n      }\n    }\n\n    for (let i = 0; i < 2; i++) {\n      this.addItemAtRandomPosition(ItemRepository.createRandom());\n    }\n\n    const weaponOrArmor =\n      Math.random() > 0.5 ? ArmorRepository : WeaponRepository;\n\n    this.addItemAtRandomPosition(weaponOrArmor.createRandom());\n\n    if (topLevel) {\n      let firstRoomPosition = this.getRandomRoomPosition(this.firstRoom);\n\n      // this.addItem(\n      //   ItemRepository.create(\"strength stim syringe\"),\n      //   firstRoomPosition.x,\n      //   firstRoomPosition.y\n      // );\n      // this.addItem(\n      //   ItemRepository.create(\"strength stim syringe\"),\n      //   firstRoomPosition.x,\n      //   firstRoomPosition.y\n      // );\n      // const roomPosition = this.getRandomRoomPosition(this.firstRoom);\n      // const bug = EnemyRepository.create(\"Turret\");\n      // bug.setPosition(roomPosition.x, roomPosition.y);\n      // this.addEntity(bug);\n\n      const otherRoomPosition = this.getRandomRoomPosition();\n      const ship = ItemRepository.create(\"Space Ship\");\n      this.addItem(ship, otherRoomPosition.x, otherRoomPosition.y);\n      this.addItem(\n        WeaponRepository.create(\"crowbar\"),\n        otherRoomPosition.x,\n        otherRoomPosition.y\n      );\n      this.addItem(\n        ItemRepository.createRandom(),\n        otherRoomPosition.x,\n        otherRoomPosition.y\n      );\n    }\n    if (bottomLevel) {\n      this.addItemAtRandomPosition(ItemRepository.create(\"keys\"));\n    }\n  }\n\n  getSurroundingTiles(originX, originY, range = 2) {\n    // returns an array of all the surrounding tiles with an optional range\n    const coords = [];\n    for (let i = -range; i < range + 1; i++) {\n      for (let j = -range; j < range + 1; j++) {\n        const x = originX + i;\n        const y = originY + j;\n        if (this.getEntityAt(x, y)) {\n          coords.push(this.getEntityAt(x, y));\n        } else if (this.map.getTile(x, y)) {\n          coords.push({ x, y, tile: this.map.getTile(x, y) });\n        }\n      }\n    }\n    return coords;\n  }\n\n  lookInDirection(xMod, yMod, entity = this.player, range = 25) {\n    const coords = [];\n    for (let i = 0; i < range + 1; i++) {\n      const x = entity.getX() + xMod * i;\n      const y = entity.getY() + yMod * i;\n      if (this.getEntityAt(x, y)) {\n        coords.push(this.getEntityAt(x, y));\n      } else if (this.map.getTile(x, y)) {\n        coords.push({ x, y, blocksLight: this.map.getTile(x, y).blocksLight });\n      }\n    }\n    return { coords, xMod, yMod };\n  }\n\n  getRandomRoomPosition(room = this.map.getRooms().random()) {\n    return {\n      y:\n        Math.floor(Math.random() * (room.getBottom() - room.getTop())) +\n        room.getTop(),\n      x:\n        Math.floor(Math.random() * (room.getLeft() - room.getRight())) +\n        room.getRight()\n    };\n  }\n\n  getItems() {\n    return this.items;\n  }\n\n  getEntities() {\n    return this.entities;\n  }\n\n  getRandomFloorPosition() {\n    const x = Math.floor(Math.random() * this.width);\n    const y = Math.floor(Math.random() * this.height);\n    if (this.map.getTile(x, y) === floorTile && !this.getEntityAt(x, y)) {\n      return { x, y };\n    } else {\n      return this.getRandomFloorPosition();\n    }\n  }\n\n  addItemAtRandomPosition(item) {\n    const coords = this.getRandomFloorPosition();\n    this.addItem(item, coords.x, coords.y);\n  }\n\n  addItem(item, x, y) {\n    const key = x + \",\" + y;\n    if (this.items[key]) {\n      this.items[key].push(item);\n    } else {\n      this.items[key] = [item];\n    }\n  }\n\n  getItemsAt(x, y) {\n    const key = x + \",\" + y;\n    return this.items[key];\n  }\n\n  setItemsAt(x, y, items) {\n    const key = `${x},${y}`;\n    if (items.length === 0) {\n      if (this.items[key]) {\n        delete this.items[key];\n      }\n    } else {\n      this.items[key] = items;\n    }\n  }\n\n  addEntityAtRandomPosition(entity) {\n    const coords = this.getRandomFloorPosition();\n    entity.setPosition(coords.x, coords.y);\n    this.addEntity(entity);\n  }\n\n  getEntityAt(x, y) {\n    if (this.player && this.player.getX() == x && this.player.getY() == y) {\n      return this.player;\n    }\n    return this.entities[x + \",\" + y];\n  }\n\n  updateEntityPosition(oldX, oldY, newX, newY) {\n    this.entities[newX + \",\" + newY] = this.entities[oldX + \",\" + oldY];\n    delete this.entities[oldX + \",\" + oldY];\n  }\n\n  addEntity(entity) {\n    if (!this.getEntityAt(entity.getX(), entity.getY())) {\n      this.entities[entity.getX() + \",\" + entity.getY()] = entity;\n      entity.setLevel(this);\n      entity.setGame(this.game);\n      if (entity.hasMixin(\"Actor\")) {\n        this.game.getScheduler().add(entity, true);\n      }\n    }\n  }\n\n  removeEntity(entityToRemove) {\n    const key = entityToRemove.getX() + \",\" + entityToRemove.getY();\n    if (this.entities[key] == entityToRemove) {\n      delete this.entities[key];\n      if (entityToRemove.hasMixin(\"Actor\")) {\n        this.game.getScheduler().remove(entityToRemove);\n      }\n    }\n  }\n\n  getMap() {\n    return this.map;\n  }\n}\n\nexport default Level;\n","import Level from \"./level\";\n\nclass GameWorld {\n  constructor(Game) {\n    const topLevel = new Level({ Game, gameWorld: this, topLevel: true });\n    const bottomLevel = new Level({ Game, gameWorld: this, bottomLevel: true });\n    const middleLevels = [];\n    for (let i = 0; i < 3; i++) {\n      middleLevels.push(new Level({ Game, gameWorld: this }));\n    }\n    this.levels = [topLevel, ...middleLevels, bottomLevel];\n    this.currentLevel = this.levels[0];\n  }\n\n  getCurrentLevel() {\n    return this.currentLevel;\n  }\n\n  goDownLevel() {\n    const index = this.levels.indexOf(this.currentLevel);\n    if (index < this.levels.length) {\n      this.currentLevel = this.levels[index + 1];\n      return this.currentLevel;\n    }\n    return false;\n  }\n\n  goUpLevel() {\n    const index = this.levels.indexOf(this.currentLevel);\n    if (index > 0) {\n      this.currentLevel = this.levels[index - 1];\n      return this.currentLevel;\n    }\n    return false;\n  }\n}\n\nexport default GameWorld;\n","const text = {\n  introduction: [\n    \"You wake up in a dimly lit room struggling to remember where you are and how you got there.  \",\n    \"Slowly it comes to you...\",\n    \"You are the pilot of a small mining ship, and you were on your way back to the main station when you came across a large undocumented asteroid. You, the grand opportunist you are, undocked your drilling rig and floated over to check it out. Turns out it was occupied. You're a bit foggy on what came next, but you need to get to your rig and get off this rock.\",\n    \"Fast.\"\n  ],\n  foundShipNoKeys: [\n    \"You've found your ship!\",\n    \"You jump into the one-man mining rig and start to fire it up only to discover that your keys have gone missing.  Frantically you check your pockets but come up with nothing but lint.  These alien monsters must have taken the keys when they ripped you from the cockpit.  Fortunately, the thing seems to be in working order.\",\n    \"You find a couple of useful items in the back. (Pick them up with 'g')\",\n    \"Let's find those keys.\"\n  ],\n  foundKeys: [\"Your keys... now don't lose them.\", \"Back to the ship!\"],\n  foundKeysAndShip: [\n    \"You jam your keys into the ignition and the rig fires up.\",\n    \"Now that you're back in the cockpit blasting yourself free from this cavern is a simple task, and this time you won't let those slimy space-bugs surround you.\",\n    \"You blast yourself free, turn on your navigational systems and head home.\",\n    \"You win.\"\n  ]\n};\n\nexport default text;\n","import ROT from \"rot-js\";\nimport Colors from \"../colors\";\nimport Entity from \"../entity/entity\";\nimport gameOverScreen from \"./gameOverScreen\";\nimport WinScreen from \"./winScreen\";\nimport ItemListDialog from \"./itemListDialog\";\nimport PickUpDialog from \"./pickUpDialog\";\nimport VisibleThingsDialog from \"./visibleThingsDialog\";\nimport Confirmation from \"./confirmation\";\nimport StoryScreen from \"./storyScreen\";\nimport HelpScreen from \"./helpScreen\";\nimport PlayerStatusScreen from \"./playerStatusScreen\";\nimport { WeaponRepository, ItemRepository } from \"../item/items\";\nimport { MonsterTemplate, PlayerTemplate } from \"../entity/entities\";\nimport GameWorld from \"../gameWorld\";\nimport { stairsUpTile, stairsDownTile } from \"../tile\";\nimport text from \"../text\";\n\nclass playScreen {\n  constructor(Game) {\n    this.game = Game;\n    this.gameWorld = new GameWorld(this.game);\n    this.level = this.gameWorld.getCurrentLevel();\n    this.map = this.level.getMap();\n    this.subscreen = null;\n    this.closing = false;\n    this.firing = false;\n    this.foundShip = false;\n    this.gameOver = false;\n    this.win = false;\n    this.game.rangeWeaponDisplay = null;\n\n    this.game.player = new Entity(\n      Object.assign(PlayerTemplate, { map: this.map, Game: this.game })\n    );\n    this.player = this.game.player;\n    this.level.player = this.game.player;\n\n    this.game.messageDisplay.clear();\n\n    this.game.messageDisplay.add({\n      color: \"white\",\n      text: \"Press ? at any time for help\"\n    });\n\n    const position = this.level.playerStartPosition;\n    this.player.setPosition(position.x, position.y);\n    this.game.getScheduler().add(this.player, true);\n    this.game.getEngine().start();\n\n    this.enterSubscreen(new StoryScreen(this, text.introduction));\n  }\n\n  exit() {\n    console.log(\"exit play screen\");\n  }\n\n  handleInput(inputData) {\n    if (this.subscreen) {\n      this.subscreen.handleInput(inputData);\n      return;\n    }\n    //movement\n    const move = function(dX, dY) {\n      if (this.firing) {\n        const array = this.level.lookInDirection(dX, dY);\n        const fireArray = this.player.weapon.fire(array);\n        if (fireArray) {\n          this.game.rangeWeaponDisplay = this.player.weapon.fire(array);\n          this.game.rangeWeaponDisplay.color = this.player.weapon.fg;\n        }\n        this.firing = false;\n        this.game.getEngine().unlock();\n        return;\n      }\n      if (this.closing) {\n        closeDoor(dX, dY);\n        this.game.getEngine().unlock();\n        return;\n      }\n      this.player.tryMove(\n        this.player.getX() + dX,\n        this.player.getY() + dY,\n        this.level\n      );\n      this.game.getEngine().unlock();\n    }.bind(this);\n\n    const closeDoor = function(dX, dY) {\n      this.level\n        .getMap()\n        .closeDoor(this.player.getX() + dX, this.player.getY() + dY);\n      this.closing = false;\n      this.game.getEngine().unlock();\n    }.bind(this);\n\n    if (\n      inputData.keyCode === ROT.VK_H ||\n      inputData.keyCode == ROT.VK_4 ||\n      inputData.keyCode === ROT.VK_NUMPAD4 ||\n      inputData.keyCode == ROT.VK_LEFT\n    ) {\n      move(-1, 0);\n    } else if (\n      inputData.keyCode === ROT.VK_L ||\n      inputData.keyCode == ROT.VK_6 ||\n      inputData.keyCode === ROT.VK_NUMPAD6 ||\n      inputData.keyCode == ROT.VK_RIGHT\n    ) {\n      move(1, 0);\n    } else if (\n      inputData.keyCode === ROT.VK_K ||\n      inputData.keyCode == ROT.VK_8 ||\n      inputData.keyCode === ROT.VK_NUMPAD8 ||\n      inputData.keyCode == ROT.VK_UP\n    ) {\n      move(0, -1);\n    } else if (\n      inputData.keyCode === ROT.VK_J ||\n      inputData.keyCode == ROT.VK_2 ||\n      inputData.keyCode === ROT.VK_NUMPAD2 ||\n      inputData.keyCode == ROT.VK_DOWN\n    ) {\n      move(0, 1);\n    } else if (\n      inputData.keyCode === ROT.VK_Y ||\n      inputData.keyCode === ROT.VK_NUMPAD7 ||\n      inputData.keyCode == ROT.VK_7\n    ) {\n      move(-1, -1);\n    } else if (\n      inputData.keyCode === ROT.VK_U ||\n      inputData.keyCode === ROT.VK_NUMPAD9 ||\n      inputData.keyCode == ROT.VK_9\n    ) {\n      move(1, -1);\n    } else if (\n      inputData.keyCode === ROT.VK_B ||\n      inputData.keyCode === ROT.VK_NUMPAD1 ||\n      inputData.keyCode == ROT.VK_1\n    ) {\n      move(-1, 1);\n    } else if (\n      inputData.keyCode === ROT.VK_N ||\n      inputData.keyCode === ROT.VK_NUMPAD3 ||\n      inputData.keyCode == ROT.VK_3\n    ) {\n      move(1, 1);\n    } else if (\n      inputData.keyCode === ROT.VK_5 ||\n      inputData.keyCode === ROT.VK_NUMPAD5 ||\n      inputData.keyCode === ROT.VK_PERIOD\n    ) {\n      if (inputData.shiftKey) {\n        // go down level\n        if (\n          this.level\n            .getMap()\n            .getTile(this.player.getX(), this.player.getY()) !== stairsDownTile\n        ) {\n          return false;\n        }\n        const newLevel = this.gameWorld.goDownLevel();\n        if (newLevel) {\n          this.level = newLevel;\n          this.player.setPosition(this.level.stairsUp.x, this.level.stairsUp.y);\n          this.level.player = this.player;\n          this.map = this.level.getMap();\n          this.game.refresh();\n        }\n        return;\n      }\n\n      // if no shift key, then wait\n      this.game.getEngine().unlock();\n    } else if (inputData.keyCode === ROT.VK_COMMA && inputData.shiftKey) {\n      // go up level\n      if (\n        this.level.getMap().getTile(this.player.getX(), this.player.getY()) !==\n        stairsUpTile\n      ) {\n        return false;\n      }\n      const newLevel = this.gameWorld.goUpLevel();\n      if (newLevel) {\n        this.level = newLevel;\n        this.player.setPosition(\n          this.level.stairsDown.x,\n          this.level.stairsDown.y\n        );\n        this.level.player = this.player;\n        this.map = this.level.getMap();\n        this.game.refresh();\n        return;\n      }\n    } else if (inputData.keyCode == ROT.VK_C) {\n      this.game.messageDisplay.add({ text: \"Close where?\", color: \"white\" });\n      this.closing = true;\n      return;\n    }\n    if (this.closing) {\n      this.game.messageDisplay.add(\"Nevermind\");\n      this.closing = false;\n    }\n    if (this.firing) {\n      this.game.messageDisplay.add(\"Nevermind\");\n      this.firing = false;\n    }\n    // fire weapon\n\n    if (inputData.keyCode === ROT.VK_F) {\n      if (this.player.weapon && this.player.weapon.hasMixin(\"Fireable\")) {\n        this.game.messageDisplay.add({\n          text: \"Fire weapon where?\",\n          color: \"white\"\n        });\n        this.firing = true;\n      }\n    }\n    // pick up item\n    if (inputData.keyCode === ROT.VK_G || inputData.keyCode == ROT.VK_COMMA) {\n      const item = this.level.getItems()[\n        this.player.getX() + \",\" + this.player.getY()\n      ];\n      if (\n        item.length == 1 &&\n        item[0].canPickUp &&\n        this.player.addItem(item[0])\n      ) {\n        this.level.setItemsAt(this.player.getX(), this.player.getY(), []);\n        this.game.messageDisplay.add(\"you pick up \" + item[0].describeA());\n        if (item[0].hasMixin(\"Equippable\")) {\n          this.game.messageDisplay.add(\"wield it from the (i)nventory screen\");\n        }\n        if (item[0].hasMixin(\"Fireable\")) {\n          this.game.messageDisplay.add(\"then (f)ire it with 'f'\");\n        }\n      }\n      if (item.length > 1) {\n        this.enterSubscreen(new PickUpDialog(item, this, this.player));\n      }\n    }\n    // subscreens\n    if (inputData.keyCode == ROT.VK_I) {\n      this.enterSubscreen(\n        new ItemListDialog(this.player.inventory, this, this.player)\n      );\n    }\n    if (inputData.keyCode == ROT.VK_SLASH) {\n      this.enterSubscreen(new HelpScreen(this));\n    }\n    if (inputData.keyCode == ROT.VK_P) {\n      this.enterSubscreen(new PlayerStatusScreen(this));\n    }\n    if (inputData.keyCode === ROT.VK_V) {\n      const visibleThings = this.player.getVisible();\n      this.enterSubscreen(\n        new VisibleThingsDialog(visibleThings, this, this.player)\n      );\n    }\n  }\n\n  enterSubscreen(subscreen) {\n    this.subscreen = subscreen;\n    this.game.refresh();\n  }\n\n  exitSubscreen() {\n    this.subscreen = null;\n    this.game.refresh();\n  }\n\n  render(Game) {\n    this.level.getSurroundingTiles(this.player.getX(), this.player.getY());\n    if (!this.player.isAlive()) {\n      this.game.switchScreen(gameOverScreen);\n    }\n    const playerStatusDisplay = Game.playerStatusDisplay;\n    const display = Game.getDisplay();\n    const map = this.level.getMap();\n\n    playerStatusDisplay.render({\n      name: this.player.name,\n      hp: this.player.hp,\n      maxHp: this.player.maxHp,\n      statusEffects: this.player.getTimedStatusEffects(),\n      weapon: this.player.weapon,\n      x: this.player.x,\n      y: this.player.y\n    });\n\n    const tile = this.level\n      .getMap()\n      .getTile(this.player.getX(), this.player.getY());\n    if (tile == stairsDownTile) {\n      this.game.messageDisplay.add({\n        color: \"white\",\n        text: \"You see a staircase, press > to go down\"\n      });\n    }\n\n    if (tile == stairsUpTile) {\n      this.game.messageDisplay.add({\n        color: \"white\",\n        text: \"You see a staircase, press < to go up\"\n      });\n    }\n    const items = this.level.getItems();\n    if (items[this.player.getX() + \",\" + this.player.getY()]) {\n      const item = items[this.player.getX() + \",\" + this.player.getY()];\n      if (\n        !this.foundShip &&\n        item.filter(i => i.name == \"Space Ship\").length > 0\n      ) {\n        this.foundShip = true;\n        this.enterSubscreen(new StoryScreen(this, text.foundShipNoKeys));\n        return;\n      }\n      if (!this.foundKeys && item.filter(i => i.name == \"keys\").length > 0) {\n        this.foundKeys = true;\n        this.enterSubscreen(new StoryScreen(this, text.foundKeys));\n        return;\n      }\n      if (\n        !this.win &&\n        this.player.hasItem(\"keys\") &&\n        item.filter(i => i.name == \"Space Ship\").length > 0\n      ) {\n        this.win = true;\n        this.enterSubscreen(\n          new StoryScreen(this, text.foundKeysAndShip, () => {\n            this.game.switchScreen(WinScreen);\n          })\n        );\n        return;\n      }\n      if (item.length == 1) {\n        this.game.messageDisplay.add({\n          text: \"you see \" + item[0].describeA(),\n          color: \"gray\"\n        });\n        if (this.player.inventory.length <= 0) {\n          this.game.messageDisplay.add({\n            text: \"press 'g' to pick it up\",\n            color: \"gray\"\n          });\n        }\n      } else {\n        this.game.messageDisplay.add({\n          text: \"you see several items here\",\n          color: \"gray\"\n        });\n        if (this.player.inventory.length <= 0) {\n          this.game.messageDisplay.add({\n            text: \"press 'g' to pick them up\",\n            color: \"gray\"\n          });\n        }\n      }\n    }\n\n    const screenWidth = Game.getScreenWidth();\n    const screenHeight = Game.getScreenHeight();\n    let topLeftX = Math.max(0, this.player.getX() - screenWidth / 2);\n    topLeftX = Math.min(topLeftX, this.level.width - screenWidth);\n\n    let topLeftY = Math.max(0, this.player.getY() - screenHeight / 2);\n    topLeftY = Math.min(topLeftY, this.level.height - screenHeight);\n\n    const fov = new ROT.FOV.PreciseShadowcasting((x, y) => {\n      if (map.getTile(x, y)) {\n        return !map.getTile(x, y).blocksLight;\n      }\n\n      return false;\n    });\n\n    const visibleTiles = {};\n    const exploredTiles = this.level.exploredTiles;\n    fov.compute(\n      this.player.getX(),\n      this.player.getY(),\n      this.player.getSightRadius(),\n      function(x, y, r, visibility) {\n        visibleTiles[x + \",\" + y] = true;\n        exploredTiles[x + \",\" + y] = true;\n      }\n    );\n\n    for (var x = topLeftX; x < topLeftX + screenWidth; x++) {\n      for (var y = topLeftY; y < topLeftY + screenHeight; y++) {\n        const tile = map.getTile(x, y);\n        if (visibleTiles[x + \",\" + y]) {\n          display.draw(\n            x - topLeftX,\n            y - topLeftY,\n            tile.getChar(),\n            tile.getFg(),\n            tile.getBg()\n          );\n        } else if (this.level.exploredTiles[x + \",\" + y]) {\n          display.draw(\n            x - topLeftX,\n            y - topLeftY,\n            tile.getChar(),\n            Colors.darkBlue,\n            Colors.black\n          );\n        }\n      }\n    }\n\n    Object.keys(items).forEach(itemKey => {\n      const [x, y] = itemKey.split(\",\");\n      const item = items[itemKey];\n      if (visibleTiles[x + \",\" + y]) {\n        display.draw(\n          parseInt(x) - topLeftX,\n          parseInt(y) - topLeftY,\n          item[0].getChar(),\n          item[0].getFg(),\n          item[0].getBg()\n        );\n      }\n    });\n\n    if (this.game.explosionDisplay) {\n      this.game.explosionDisplay.forEach(coord => {\n        const xy = coord.split(\",\");\n        display.draw(\n          xy[0] - topLeftX,\n          xy[1] - topLeftY,\n          \"•\",\n          Colors.orange,\n          Colors.black\n        );\n      });\n      setTimeout(() => {\n        this.game.explosionDisplay = null;\n        this.render(this.game);\n      }, 100);\n    }\n\n    if (this.game.rangeWeaponDisplay) {\n      const xMod = this.game.rangeWeaponDisplay.xMod;\n      const yMod = this.game.rangeWeaponDisplay.yMod;\n      let char = \"\"; //\"/\" : \"|\" : \"\\\\\" :\n      if ((xMod == 1 && yMod == -1) || (xMod == -1 && yMod == 1)) {\n        char = \"/\";\n      } else if ((xMod == -1 && yMod == -1) || (xMod == 1 && yMod == 1)) {\n        char = \"\\\\\";\n      } else if (xMod == 0) {\n        char = \"|\";\n      } else if (yMod == 0) {\n        char = \"-\";\n      }\n      this.game.rangeWeaponDisplay.coords.forEach(coord => {\n        const xy = coord.split(\",\");\n        const fg = this.game.rangeWeaponDisplay.color || Colors.blue;\n        display.draw(\n          xy[0] - topLeftX,\n          xy[1] - topLeftY,\n          char,\n          fg,\n          this.player.getBg()\n        );\n      });\n\n      setTimeout(() => {\n        this.game.rangeWeaponDisplay = null;\n        this.render(this.game);\n      }, 100);\n    }\n\n    const entities = this.level.getEntities();\n    Object.values(entities).forEach(entity => {\n      if (visibleTiles[entity.getX() + \",\" + entity.getY()]) {\n        display.draw(\n          entity.getX() - topLeftX,\n          entity.getY() - topLeftY,\n          entity.getChar(),\n          entity.hit ? Colors.black : entity.getFg(),\n          entity.hit || entity.getBg()\n        );\n        if (entity.hit) {\n          setTimeout(() => {\n            entity.hit = false;\n            this.render(this.game);\n          }, 100);\n        }\n      }\n    });\n    display.draw(\n      this.player.getX() - topLeftX,\n      this.player.getY() - topLeftY,\n      this.player.getChar(),\n      this.player.hit ? Colors.black : this.player.getFg(),\n      this.player.hit || this.player.getBg()\n    );\n    if (this.player.hit) {\n      setTimeout(() => {\n        this.player.hit = false;\n        this.render(this.game);\n      }, 300);\n    }\n    if (this.subscreen) {\n      this.subscreen.render(Game);\n      return;\n    }\n  }\n}\n\nexport default playScreen;\n","import playScreen from \"./playScreen\";\nimport { h, app } from \"hyperapp\";\nimport ROT from \"rot-js\";\n\nclass startScreen {\n  constructor(Game) {\n    this.game = Game;\n    this.display = document.createElement(\"div\");\n    this.display.classList.add(\"start-screen\");\n    app({}, {}, this.view, this.display);\n  }\n\n  view({ text, confirm, cancel }) {\n    return (\n      <div>\n        <h1>SPACE DUNGEON</h1>\n        <h1 id=\"pew\">PEW PEW</h1>\n        <p>PRESS ENTER TO START</p>\n      </div>\n    );\n  }\n\n  exit() {\n    this.display.remove();\n  }\n\n  render() {\n    document.body.appendChild(this.display);\n  }\n\n  handleInput(inputData) {\n    if (inputData.keyCode == ROT.VK_RETURN) {\n      this.game.switchScreen(playScreen);\n      this.display.remove();\n    }\n  }\n}\n\nexport default startScreen;\n","import Colors from \"./colors\";\n\nclass MessageDisplay {\n  constructor(width = \"800px\") {\n    this.messages = [];\n    this.messageScreen = document.createElement(\"div\");\n    Object.assign(this.messageScreen.style, {\n      width: width,\n      \"font-size\": \"15px\",\n      \"letter-spacing\": \"1px\",\n      background: Colors.black,\n      color: Colors.white,\n      \"font-family\": \"Courier, monospace\",\n      height: \"88px\",\n      overflow: \"hidden\",\n      \"margin-top\": \"-8px\",\n      \"border-top\": \"8px solid \" + Colors.black\n    });\n\n    this.messageScreen.textContent = \"  \";\n  }\n  getDisplay() {\n    return this.messageScreen;\n  }\n\n  add(message) {\n    this.messages.push(message);\n    this.render();\n  }\n\n  clear() {\n    this.messages = [];\n    this.render();\n  }\n\n  render() {\n    this.messageScreen.innerHTML = \"\";\n    this.messages\n      .slice(Math.max(this.messages.length - 5, 0))\n      .forEach(message => {\n        let color = \"gray\";\n        if (typeof message == \"object\") {\n          color = message.color;\n          message = message.text;\n        }\n        this.messageScreen.innerHTML += `<div class=\"${color}\">${message}</div>`;\n      });\n  }\n}\n\nexport default MessageDisplay;\n","import Colors from \"./colors\";\n\nclass PlayerStatusDisplay {\n  constructor(width = 800) {\n    this.playerStatus = document.createElement(\"div\");\n    this.playerStatus.classList.add(\"player-status\");\n    Object.assign(this.playerStatus.style, {\n      width: \"800px\",\n      \"font-size\": \"15px\",\n      \"letter-spacing\": \"1px\",\n      background: Colors.black,\n      color: Colors.white,\n      \"font-family\": \"Courier, monospace\",\n      height: \"18px\",\n      overflow: \"hidden\",\n      display: \"flex\"\n    });\n\n    this.playerStatus.textContent = \"  \";\n  }\n  getDisplay() {\n    return this.playerStatus;\n  }\n\n  render({ name = \"Player Name\", hp, maxHp, statusEffects, weapon, x, y }) {\n    const hpColor = hp <= 10 ? \"red\" : \"\";\n    this.playerStatus.innerHTML = \"\";\n    this.playerStatus.innerHTML = `<div class=\"${hpColor}\" style=\"flex: 1\">HEALTH ♥${hp}/${maxHp}<span>${weapon\n      ? weapon.name\n      : \"NO WEAPON\"}</span></div>`;\n    this.playerStatus.innerHTML += \"<div>\";\n    statusEffects.forEach(s => {\n      this.playerStatus.innerHTML += `${s.label}/${s.timer} `;\n    });\n    if (weapon && (weapon.charges == 0 || weapon.charges)) {\n      this.playerStatus.innerHTML += ` Weapon charges remaining: ${weapon.charges}`;\n    }\n    this.playerStatus.innerHTML += \"</div>\";\n  }\n}\n\nexport default PlayerStatusDisplay;\n","import ROT from \"rot-js\";\nimport Colors from \"./colors\";\nimport startScreen from \"./screens/startScreen\";\nimport MessageDisplay from \"./messageDisplay\";\nimport PlayerStatusDisplay from \"./playerStatusDisplay\";\nimport Confirmation from \"./screens/confirmation\";\n\nclass Game {\n  constructor() {\n    this.screenWidth = 80;\n    this.screenHeight = 30;\n    this.scheduler = new ROT.Scheduler.Speed();\n    this.engine = new ROT.Engine(this.scheduler);\n    this.display = new ROT.Display({\n      width: this.screenWidth,\n      height: this.screenHeight,\n      fontFamily: \"Courier, monospace\",\n      fg: Colors.white,\n      bg: Colors.black\n    });\n    this.currentScreen;\n    this.player = null;\n    this.messageDisplay = new MessageDisplay();\n    this.playerStatusDisplay = new PlayerStatusDisplay();\n\n    window.addEventListener(\"keydown\", e => {\n      if (this.currentScreen) {\n        this.currentScreen.handleInput(e);\n      }\n    });\n  }\n\n  getScheduler() {\n    return this.scheduler;\n  }\n  getEngine() {\n    return this.engine;\n  }\n  getDisplay() {\n    return this.display;\n  }\n  getScreenWidth() {\n    return this.screenWidth;\n  }\n  getScreenHeight() {\n    return this.screenHeight;\n  }\n  switchScreen(screen, options = {}) {\n    if (this.currentScreen) {\n      this.currentScreen.exit();\n    }\n    this.currentScreen = new screen(this, options);\n    this.refresh();\n  }\n  refresh() {\n    this.display.clear();\n    this.currentScreen.render(this);\n  }\n}\n\nconst game = new Game();\nexport default game;\n\nwindow.onload = function() {\n  if (!ROT.isSupported()) {\n    alert(\"The rot.js library isn't supported by your browser.\");\n  } else {\n    document.body.appendChild(game.playerStatusDisplay.getDisplay());\n    document.body.appendChild(game.getDisplay().getContainer());\n    document.body.appendChild(game.messageDisplay.getDisplay());\n    game.switchScreen(startScreen);\n  }\n};\n"]}